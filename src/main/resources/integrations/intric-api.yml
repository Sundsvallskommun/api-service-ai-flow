components:
  schemas:
    AcceptedFileType:
      properties:
        mimetype:
          title: Mimetype
          type: string
        size_limit:
          title: Size Limit
          type: integer
      required:
        - mimetype
        - size_limit
      title: AcceptedFileType
      type: object
    AccessToken:
      properties:
        access_token:
          title: Access Token
          type: string
        token_type:
          title: Token Type
          type: string
      required:
        - access_token
        - token_type
      title: AccessToken
      type: object
    AddSpaceMemberRequest:
      properties:
        id:
          format: uuid
          title: Id
          type: string
        role:
          "$ref": "#/components/schemas/SpaceRoleValue"
      required:
        - id
        - role
      title: AddSpaceMemberRequest
      type: object
    AdditionalField:
      properties:
        type:
          "$ref": "#/components/schemas/WizardType"
        value:
          items:
            additionalProperties:
              format: uuid
              type: string
            type: object
          title: Value
          type: array
      required:
        - type
        - value
      title: AdditionalField
      type: object
    AllowedOriginCreate:
      properties:
        tenant_id:
          format: uuid
          title: Tenant Id
          type: string
        url:
          title: Url
          type: string
      required:
        - url
        - tenant_id
      title: AllowedOriginCreate
      type: object
    AllowedOriginInDB:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        tenant_id:
          format: uuid
          title: Tenant Id
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        url:
          title: Url
          type: string
      required:
        - id
        - url
        - tenant_id
      title: AllowedOriginInDB
      type: object
    AllowedOriginPublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        url:
          title: Url
          type: string
      required:
        - id
        - url
      title: AllowedOriginPublic
      type: object
    ApiKey:
      properties:
        key:
          title: Key
          type: string
        truncated_key:
          title: Truncated Key
          type: string
      required:
        - truncated_key
        - key
      title: ApiKey
      type: object
    ApiKeyInDB:
      properties:
        assistant_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Assistant Id
        key:
          title: Key
          type: string
        truncated_key:
          title: Truncated Key
          type: string
        user_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: User Id
      required:
        - truncated_key
        - key
        - user_id
        - assistant_id
      title: ApiKeyInDB
      type: object
    AppInTemplatePublic:
      properties:
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModelPublicAppTemplate"
            - type: 'null'
        completion_model_kwargs:
          additionalProperties: true
          title: Completion Model Kwargs
          type: object
        input_description:
          anyOf:
            - type: string
            - type: 'null'
          title: Input Description
        input_type:
          title: Input Type
          type: string
        name:
          title: Name
          type: string
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptPublicAppTemplate"
            - type: 'null'
      required:
        - name
        - completion_model
        - completion_model_kwargs
        - prompt
        - input_description
        - input_type
      title: AppInTemplatePublic
      type: object
    AppPublic:
      properties:
        allowed_attachments:
          "$ref": "#/components/schemas/FileRestrictions"
        attachments:
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Attachments
          type: array
        completion_model:
          "$ref": "#/components/schemas/CompletionModelSparse"
        completion_model_kwargs:
          "$ref": "#/components/schemas/ModelKwargs"
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        data_retention_days:
          anyOf:
            - type: integer
            - type: 'null'
          title: Data Retention Days
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        id:
          format: uuid
          title: Id
          type: string
        input_fields:
          items:
            "$ref": "#/components/schemas/InputFieldPublic"
          title: Input Fields
          type: array
        name:
          title: Name
          type: string
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptPublic"
            - type: 'null'
        published:
          title: Published
          type: boolean
        transcription_model:
          "$ref": "#/components/schemas/TranscriptionModelPublic"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
        - description
        - input_fields
        - attachments
        - prompt
        - completion_model
        - completion_model_kwargs
        - allowed_attachments
        - published
        - transcription_model
      title: AppPublic
      type: object
    AppRunInput:
      properties:
        files:
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Files
          type: array
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      required:
        - files
        - text
      title: AppRunInput
      type: object
    AppRunPublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        finished_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Finished At
        id:
          format: uuid
          title: Id
          type: string
        input:
          "$ref": "#/components/schemas/AppRunInput"
        output:
          type: string
          title: Output
        status:
          "$ref": "#/components/schemas/Status"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        user:
          "$ref": "#/components/schemas/UserSparse"
      required:
        - id
        - input
        - status
        - finished_at
        - user
        - output
      title: AppRunPublic
      type: object
    AppRunSparse:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        finished_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Finished At
        id:
          format: uuid
          title: Id
          type: string
        input:
          "$ref": "#/components/schemas/AppRunInput"
        status:
          "$ref": "#/components/schemas/Status"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        user:
          "$ref": "#/components/schemas/UserSparse"
      required:
        - id
        - input
        - status
        - finished_at
        - user
      title: AppRunSparse
      type: object
    AppSparse:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        published:
          title: Published
          type: boolean
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        user_id:
          format: uuid
          title: User Id
          type: string
      required:
        - id
        - name
        - published
        - user_id
      title: AppSparse
      type: object
    AppTemplateListPublic:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          items:
            "$ref": "#/components/schemas/AppTemplatePublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: AppTemplateListPublic
      type: object
    AppTemplateOrganization:
      properties:
        name:
          title: Name
          type: string
      required:
        - name
      title: AppTemplateOrganization
      type: object
    AppTemplatePublic:
      properties:
        app:
          "$ref": "#/components/schemas/AppInTemplatePublic"
        category:
          title: Category
          type: string
        created_at:
          format: date-time
          title: Created At
          type: string
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        organization:
          "$ref": "#/components/schemas/AppTemplateOrganization"
        type:
          const: app
          title: Type
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
        wizard:
          "$ref": "#/components/schemas/AppTemplateWizard"
      required:
        - id
        - created_at
        - updated_at
        - name
        - description
        - category
        - app
        - type
        - wizard
        - organization
      title: AppTemplatePublic
      type: object
    AppTemplateWizard:
      properties:
        attachments:
          anyOf:
            - "$ref": "#/components/schemas/TemplateWizard"
            - type: 'null'
        collections:
          anyOf:
            - "$ref": "#/components/schemas/TemplateWizard"
            - type: 'null'
      required:
        - attachments
        - collections
      title: AppTemplateWizard
      type: object
    AppUpdateRequest:
      properties:
        attachments:
          anyOf:
            - items:
                "$ref": "#/components/schemas/ModelId"
              type: array
            - type: 'null'
          title: Attachments
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
        data_retention_days:
          anyOf:
            - type: integer
            - type: 'null'
          default: NOT_PROVIDED
          title: Data Retention Days
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        input_fields:
          anyOf:
            - items:
                "$ref": "#/components/schemas/InputField"
              type: array
            - type: 'null'
          title: Input Fields
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptCreate"
            - type: 'null'
        transcription_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
      title: AppUpdateRequest
      type: object
    Applications:
      properties:
        apps:
          "$ref": "#/components/schemas/PaginatedPermissions_AppSparse_"
        assistants:
          "$ref": "#/components/schemas/PaginatedPermissions_AssistantSparse_"
        group_chats:
          "$ref": "#/components/schemas/PaginatedPermissions_GroupChatSparse_"
        services:
          "$ref": "#/components/schemas/PaginatedPermissions_ServiceSparse_"
      required:
        - assistants
        - group_chats
        - services
        - apps
      title: Applications
      type: object
    AskAnalysis:
      properties:
        completion_model_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Completion Model Id
        question:
          title: Question
          type: string
        stream:
          default: false
          title: Stream
          type: boolean
      required:
        - question
      title: AskAnalysis
      type: object
    AskAssistant:
      properties:
        files:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ModelId"
          maxItems: 5
          title: Files
          type: array
        question:
          title: Question
          type: string
        session_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Session Id
        stream:
          default: false
          title: Stream
          type: boolean
        tools:
          anyOf:
            - "$ref": "#/components/schemas/UseTools"
            - type: 'null'
      required:
        - question
      title: AskAssistant
      type: object
    AskResponse:
      properties:
        answer:
          title: Answer
          type: string
        files:
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Files
          type: array
        generated_files:
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Generated Files
          type: array
        model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModelPublic"
            - type: 'null'
        question:
          title: Question
          type: string
        references:
          items:
            "$ref": "#/components/schemas/InfoBlobAskAssistantPublic"
          title: References
          type: array
        session_id:
          format: uuid
          title: Session Id
          type: string
        tools:
          "$ref": "#/components/schemas/UseTools"
        web_search_references:
          items:
            "$ref": "#/components/schemas/WebSearchResultPublic"
          title: Web Search References
          type: array
      required:
        - session_id
        - question
        - answer
        - files
        - generated_files
        - references
        - tools
        - web_search_references
      title: AskResponse
      type: object
    AssistantCreatePublic:
      properties:
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
        groups:
          default: [ ]
          deprecated: true
          description: This field is deprecated and will be ignored
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Groups
          type: array
        guardrail:
          anyOf:
            - "$ref": "#/components/schemas/AssistantGuard"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
        integration_knowledge_list:
          default: [ ]
          deprecated: true
          description: This field is deprecated and will be ignored
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Integration Knowledge List
          type: array
        logging_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
          title: Logging Enabled
        name:
          title: Name
          type: string
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptCreate"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
        space_id:
          format: uuid
          title: Space Id
          type: string
        websites:
          default: [ ]
          deprecated: true
          description: This field is deprecated and will be ignored
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Websites
          type: array
      required:
        - name
        - space_id
      title: AssistantCreatePublic
      type: object
    AssistantGuard:
      properties:
        guardrail_active:
          default: true
          title: Guardrail Active
          type: boolean
        guardrail_string:
          default: ''
          title: Guardrail String
          type: string
        on_fail_message:
          default: Jag kan tyvärr inte svara på det. Fråga gärna något annat!
          title: On Fail Message
          type: string
      title: AssistantGuard
      type: object
    AssistantInTemplatePublic:
      properties:
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModelPublicAssistantTemplate"
            - type: 'null'
        completion_model_kwargs:
          additionalProperties: true
          default: { }
          title: Completion Model Kwargs
          type: object
        name:
          title: Name
          type: string
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptPublicAssistantTemplate"
            - type: 'null'
      required:
        - name
        - completion_model
        - prompt
      title: AssistantInTemplatePublic
      type: object
    AssistantMetadata:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        id:
          format: uuid
          title: Id
          type: string
      required:
        - id
        - created_at
      title: AssistantMetadata
      type: object
    AssistantPublic:
      properties:
        allowed_attachments:
          "$ref": "#/components/schemas/FileRestrictions"
        attachments:
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Attachments
          type: array
        completion_model:
          "$ref": "#/components/schemas/CompletionModelSparse"
        completion_model_kwargs:
          "$ref": "#/components/schemas/ModelKwargs"
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        data_retention_days:
          anyOf:
            - type: integer
            - type: 'null'
          description: Number of days to retain data for this assistant
          title: Data Retention Days
        description:
          anyOf:
            - type: string
            - type: 'null'
          description: A description of the assitant that will be used as default
            description in GroupChatAssistantPublic
          example: This is a helpful AI assistant
          title: Description
        groups:
          items:
            "$ref": "#/components/schemas/CollectionPublic"
          title: Groups
          type: array
        id:
          format: uuid
          title: Id
          type: string
        insight_enabled:
          description: Whether insights are enabled for this assistant. If enabled,
            users with appropriate permissions can see all sessions for this assistant.
          title: Insight Enabled
          type: boolean
        integration_knowledge_list:
          items:
            "$ref": "#/components/schemas/IntegrationKnowledgePublic"
          title: Integration Knowledge List
          type: array
        logging_enabled:
          title: Logging Enabled
          type: boolean
        metadata_json:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          description: Metadata for the assistant
          title: Metadata Json
        name:
          title: Name
          type: string
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptPublic"
            - type: 'null'
        published:
          default: false
          title: Published
          type: boolean
        space_id:
          format: uuid
          title: Space Id
          type: string
        tools:
          "$ref": "#/components/schemas/UseTools"
        type:
          "$ref": "#/components/schemas/AssistantType"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        user:
          "$ref": "#/components/schemas/UserSparse"
        websites:
          items:
            "$ref": "#/components/schemas/WebsitePublic"
          title: Websites
          type: array
      required:
        - id
        - name
        - space_id
        - completion_model_kwargs
        - logging_enabled
        - attachments
        - allowed_attachments
        - groups
        - websites
        - integration_knowledge_list
        - completion_model
        - user
        - tools
        - type
        - insight_enabled
      title: AssistantPublic
      type: object
    AssistantSparse:
      properties:
        completion_model_kwargs:
          "$ref": "#/components/schemas/ModelKwargs"
          default: { }
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        id:
          format: uuid
          title: Id
          type: string
        logging_enabled:
          default: false
          title: Logging Enabled
          type: boolean
        metadata_json:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          description: Metadata for the assistant
          title: Metadata Json
        name:
          title: Name
          type: string
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        published:
          default: false
          title: Published
          type: boolean
        type:
          "$ref": "#/components/schemas/AssistantType"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        user_id:
          format: uuid
          title: User Id
          type: string
      required:
        - id
        - name
        - user_id
        - type
      title: AssistantSparse
      type: object
    AssistantTemplateListPublic:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          items:
            "$ref": "#/components/schemas/AssistantTemplatePublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: AssistantTemplateListPublic
      type: object
    AssistantTemplateOrganization:
      properties:
        name:
          title: Name
          type: string
      required:
        - name
      title: AssistantTemplateOrganization
      type: object
    AssistantTemplatePublic:
      properties:
        assistant:
          "$ref": "#/components/schemas/AssistantInTemplatePublic"
        category:
          title: Category
          type: string
        created_at:
          format: date-time
          title: Created At
          type: string
        description:
          title: Description
          type: string
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        organization:
          "$ref": "#/components/schemas/AssistantTemplateOrganization"
        type:
          const: assistant
          title: Type
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
        wizard:
          "$ref": "#/components/schemas/AssistantTemplateWizard"
      required:
        - id
        - created_at
        - updated_at
        - name
        - description
        - category
        - assistant
        - type
        - wizard
        - organization
      title: AssistantTemplatePublic
      type: object
    AssistantTemplateWizard:
      properties:
        attachments:
          anyOf:
            - "$ref": "#/components/schemas/TemplateWizard"
            - type: 'null'
        collections:
          anyOf:
            - "$ref": "#/components/schemas/TemplateWizard"
            - type: 'null'
      required:
        - attachments
        - collections
      title: AssistantTemplateWizard
      type: object
    AssistantType:
      enum:
        - assistant
        - default-assistant
      title: AssistantType
      type: string
    AttachmentLimits:
      properties:
        formats:
          items:
            "$ref": "#/components/schemas/FormatLimit"
          title: Formats
          type: array
        max_in_question:
          title: Max In Question
          type: integer
      required:
        - formats
        - max_in_question
      title: AttachmentLimits
      type: object
    AuthCallbackParams:
      properties:
        auth_code:
          title: Auth Code
          type: string
        tenant_integration_id:
          format: uuid
          title: Tenant Integration Id
          type: string
      required:
        - auth_code
        - tenant_integration_id
      title: AuthCallbackParams
      type: object
    AuthUrlPublic:
      properties:
        auth_url:
          title: Auth Url
          type: string
      required:
        - auth_url
      title: AuthUrlPublic
      type: object
    Body_Login_api_v1_users_login_token__post:
      properties:
        client_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Client Id
        client_secret:
          anyOf:
            - type: string
            - type: 'null'
          title: Client Secret
        grant_type:
          anyOf:
            - pattern: password
              type: string
            - type: 'null'
          title: Grant Type
        password:
          title: Password
          type: string
        scope:
          default: ''
          title: Scope
          type: string
        username:
          title: Username
          type: string
      required:
        - username
        - password
      title: Body_Login_api_v1_users_login_token__post
      type: object
    Body_upload_file_api_v1_files__post:
      properties:
        upload_file:
          format: binary
          title: Upload File
          type: string
      required:
        - upload_file
      title: Body_upload_file_api_v1_files__post
      type: object
    Body_upload_file_api_v1_groups__id__info_blobs_upload__post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
        - file
      title: Body_upload_file_api_v1_groups__id__info_blobs_upload__post
      type: object
    CollectionMetadata:
      properties:
        num_info_blobs:
          title: Num Info Blobs
          type: integer
        size:
          title: Size
          type: integer
      required:
        - num_info_blobs
        - size
      title: CollectionMetadata
      type: object
    CollectionPublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        embedding_model:
          "$ref": "#/components/schemas/EmbeddingModelPublic"
        id:
          format: uuid
          title: Id
          type: string
        metadata:
          "$ref": "#/components/schemas/CollectionMetadata"
        name:
          title: Name
          type: string
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
        - embedding_model
        - metadata
      title: CollectionPublic
      type: object
    CollectionUpdate:
      properties:
        name:
          title: Name
          type: string
      required:
        - name
      title: CollectionUpdate
      type: object
    CompletionModel:
      properties:
        base_url:
          anyOf:
            - type: string
            - type: 'null'
          title: Base Url
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        deployment_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Deployment Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        family:
          "$ref": "#/components/schemas/ModelFamily"
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        id:
          format: uuid
          title: Id
          type: string
        is_deprecated:
          title: Is Deprecated
          type: boolean
        is_org_default:
          default: false
          title: Is Org Default
          type: boolean
        is_org_enabled:
          default: false
          title: Is Org Enabled
          type: boolean
        name:
          title: Name
          type: string
        nickname:
          title: Nickname
          type: string
        nr_billion_parameters:
          anyOf:
            - type: integer
            - type: 'null'
          title: Nr Billion Parameters
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        reasoning:
          title: Reasoning
          type: boolean
        stability:
          "$ref": "#/components/schemas/ModelStability"
        token_limit:
          title: Token Limit
          type: integer
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        vision:
          title: Vision
          type: boolean
      required:
        - id
        - name
        - nickname
        - family
        - token_limit
        - is_deprecated
        - stability
        - hosting
        - vision
        - reasoning
      title: CompletionModel
      type: object
    CompletionModelPublic:
      properties:
        base_url:
          anyOf:
            - type: string
            - type: 'null'
          title: Base Url
        can_access:
          default: false
          title: Can Access
          type: boolean
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        deployment_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Deployment Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        family:
          "$ref": "#/components/schemas/ModelFamily"
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        id:
          format: uuid
          title: Id
          type: string
        is_deprecated:
          title: Is Deprecated
          type: boolean
        is_locked:
          default: true
          title: Is Locked
          type: boolean
        is_org_default:
          default: false
          title: Is Org Default
          type: boolean
        is_org_enabled:
          default: false
          title: Is Org Enabled
          type: boolean
        name:
          title: Name
          type: string
        nickname:
          title: Nickname
          type: string
        nr_billion_parameters:
          anyOf:
            - type: integer
            - type: 'null'
          title: Nr Billion Parameters
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        reasoning:
          title: Reasoning
          type: boolean
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
        stability:
          "$ref": "#/components/schemas/ModelStability"
        token_limit:
          title: Token Limit
          type: integer
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        vision:
          title: Vision
          type: boolean
      required:
        - id
        - name
        - nickname
        - family
        - token_limit
        - is_deprecated
        - stability
        - hosting
        - vision
        - reasoning
      title: CompletionModelPublic
      type: object
    CompletionModelPublicAppTemplate:
      properties:
        id:
          format: uuid
          title: Id
          type: string
      required:
        - id
      title: CompletionModelPublicAppTemplate
      type: object
    CompletionModelPublicAssistantTemplate:
      properties:
        id:
          format: uuid
          title: Id
          type: string
      required:
        - id
      title: CompletionModelPublicAssistantTemplate
      type: object
    CompletionModelSecurityStatus:
      properties:
        base_url:
          anyOf:
            - type: string
            - type: 'null'
          title: Base Url
        can_access:
          default: false
          title: Can Access
          type: boolean
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        deployment_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Deployment Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        family:
          "$ref": "#/components/schemas/ModelFamily"
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        id:
          format: uuid
          title: Id
          type: string
        is_deprecated:
          title: Is Deprecated
          type: boolean
        is_locked:
          default: true
          title: Is Locked
          type: boolean
        is_org_default:
          default: false
          title: Is Org Default
          type: boolean
        is_org_enabled:
          default: false
          title: Is Org Enabled
          type: boolean
        meets_security_classification:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Meets Security Classification
        name:
          title: Name
          type: string
        nickname:
          title: Nickname
          type: string
        nr_billion_parameters:
          anyOf:
            - type: integer
            - type: 'null'
          title: Nr Billion Parameters
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        reasoning:
          title: Reasoning
          type: boolean
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
        stability:
          "$ref": "#/components/schemas/ModelStability"
        token_limit:
          title: Token Limit
          type: integer
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        vision:
          title: Vision
          type: boolean
      required:
        - id
        - name
        - nickname
        - family
        - token_limit
        - is_deprecated
        - stability
        - hosting
        - vision
        - reasoning
      title: CompletionModelSecurityStatus
      type: object
    CompletionModelSparse:
      properties:
        base_url:
          anyOf:
            - type: string
            - type: 'null'
          title: Base Url
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        deployment_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Deployment Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        family:
          "$ref": "#/components/schemas/ModelFamily"
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        id:
          format: uuid
          title: Id
          type: string
        is_deprecated:
          title: Is Deprecated
          type: boolean
        name:
          title: Name
          type: string
        nickname:
          title: Nickname
          type: string
        nr_billion_parameters:
          anyOf:
            - type: integer
            - type: 'null'
          title: Nr Billion Parameters
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        reasoning:
          title: Reasoning
          type: boolean
        stability:
          "$ref": "#/components/schemas/ModelStability"
        token_limit:
          title: Token Limit
          type: integer
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        vision:
          title: Vision
          type: boolean
      required:
        - id
        - name
        - nickname
        - family
        - token_limit
        - is_deprecated
        - stability
        - hosting
        - vision
        - reasoning
      title: CompletionModelSparse
      type: object
    CompletionModelUpdateFlags:
      properties:
        is_org_default:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Org Default
        is_org_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Org Enabled
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          default: NOT_PROVIDED
          title: Security Classification
      title: CompletionModelUpdateFlags
      type: object
    ContentDisposition:
      enum:
        - attachment
        - inline
      title: ContentDisposition
      type: string
    ConversationInsightResponse:
      properties:
        total_conversations:
          title: Total Conversations
          type: integer
        total_questions:
          title: Total Questions
          type: integer
      required:
        - total_conversations
        - total_questions
      title: ConversationInsightResponse
      type: object
    ConversationRequest:
      description: |-
        A unified model for asking questions to either assistants or group chats.

        Either session_id, assistant_id, or group_chat_id must be provided.
        If session_id is provided, the conversation will continue with the existing session.

        For group chats:
        - If tools.assistants contains an assistant, that specific assistant will be targeted
          (requires the group chat to have allow_mentions=True).
        - If no assistant is targeted, the most appropriate assistant will be selected.
      properties:
        assistant_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Assistant Id
        files:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ModelId"
          maxItems: 5
          title: Files
          type: array
        group_chat_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Group Chat Id
        question:
          title: Question
          type: string
        session_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Session Id
        stream:
          default: false
          title: Stream
          type: boolean
        tools:
          anyOf:
            - "$ref": "#/components/schemas/UseTools"
            - type: 'null'
        use_web_search:
          default: false
          title: Use Web Search
          type: boolean
      required:
        - question
      title: ConversationRequest
      type: object
    Counts:
      properties:
        assistants:
          title: Assistants
          type: integer
        questions:
          title: Questions
          type: integer
        sessions:
          title: Sessions
          type: integer
      required:
        - assistants
        - sessions
        - questions
      title: Counts
      type: object
    CrawlType:
      enum:
        - crawl
        - sitemap
      title: CrawlType
      type: string
    CreateGroupRequest:
      properties:
        embedding_model:
          "$ref": "#/components/schemas/ModelId"
        name:
          title: Name
          type: string
      required:
        - name
        - embedding_model
      title: CreateGroupRequest
      type: object
    CreateSpaceAppRequest:
      properties:
        from_template:
          anyOf:
            - "$ref": "#/components/schemas/TemplateCreate"
            - type: 'null'
        name:
          title: Name
          type: string
      required:
        - name
      title: CreateSpaceAppRequest
      type: object
    CreateSpaceAssistantRequest:
      properties:
        from_template:
          anyOf:
            - "$ref": "#/components/schemas/TemplateCreate"
            - type: 'null'
        name:
          title: Name
          type: string
      required:
        - name
      title: CreateSpaceAssistantRequest
      type: object
    CreateSpaceGroupsRequest:
      properties:
        embedding_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
        name:
          title: Name
          type: string
      required:
        - name
      title: CreateSpaceGroupsRequest
      type: object
    CreateSpaceIntegrationKnowledge:
      properties:
        embedding_model:
          "$ref": "#/components/schemas/ModelId"
        key:
          anyOf:
            - type: string
            - type: 'null'
          title: Key
        name:
          title: Name
          type: string
        url:
          title: Url
          type: string
      required:
        - name
        - embedding_model
        - url
      title: CreateSpaceIntegrationKnowledge
      type: object
    CreateSpaceRequest:
      properties:
        name:
          title: Name
          type: string
      required:
        - name
      title: CreateSpaceRequest
      type: object
    CreateSpaceServiceRequest:
      properties:
        name:
          title: Name
          type: string
      required:
        - name
      title: CreateSpaceServiceRequest
      type: object
    CreateSpaceServiceResponse:
      properties:
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModelSparse"
            - type: 'null'
        completion_model_kwargs:
          "$ref": "#/components/schemas/ModelKwargs"
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        groups:
          items:
            "$ref": "#/components/schemas/GroupPublicWithMetadata"
          title: Groups
          type: array
        id:
          format: uuid
          title: Id
          type: string
        json_schema:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Json Schema
        name:
          title: Name
          type: string
        output_format:
          anyOf:
            - enum:
                - json
                - list
                - boolean
              type: string
            - type: 'null'
          title: Output Format
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        prompt:
          title: Prompt
          type: string
        published:
          default: false
          title: Published
          type: boolean
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        user:
          "$ref": "#/components/schemas/UserSparse"
      required:
        - id
        - name
        - prompt
        - completion_model_kwargs
        - groups
        - completion_model
        - user
      title: CreateSpaceServiceResponse
      type: object
    CursorPaginatedResponse_SessionMetadataPublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/SessionMetadataPublic"
          title: Items
          type: array
        limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Limit
        next_cursor:
          anyOf:
            - format: date-time
              type: string
            - type: string
            - type: 'null'
          title: Next Cursor
        previous_cursor:
          anyOf:
            - format: date-time
              type: string
            - type: string
            - type: 'null'
          title: Previous Cursor
        total_count:
          title: Total Count
          type: integer
      required:
        - items
        - total_count
        - count
      title: CursorPaginatedResponse[SessionMetadataPublic]
      type: object
    CursorPaginatedResponse_UserSparse_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/UserSparse"
          title: Items
          type: array
        limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Limit
        next_cursor:
          anyOf:
            - format: date-time
              type: string
            - type: string
            - type: 'null'
          title: Next Cursor
        previous_cursor:
          anyOf:
            - format: date-time
              type: string
            - type: string
            - type: 'null'
          title: Previous Cursor
        total_count:
          title: Total Count
          type: integer
      required:
        - items
        - total_count
        - count
      title: CursorPaginatedResponse[UserSparse]
      type: object
    Dashboard:
      properties:
        spaces:
          "$ref": "#/components/schemas/PaginatedResponse_SpaceDashboard_"
      required:
        - spaces
      title: Dashboard
      type: object
    DefaultAssistant:
      properties:
        allowed_attachments:
          "$ref": "#/components/schemas/FileRestrictions"
        attachments:
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Attachments
          type: array
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModelSparse"
            - type: 'null'
        completion_model_kwargs:
          "$ref": "#/components/schemas/ModelKwargs"
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        data_retention_days:
          anyOf:
            - type: integer
            - type: 'null'
          description: Number of days to retain data for this assistant
          title: Data Retention Days
        description:
          anyOf:
            - type: string
            - type: 'null'
          description: A description of the assitant that will be used as default
            description in GroupChatAssistantPublic
          example: This is a helpful AI assistant
          title: Description
        groups:
          items:
            "$ref": "#/components/schemas/CollectionPublic"
          title: Groups
          type: array
        id:
          format: uuid
          title: Id
          type: string
        insight_enabled:
          default: false
          title: Insight Enabled
          type: boolean
        integration_knowledge_list:
          items:
            "$ref": "#/components/schemas/IntegrationKnowledgePublic"
          title: Integration Knowledge List
          type: array
        logging_enabled:
          title: Logging Enabled
          type: boolean
        metadata_json:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          description: Metadata for the assistant
          title: Metadata Json
        name:
          title: Name
          type: string
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptPublic"
            - type: 'null'
        published:
          default: false
          title: Published
          type: boolean
        space_id:
          format: uuid
          title: Space Id
          type: string
        tools:
          "$ref": "#/components/schemas/UseTools"
        type:
          "$ref": "#/components/schemas/AssistantType"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        user:
          "$ref": "#/components/schemas/UserSparse"
        websites:
          items:
            "$ref": "#/components/schemas/WebsitePublic"
          title: Websites
          type: array
      required:
        - id
        - name
        - space_id
        - completion_model_kwargs
        - logging_enabled
        - attachments
        - allowed_attachments
        - groups
        - websites
        - integration_knowledge_list
        - user
        - tools
        - type
      title: DefaultAssistant
      type: object
    DeleteResponse:
      properties:
        success:
          title: Success
          type: boolean
      required:
        - success
      title: DeleteResponse
      type: object
    EmbeddingModelFamily:
      enum:
        - openai
        - mini_lm
        - e5
      title: EmbeddingModelFamily
      type: string
    EmbeddingModelLegacy:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        dimensions:
          anyOf:
            - type: integer
            - type: 'null'
          title: Dimensions
        family:
          "$ref": "#/components/schemas/EmbeddingModelFamily"
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        id:
          format: uuid
          title: Id
          type: string
        is_deprecated:
          title: Is Deprecated
          type: boolean
        is_org_enabled:
          default: false
          title: Is Org Enabled
          type: boolean
        max_input:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Input
        name:
          title: Name
          type: string
        open_source:
          title: Open Source
          type: boolean
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        stability:
          "$ref": "#/components/schemas/ModelStability"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
        - family
        - is_deprecated
        - open_source
        - stability
        - hosting
      title: EmbeddingModelLegacy
      type: object
    EmbeddingModelPublic:
      properties:
        can_access:
          default: false
          title: Can Access
          type: boolean
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        dimensions:
          anyOf:
            - type: integer
            - type: 'null'
          title: Dimensions
        family:
          "$ref": "#/components/schemas/ModelFamily"
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        id:
          format: uuid
          title: Id
          type: string
        is_deprecated:
          title: Is Deprecated
          type: boolean
        is_locked:
          default: true
          title: Is Locked
          type: boolean
        is_org_enabled:
          default: false
          title: Is Org Enabled
          type: boolean
        max_input:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Input
        name:
          title: Name
          type: string
        open_source:
          title: Open Source
          type: boolean
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
        stability:
          "$ref": "#/components/schemas/ModelStability"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
        - family
        - is_deprecated
        - open_source
        - stability
        - hosting
      title: EmbeddingModelPublic
      type: object
    EmbeddingModelPublicLegacy:
      properties:
        can_access:
          default: false
          title: Can Access
          type: boolean
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        dimensions:
          anyOf:
            - type: integer
            - type: 'null'
          title: Dimensions
        family:
          "$ref": "#/components/schemas/EmbeddingModelFamily"
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        id:
          format: uuid
          title: Id
          type: string
        is_deprecated:
          title: Is Deprecated
          type: boolean
        is_locked:
          default: true
          title: Is Locked
          type: boolean
        is_org_enabled:
          default: false
          title: Is Org Enabled
          type: boolean
        max_input:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Input
        name:
          title: Name
          type: string
        open_source:
          title: Open Source
          type: boolean
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        stability:
          "$ref": "#/components/schemas/ModelStability"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
        - family
        - is_deprecated
        - open_source
        - stability
        - hosting
      title: EmbeddingModelPublicLegacy
      type: object
    EmbeddingModelSecurityStatus:
      properties:
        can_access:
          default: false
          title: Can Access
          type: boolean
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        dimensions:
          anyOf:
            - type: integer
            - type: 'null'
          title: Dimensions
        family:
          "$ref": "#/components/schemas/ModelFamily"
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        id:
          format: uuid
          title: Id
          type: string
        is_deprecated:
          title: Is Deprecated
          type: boolean
        is_locked:
          default: true
          title: Is Locked
          type: boolean
        is_org_enabled:
          default: false
          title: Is Org Enabled
          type: boolean
        max_input:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Input
        meets_security_classification:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Meets Security Classification
        name:
          title: Name
          type: string
        open_source:
          title: Open Source
          type: boolean
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
        stability:
          "$ref": "#/components/schemas/ModelStability"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
        - family
        - is_deprecated
        - open_source
        - stability
        - hosting
      title: EmbeddingModelSecurityStatus
      type: object
    EmbeddingModelUpdate:
      properties:
        is_org_enabled:
          default: false
          title: Is Org Enabled
          type: boolean
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          default: NOT_PROVIDED
          title: Security Classification
      title: EmbeddingModelUpdate
      type: object
    EmbeddingModelUpdateFlags:
      properties:
        is_org_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          default: false
          title: Is Org Enabled
      title: EmbeddingModelUpdateFlags
      type: object
    ErrorCodes:
      enum:
        - 9000
        - 9001
        - 9002
        - 9003
        - 9004
        - 9005
        - 9006
        - 9007
        - 9008
        - 9009
        - 9010
        - 9011
        - 9012
        - 9013
        - 9014
        - 9015
        - 9016
        - 9017
        - 9018
        - 9019
        - 9020
        - 9021
        - 9022
        - 9023
        - 9024
        - 9025
      title: ErrorCodes
      type: integer
    FilePublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        mimetype:
          title: Mimetype
          type: string
        name:
          title: Name
          type: string
        size:
          title: Size
          type: integer
        transcription:
          anyOf:
            - type: string
            - type: 'null'
          title: Transcription
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
        - mimetype
        - size
      title: FilePublic
      type: object
    FileRestrictions:
      properties:
        accepted_file_types:
          items:
            "$ref": "#/components/schemas/AcceptedFileType"
          title: Accepted File Types
          type: array
        limit:
          "$ref": "#/components/schemas/Limit"
      required:
        - accepted_file_types
        - limit
      title: FileRestrictions
      type: object
    FormatLimit:
      properties:
        extensions:
          items:
            type: string
          title: Extensions
          type: array
        mimetype:
          title: Mimetype
          type: string
        size:
          title: Size
          type: integer
        vision:
          title: Vision
          type: boolean
      required:
        - mimetype
        - size
        - extensions
        - vision
      title: FormatLimit
      type: object
    GeneralError:
      properties:
        intric_error_code:
          "$ref": "#/components/schemas/ErrorCodes"
        message:
          title: Message
          type: string
      required:
        - message
        - intric_error_code
      title: GeneralError
      type: object
    GetModelsResponse:
      properties:
        completion_models:
          items:
            "$ref": "#/components/schemas/CompletionModelPublic"
          title: Completion Models
          type: array
        embedding_models:
          items:
            "$ref": "#/components/schemas/EmbeddingModelPublicLegacy"
          title: Embedding Models
          type: array
      required:
        - completion_models
        - embedding_models
      title: GetModelsResponse
      type: object
    GroupChatAssistantPublic:
      properties:
        default_description:
          anyOf:
            - type: string
            - type: 'null'
          title: Default Description
        handle:
          title: Handle
          type: string
        id:
          format: uuid
          title: Id
          type: string
        user_description:
          anyOf:
            - type: string
            - type: 'null'
          title: User Description
      required:
        - id
        - handle
        - default_description
        - user_description
      title: GroupChatAssistantPublic
      type: object
    GroupChatAssistantUpdateSchema:
      properties:
        id:
          format: uuid
          title: Id
          type: string
        user_description:
          anyOf:
            - type: string
            - type: 'null'
          description: Custom description provided by the user. Cannot be null if
            'description' of assistant is null.
          example: My custom AI assistant description
          title: User Description
      required:
        - id
        - user_description
      title: GroupChatAssistantUpdateSchema
      type: object
    GroupChatCreate:
      description: |-
        Attributes:
            name: str
      properties:
        name:
          title: Name
          type: string
      required:
        - name
      title: GroupChatCreate
      type: object
    GroupChatPublic:
      description: |-
        Represents a group chat of assistants.

        Attributes:
            created_at: datetime
            updated_at: datetime
            name: str
            id: UUID
            space_id: UUID
            allow_mentions: bool
            show_response_label: bool
            tools: GroupChatTools
            insight_enabled: bool
            attachments: list[FilePublic]
            allowed_attachments: FileRestrictions
            type: str
      properties:
        allow_mentions:
          title: Allow Mentions
          type: boolean
        allowed_attachments:
          "$ref": "#/components/schemas/FileRestrictions"
        attachments:
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Attachments
          type: array
        created_at:
          format: date-time
          title: Created At
          type: string
        id:
          format: uuid
          title: Id
          type: string
        insight_enabled:
          description: Whether insights are enabled for this group chat. If enabled,
            users with appropriate permissions can see all sessions for this group
            chat.
          title: Insight Enabled
          type: boolean
        metadata_json:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Metadata Json
        name:
          title: Name
          type: string
        permissions:
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        published:
          title: Published
          type: boolean
        show_response_label:
          title: Show Response Label
          type: boolean
        space_id:
          format: uuid
          title: Space Id
          type: string
        tools:
          "$ref": "#/components/schemas/GroupChatTools"
        type:
          const: group-chat
          title: Type
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - created_at
        - updated_at
        - name
        - id
        - space_id
        - allow_mentions
        - show_response_label
        - published
        - insight_enabled
        - tools
        - attachments
        - allowed_attachments
        - type
        - permissions
        - metadata_json
      title: GroupChatPublic
      type: object
    GroupChatSparse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        id:
          format: uuid
          title: Id
          type: string
        metadata_json:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Metadata Json
        name:
          title: Name
          type: string
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        published:
          title: Published
          type: boolean
        type:
          const: group-chat
          title: Type
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
        user_id:
          format: uuid
          title: User Id
          type: string
      required:
        - created_at
        - updated_at
        - name
        - id
        - user_id
        - published
        - type
        - metadata_json
      title: GroupChatSparse
      type: object
    GroupChatTools:
      properties:
        assistants:
          items:
            "$ref": "#/components/schemas/GroupChatAssistantPublic"
          title: Assistants
          type: array
      required:
        - assistants
      title: GroupChatTools
      type: object
    GroupChatUpdateSchema:
      properties:
        allow_mentions:
          anyOf:
            - type: boolean
            - type: 'null'
          description: Indicates if mentions are allowed.
          title: Allow Mentions
        insight_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          description: Whether insights are enabled for this group chat. If enabled,
            users with appropriate permissions can see all sessions for this group
            chat.
          title: Insight Enabled
        metadata_json:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          default: NOT_PROVIDED
          description: Metadata for the group chat.
          title: Metadata Json
        name:
          anyOf:
            - type: string
            - type: 'null'
          description: The name of the group chat.
          title: Name
        show_response_label:
          anyOf:
            - type: boolean
            - type: 'null'
          description: Indicates if the response label should be shown.
          title: Show Response Label
        space_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Space Id
        tools:
          anyOf:
            - "$ref": "#/components/schemas/GroupChatUpdateTools"
            - type: 'null'
          description: Tools available in the group chat.
      title: GroupChatUpdateSchema
      type: object
    GroupChatUpdateTools:
      properties:
        assistants:
          items:
            "$ref": "#/components/schemas/GroupChatAssistantUpdateSchema"
          title: Assistants
          type: array
      required:
        - assistants
      title: GroupChatUpdateTools
      type: object
    GroupMetadata:
      properties:
        num_info_blobs:
          title: Num Info Blobs
          type: integer
        size:
          title: Size
          type: integer
      required:
        - num_info_blobs
        - size
      title: GroupMetadata
      type: object
    GroupPublicBase:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - name
        - id
      title: GroupPublicBase
      type: object
    GroupPublicWithMetadata:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        embedding_model:
          "$ref": "#/components/schemas/EmbeddingModelPublic"
        id:
          format: uuid
          title: Id
          type: string
        metadata:
          "$ref": "#/components/schemas/GroupMetadata"
        name:
          title: Name
          type: string
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - name
        - id
        - embedding_model
        - metadata
      title: GroupPublicWithMetadata
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            "$ref": "#/components/schemas/ValidationError"
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    InfoBlobAddPublic:
      properties:
        metadata:
          "$ref": "#/components/schemas/InfoBlobMetadataUpsertPublic"
        text:
          title: Text
          type: string
      required:
        - text
      title: InfoBlobAddPublic
      type: object
    InfoBlobAskAssistantPublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        group_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Group Id
        id:
          format: uuid
          title: Id
          type: string
        metadata:
          "$ref": "#/components/schemas/InfoBlobMetadata"
        score:
          title: Score
          type: number
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        website_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Website Id
      required:
        - id
        - metadata
        - score
      title: InfoBlobAskAssistantPublic
      type: object
    InfoBlobLimits:
      properties:
        formats:
          items:
            "$ref": "#/components/schemas/FormatLimit"
          title: Formats
          type: array
      required:
        - formats
      title: InfoBlobLimits
      type: object
    InfoBlobMetadata:
      properties:
        embedding_model_id:
          format: uuid
          title: Embedding Model Id
          type: string
        size:
          title: Size
          type: integer
        title:
          anyOf:
            - type: string
            - type: 'null'
          title: Title
        url:
          anyOf:
            - type: string
            - type: 'null'
          title: Url
      required:
        - embedding_model_id
        - size
      title: InfoBlobMetadata
      type: object
    InfoBlobMetadataUpsertPublic:
      properties:
        title:
          anyOf:
            - type: string
            - type: 'null'
          title: Title
        url:
          anyOf:
            - type: string
            - type: 'null'
          title: Url
      title: InfoBlobMetadataUpsertPublic
      type: object
    InfoBlobPublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        group_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Group Id
        id:
          format: uuid
          title: Id
          type: string
        metadata:
          "$ref": "#/components/schemas/InfoBlobMetadata"
        text:
          title: Text
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        website_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Website Id
      required:
        - id
        - metadata
        - text
      title: InfoBlobPublic
      type: object
    InfoBlobPublicNoText:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        group_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Group Id
        id:
          format: uuid
          title: Id
          type: string
        metadata:
          "$ref": "#/components/schemas/InfoBlobMetadata"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        website_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Website Id
      required:
        - id
        - metadata
      title: InfoBlobPublicNoText
      type: object
    InfoBlobUpdatePublic:
      properties:
        metadata:
          "$ref": "#/components/schemas/InfoBlobMetadataUpsertPublic"
      required:
        - metadata
      title: InfoBlobUpdatePublic
      type: object
    InfoBlobUpsertRequest:
      properties:
        info_blobs:
          items:
            "$ref": "#/components/schemas/InfoBlobAddPublic"
          title: Info Blobs
          type: array
      required:
        - info_blobs
      title: InfoBlobUpsertRequest
      type: object
    InputField:
      properties:
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        type:
          "$ref": "#/components/schemas/InputFieldType"
      required:
        - type
      title: InputField
      type: object
    InputFieldPublic:
      properties:
        accepted_file_types:
          items:
            "$ref": "#/components/schemas/AcceptedFileType"
          title: Accepted File Types
          type: array
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        limit:
          "$ref": "#/components/schemas/Limit"
        type:
          "$ref": "#/components/schemas/InputFieldType"
      required:
        - accepted_file_types
        - limit
        - type
      title: InputFieldPublic
      type: object
    InputFieldType:
      enum:
        - text-field
        - text-upload
        - audio-upload
        - audio-recorder
        - image-upload
      title: InputFieldType
      type: string
    Integration:
      properties:
        description:
          title: Description
          type: string
        id:
          format: uuid
          title: Id
          type: string
        integration_type:
          "$ref": "#/components/schemas/IntegrationType"
        name:
          title: Name
          type: string
      required:
        - id
        - name
        - description
        - integration_type
      title: Integration
      type: object
    IntegrationKnowledgeMetaData:
      properties:
        size:
          title: Size
          type: integer
      required:
        - size
      title: IntegrationKnowledgeMetaData
      type: object
    IntegrationKnowledgePublic:
      properties:
        embedding_model:
          "$ref": "#/components/schemas/EmbeddingModelPublicLegacy"
        id:
          format: uuid
          title: Id
          type: string
        integration_type:
          enum:
            - confluence
            - sharepoint
          title: Integration Type
          type: string
        metadata:
          "$ref": "#/components/schemas/IntegrationKnowledgeMetaData"
        name:
          title: Name
          type: string
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        space_id:
          format: uuid
          title: Space Id
          type: string
        task:
          description: |-
            Create a collection of name/value pairs.

            Example enumeration:

            >>> class Color(Enum):
            ...     RED = 1
            ...     BLUE = 2
            ...     GREEN = 3

            Access them by:

            - attribute access::

            >>> Color.RED
            <Color.RED: 1>

            - value lookup:

            >>> Color(1)
            <Color.RED: 1>

            - name lookup:

            >>> Color['RED']
            <Color.RED: 1>

            Enumerations can be iterated over, and know how many members they have:

            >>> len(Color)
            3

            >>> list(Color)
            [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

            Methods can be added to enumerations, and members can have their own
            attributes -- see the documentation for details.
          enum: [ ]
          title: Enum
        tenant_id:
          format: uuid
          title: Tenant Id
          type: string
        url:
          title: Url
          type: string
        user_integration_id:
          format: uuid
          title: User Integration Id
          type: string
      required:
        - id
        - name
        - url
        - tenant_id
        - space_id
        - user_integration_id
        - embedding_model
        - metadata
        - integration_type
        - task
      title: IntegrationKnowledgePublic
      type: object
    IntegrationList:
      properties:
        count:
          readOnly: true
          title: Count
          type: integer
        items:
          items:
            "$ref": "#/components/schemas/Integration"
          title: Items
          type: array
      required:
        - items
        - count
      title: IntegrationList
      type: object
    IntegrationPreviewData:
      properties:
        key:
          title: Key
          type: string
        name:
          title: Name
          type: string
        type:
          title: Type
          type: string
        url:
          title: Url
          type: string
      required:
        - key
        - type
        - name
        - url
      title: IntegrationPreviewData
      type: object
    IntegrationPreviewDataList:
      properties:
        count:
          readOnly: true
          title: Count
          type: integer
        items:
          items:
            "$ref": "#/components/schemas/IntegrationPreviewData"
          title: Items
          type: array
      required:
        - items
        - count
      title: IntegrationPreviewDataList
      type: object
    IntegrationType:
      enum:
        - confluence
        - sharepoint
      title: IntegrationType
      type: string
    JobPublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        finished_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Finished At
        id:
          format: uuid
          title: Id
          type: string
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        result_location:
          anyOf:
            - type: string
            - type: 'null'
          title: Result Location
        status:
          "$ref": "#/components/schemas/Status"
        task:
          "$ref": "#/components/schemas/Task"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - status
        - task
      title: JobPublic
      type: object
    Knowledge:
      properties:
        groups:
          "$ref": "#/components/schemas/PaginatedPermissions_CollectionPublic_"
        integration_knowledge_list:
          "$ref": "#/components/schemas/PaginatedPermissions_IntegrationKnowledgePublic_"
        websites:
          "$ref": "#/components/schemas/PaginatedPermissions_WebsitePublic_"
      required:
        - groups
        - websites
        - integration_knowledge_list
      title: Knowledge
      type: object
    Limit:
      properties:
        max_files:
          title: Max Files
          type: integer
        max_size:
          title: Max Size
          type: integer
      required:
        - max_files
        - max_size
      title: Limit
      type: object
    Limits:
      properties:
        attachments:
          "$ref": "#/components/schemas/AttachmentLimits"
        info_blobs:
          "$ref": "#/components/schemas/InfoBlobLimits"
      required:
        - info_blobs
        - attachments
      title: Limits
      type: object
    LoggingDetailsPublic:
      properties:
        context:
          anyOf:
            - type: string
            - type: 'null'
          title: Context
        json_body:
          title: Json Body
        model_kwargs:
          additionalProperties: true
          title: Model Kwargs
          type: object
      required:
        - model_kwargs
        - json_body
      title: LoggingDetailsPublic
      type: object
    Message:
      properties:
        answer:
          title: Answer
          type: string
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModel"
            - type: 'null'
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        files:
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Files
          type: array
        generated_files:
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Generated Files
          type: array
        id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Id
        question:
          title: Question
          type: string
        references:
          items:
            "$ref": "#/components/schemas/InfoBlobPublicNoText"
          title: References
          type: array
        tools:
          "$ref": "#/components/schemas/UseTools"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        web_search_references:
          items:
            "$ref": "#/components/schemas/WebSearchResultPublic"
          title: Web Search References
          type: array
      required:
        - question
        - answer
        - references
        - files
        - tools
        - generated_files
        - web_search_references
      title: Message
      type: object
    MessageLogging:
      properties:
        answer:
          title: Answer
          type: string
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModel"
            - type: 'null'
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        files:
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Files
          type: array
        generated_files:
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Generated Files
          type: array
        id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Id
        logging_details:
          "$ref": "#/components/schemas/LoggingDetailsPublic"
        question:
          title: Question
          type: string
        references:
          items:
            "$ref": "#/components/schemas/InfoBlobPublicNoText"
          title: References
          type: array
        tools:
          "$ref": "#/components/schemas/UseTools"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        web_search_references:
          items:
            "$ref": "#/components/schemas/WebSearchResultPublic"
          title: Web Search References
          type: array
      required:
        - question
        - answer
        - references
        - files
        - tools
        - generated_files
        - web_search_references
        - logging_details
      title: MessageLogging
      type: object
    MetadataStatistics:
      properties:
        assistants:
          items:
            "$ref": "#/components/schemas/AssistantMetadata"
          title: Assistants
          type: array
        questions:
          items:
            "$ref": "#/components/schemas/QuestionMetadata"
          title: Questions
          type: array
        sessions:
          items:
            "$ref": "#/components/schemas/SessionMetadata"
          title: Sessions
          type: array
      required:
        - assistants
        - sessions
        - questions
      title: MetadataStatistics
      type: object
    ModelFamily:
      enum:
        - openai
        - mistral
        - vllm
        - claude
        - azure
        - ovhcloud
        - e5
      title: ModelFamily
      type: string
    ModelHostingLocation:
      enum:
        - usa
        - eu
        - swe
      title: ModelHostingLocation
      type: string
    ModelId:
      properties:
        id:
          format: uuid
          title: Id
          type: string
      required:
        - id
      title: ModelId
      type: object
    ModelKwargs:
      properties:
        temperature:
          anyOf:
            - type: number
            - type: 'null'
          title: Temperature
        top_p:
          anyOf:
            - type: number
            - type: 'null'
          title: Top P
      title: ModelKwargs
      type: object
    ModelOrg:
      enum:
        - OpenAI
        - Meta
        - Microsoft
        - Anthropic
        - Mistral
        - KBLab
        - Google
      title: ModelOrg
      type: string
    ModelStability:
      enum:
        - stable
        - experimental
      title: ModelStability
      type: string
    ModelUsage:
      properties:
        input_token_usage:
          description: Number of tokens used for input prompts
          title: Input Token Usage
          type: integer
        model_id:
          format: uuid
          title: Model Id
          type: string
        model_name:
          title: Model Name
          type: string
        model_nickname:
          description: User-friendly name of the model
          title: Model Nickname
          type: string
        model_org:
          anyOf:
            - type: string
            - type: 'null'
          description: Organization providing the model
          title: Model Org
        output_token_usage:
          description: Number of tokens used for model outputs
          title: Output Token Usage
          type: integer
        request_count:
          description: Number of requests made with this model
          title: Request Count
          type: integer
        total_token_usage:
          description: Total tokens (input + output)
          title: Total Token Usage
          type: integer
      required:
        - model_id
        - model_name
        - model_nickname
        - input_token_usage
        - output_token_usage
        - total_token_usage
        - request_count
      title: ModelUsage
      type: object
    ModelsPresentation:
      description: Presentation model for all types of AI models.
      properties:
        completion_models:
          items:
            "$ref": "#/components/schemas/CompletionModelSecurityStatus"
          title: Completion Models
          type: array
        embedding_models:
          items:
            "$ref": "#/components/schemas/EmbeddingModelSecurityStatus"
          title: Embedding Models
          type: array
        transcription_models:
          items:
            "$ref": "#/components/schemas/TranscriptionModelSecurityStatus"
          title: Transcription Models
          type: array
      required:
        - completion_models
        - embedding_models
        - transcription_models
      title: ModelsPresentation
      type: object
    ModuleBase:
      properties:
        name:
          anyOf:
            - "$ref": "#/components/schemas/Modules"
            - type: string
          title: Name
      required:
        - name
      title: ModuleBase
      type: object
    ModuleInDB:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        name:
          anyOf:
            - "$ref": "#/components/schemas/Modules"
            - type: string
          title: Name
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - name
        - id
      title: ModuleInDB
      type: object
    Modules:
      description: Any change to these enums will result in database changes
      enum:
        - eu_hosting
        - intric-applications
        - SWE Models
      title: Modules
      type: string
    OpenIdConnectLogin:
      properties:
        client_id:
          default: intric
          title: Client Id
          type: string
        code:
          title: Code
          type: string
        code_verifier:
          title: Code Verifier
          type: string
        grant_type:
          default: authorization_code
          title: Grant Type
          type: string
        nonce:
          title: Nonce
          type: string
        redirect_uri:
          title: Redirect Uri
          type: string
        scope:
          default: openid
          title: Scope
          type: string
      required:
        - code
        - code_verifier
        - redirect_uri
      title: OpenIdConnectLogin
      type: object
    PaginatedPermissions_AppSparse_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/AppSparse"
          title: Items
          type: array
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
      required:
        - items
        - count
      title: PaginatedPermissions[AppSparse]
      type: object
    PaginatedPermissions_AssistantSparse_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/AssistantSparse"
          title: Items
          type: array
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
      required:
        - items
        - count
      title: PaginatedPermissions[AssistantSparse]
      type: object
    PaginatedPermissions_CollectionPublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/CollectionPublic"
          title: Items
          type: array
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
      required:
        - items
        - count
      title: PaginatedPermissions[CollectionPublic]
      type: object
    PaginatedPermissions_GroupChatSparse_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/GroupChatSparse"
          title: Items
          type: array
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
      required:
        - items
        - count
      title: PaginatedPermissions[GroupChatSparse]
      type: object
    PaginatedPermissions_IntegrationKnowledgePublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/IntegrationKnowledgePublic"
          title: Items
          type: array
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
      required:
        - items
        - count
      title: PaginatedPermissions[IntegrationKnowledgePublic]
      type: object
    PaginatedPermissions_ServiceSparse_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/ServiceSparse"
          title: Items
          type: array
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
      required:
        - items
        - count
      title: PaginatedPermissions[ServiceSparse]
      type: object
    PaginatedPermissions_SpaceMember_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/SpaceMember"
          title: Items
          type: array
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
      required:
        - items
        - count
      title: PaginatedPermissions[SpaceMember]
      type: object
    PaginatedPermissions_WebsitePublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/WebsitePublic"
          title: Items
          type: array
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
      required:
        - items
        - count
      title: PaginatedPermissions[WebsitePublic]
      type: object
    PaginatedResponse_AllowedOriginInDB_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/AllowedOriginInDB"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[AllowedOriginInDB]
      type: object
    PaginatedResponse_AllowedOriginPublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/AllowedOriginPublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[AllowedOriginPublic]
      type: object
    PaginatedResponse_AppRunSparse_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/AppRunSparse"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[AppRunSparse]
      type: object
    PaginatedResponse_AssistantPublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/AssistantPublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[AssistantPublic]
      type: object
    PaginatedResponse_CompletionModelPublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/CompletionModelPublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[CompletionModelPublic]
      type: object
    PaginatedResponse_CrawlRunPublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/intric__websites__presentation__website_models__CrawlRunPublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[CrawlRunPublic]
      type: object
    PaginatedResponse_EmbeddingModelLegacy_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/EmbeddingModelLegacy"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[EmbeddingModelLegacy]
      type: object
    PaginatedResponse_EmbeddingModelPublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/EmbeddingModelPublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[EmbeddingModelPublic]
      type: object
    PaginatedResponse_FilePublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[FilePublic]
      type: object
    PaginatedResponse_GroupPublicWithMetadata_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/GroupPublicWithMetadata"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[GroupPublicWithMetadata]
      type: object
    PaginatedResponse_InfoBlobPublicNoText_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/InfoBlobPublicNoText"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[InfoBlobPublicNoText]
      type: object
    PaginatedResponse_InfoBlobPublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/InfoBlobPublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[InfoBlobPublic]
      type: object
    PaginatedResponse_JobPublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/JobPublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[JobPublic]
      type: object
    PaginatedResponse_Message_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/Message"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[Message]
      type: object
    PaginatedResponse_ModuleInDB_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/ModuleInDB"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[ModuleInDB]
      type: object
    PaginatedResponse_PredefinedRolePublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/PredefinedRolePublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[PredefinedRolePublic]
      type: object
    PaginatedResponse_PromptSparse_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/PromptSparse"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[PromptSparse]
      type: object
    PaginatedResponse_RolePublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/RolePublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[RolePublic]
      type: object
    PaginatedResponse_SemanticSearchResponse_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/SemanticSearchResponse"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[SemanticSearchResponse]
      type: object
    PaginatedResponse_ServicePublicWithUser_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/ServicePublicWithUser"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[ServicePublicWithUser]
      type: object
    PaginatedResponse_ServiceRun_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/ServiceRun"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[ServiceRun]
      type: object
    PaginatedResponse_SpaceDashboard_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/SpaceDashboard"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[SpaceDashboard]
      type: object
    PaginatedResponse_SpaceSparse_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/SpaceSparse"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[SpaceSparse]
      type: object
    PaginatedResponse_TenantInDB_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/TenantInDB"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[TenantInDB]
      type: object
    PaginatedResponse_TranscriptionModelPublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/TranscriptionModelPublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[TranscriptionModelPublic]
      type: object
    PaginatedResponse_UserAdminView_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/UserAdminView"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[UserAdminView]
      type: object
    PaginatedResponse_UserGroupPublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/UserGroupPublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[UserGroupPublic]
      type: object
    PaginatedResponse_UserInDB_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/UserInDB"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[UserInDB]
      type: object
    PaginatedResponse_WebsitePublic_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/WebsitePublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[WebsitePublic]
      type: object
    PaginatedResponse_str_:
      properties:
        count:
          description: Number of items returned in the response
          readOnly: true
          title: Count
          type: integer
        items:
          description: List of items returned in the response
          items:
            type: string
          title: Items
          type: array
      required:
        - items
        - count
      title: PaginatedResponse[str]
      type: object
    PartialAssistantUpdatePublic:
      properties:
        attachments:
          anyOf:
            - items:
                "$ref": "#/components/schemas/ModelId"
              type: array
            - type: 'null'
          title: Attachments
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
        data_retention_days:
          anyOf:
            - type: integer
            - type: 'null'
          title: Data Retention Days
        description:
          anyOf:
            - type: string
            - type: 'null'
          description: A description of the assitant that will be used as default
            description in GroupChatAssistantPublic
          example: This is a helpful AI assistant
          title: Description
        groups:
          anyOf:
            - items:
                "$ref": "#/components/schemas/ModelId"
              type: array
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
          title: Groups
        guardrail:
          anyOf:
            - "$ref": "#/components/schemas/AssistantGuard"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
        insight_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          description: Whether insights are enabled for this assistant. If enabled,
            users with appropriate permissions can see all sessions for this assistant.
          title: Insight Enabled
        integration_knowledge_list:
          anyOf:
            - items:
                "$ref": "#/components/schemas/ModelId"
              type: array
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
          title: Integration Knowledge List
        logging_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
          title: Logging Enabled
        metadata_json:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          description: Metadata for the assistant
          title: Metadata Json
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptCreate"
            - type: 'null'
        space_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Space Id
        websites:
          anyOf:
            - items:
                "$ref": "#/components/schemas/ModelId"
              type: array
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
          title: Websites
      title: PartialAssistantUpdatePublic
      type: object
    PartialPropUserUpdate:
      properties:
        predefined_role:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
        state:
          anyOf:
            - "$ref": "#/components/schemas/UserState"
            - type: 'null'
      title: PartialPropUserUpdate
      type: object
    PartialServiceUpdatePublic:
      properties:
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
        groups:
          anyOf:
            - items:
                "$ref": "#/components/schemas/ModelId"
              type: array
            - type: 'null'
          title: Groups
        json_schema:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Json Schema
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        output_format:
          anyOf:
            - enum:
                - json
                - list
                - boolean
              type: string
            - type: 'null'
          title: Output Format
        prompt:
          anyOf:
            - type: string
            - type: 'null'
          title: Prompt
      title: PartialServiceUpdatePublic
      type: object
    PartialUpdateSpaceRequest:
      properties:
        completion_models:
          anyOf:
            - items:
                "$ref": "#/components/schemas/ModelId"
              type: array
            - type: 'null'
          title: Completion Models
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        embedding_models:
          anyOf:
            - items:
                "$ref": "#/components/schemas/ModelId"
              type: array
            - type: 'null'
          title: Embedding Models
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          description: ID of the security classification to apply to this space. Set
            to null to remove the security classification. Omit to keep the current
            security classification unchanged.
          title: Security Classification
        transcription_models:
          anyOf:
            - items:
                "$ref": "#/components/schemas/ModelId"
              type: array
            - type: 'null'
          title: Transcription Models
      title: PartialUpdateSpaceRequest
      type: object
    Permission:
      enum:
        - assistants
        - group_chats
        - apps
        - services
        - collections
        - insights
        - AI
        - editor
        - admin
        - websites
        - integration_knowledge_list
      title: Permission
      type: string
    PermissionPublic:
      properties:
        description:
          title: Description
          type: string
        name:
          "$ref": "#/components/schemas/Permission"
      required:
        - name
        - description
      title: PermissionPublic
      type: object
    PredefinedRoleInDB:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        permissions:
          items:
            "$ref": "#/components/schemas/Permission"
          title: Permissions
          type: array
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - name
        - permissions
        - id
      title: PredefinedRoleInDB
      type: object
    PredefinedRolePublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        permissions:
          items:
            "$ref": "#/components/schemas/Permission"
          title: Permissions
          type: array
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - name
        - permissions
        - id
      title: PredefinedRolePublic
      type: object
    PrivacyPolicy:
      properties:
        url:
          anyOf:
            - format: uri
              maxLength: 2083
              minLength: 1
              type: string
            - type: 'null'
          title: Url
      title: PrivacyPolicy
      type: object
    PromptCreate:
      properties:
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        text:
          title: Text
          type: string
      required:
        - text
      title: PromptCreate
      type: object
    PromptPublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        id:
          format: uuid
          title: Id
          type: string
        is_selected:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Selected
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        text:
          title: Text
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        user:
          "$ref": "#/components/schemas/UserSparse"
      required:
        - id
        - user
        - text
      title: PromptPublic
      type: object
    PromptPublicAppTemplate:
      properties:
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      required:
        - text
      title: PromptPublicAppTemplate
      type: object
    PromptPublicAssistantTemplate:
      properties:
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      required:
        - text
      title: PromptPublicAssistantTemplate
      type: object
    PromptSparse:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        id:
          format: uuid
          title: Id
          type: string
        is_selected:
          title: Is Selected
          type: boolean
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        user:
          "$ref": "#/components/schemas/UserSparse"
      required:
        - id
        - is_selected
        - user
      title: PromptSparse
      type: object
    PromptUpdateRequest:
      properties:
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
      title: PromptUpdateRequest
      type: object
    PropUserInvite:
      properties:
        email:
          format: email
          title: Email
          type: string
        predefined_role:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
        state:
          anyOf:
            - "$ref": "#/components/schemas/UserState"
            - type: 'null'
      required:
        - email
      title: PropUserInvite
      type: object
    QuestionMetadata:
      properties:
        assistant_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Assistant Id
        created_at:
          format: date-time
          title: Created At
          type: string
        id:
          format: uuid
          title: Id
          type: string
        session_id:
          format: uuid
          title: Session Id
          type: string
      required:
        - id
        - created_at
        - session_id
      title: QuestionMetadata
      type: object
    ResourcePermission:
      enum:
        - read
        - create
        - edit
        - delete
        - add
        - remove
        - publish
        - insight_view
        - insight_toggle
      title: ResourcePermission
      type: string
    RoleCreateRequest:
      properties:
        name:
          title: Name
          type: string
        permissions:
          items:
            "$ref": "#/components/schemas/Permission"
          title: Permissions
          type: array
      required:
        - name
        - permissions
      title: RoleCreateRequest
      type: object
    RoleInDB:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        permissions:
          items:
            "$ref": "#/components/schemas/Permission"
          title: Permissions
          type: array
        tenant_id:
          format: uuid
          title: Tenant Id
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
        - permissions
        - tenant_id
      title: RoleInDB
      type: object
    RolePublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        permissions:
          items:
            "$ref": "#/components/schemas/Permission"
          title: Permissions
          type: array
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
        - permissions
      title: RolePublic
      type: object
    RoleUpdateRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        permissions:
          anyOf:
            - items:
                "$ref": "#/components/schemas/Permission"
              type: array
            - type: 'null'
          title: Permissions
      title: RoleUpdateRequest
      type: object
    RolesPaginatedResponse:
      properties:
        predefined_roles:
          "$ref": "#/components/schemas/PaginatedResponse_PredefinedRolePublic_"
        roles:
          "$ref": "#/components/schemas/PaginatedResponse_RolePublic_"
      required:
        - roles
        - predefined_roles
      title: RolesPaginatedResponse
      type: object
    RunAppRequest:
      properties:
        files:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Files
          type: array
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      title: RunAppRequest
      type: object
    RunService:
      properties:
        files:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ModelId"
          maxItems: 5
          title: Files
          type: array
        input:
          title: Input
          type: string
      required:
        - input
      title: RunService
      type: object
    SSEFiles:
      "$defs":
        FilePublic:
          properties:
            created_at:
              anyOf:
                - format: date-time
                  type: string
                - type: 'null'
              default:
              title: Created At
            id:
              format: uuid
              title: Id
              type: string
            mimetype:
              title: Mimetype
              type: string
            name:
              title: Name
              type: string
            size:
              title: Size
              type: integer
            transcription:
              anyOf:
                - type: string
                - type: 'null'
              default:
              title: Transcription
            updated_at:
              anyOf:
                - format: date-time
                  type: string
                - type: 'null'
              default:
              title: Updated At
          required:
            - id
            - name
            - mimetype
            - size
          title: FilePublic
          type: object
      properties:
        generated_files:
          items:
            "$ref": "#/components/schemas/SSEFiles/$defs/FilePublic"
          title: Generated Files
          type: array
        session_id:
          format: uuid
          title: Session Id
          type: string
      required:
        - session_id
        - generated_files
      title: SSEFiles
      type: object
    SSEFirstChunk:
      "$defs":
        FilePublic:
          properties:
            created_at:
              anyOf:
                - format: date-time
                  type: string
                - type: 'null'
              default:
              title: Created At
            id:
              format: uuid
              title: Id
              type: string
            mimetype:
              title: Mimetype
              type: string
            name:
              title: Name
              type: string
            size:
              title: Size
              type: integer
            transcription:
              anyOf:
                - type: string
                - type: 'null'
              default:
              title: Transcription
            updated_at:
              anyOf:
                - format: date-time
                  type: string
                - type: 'null'
              default:
              title: Updated At
          required:
            - id
            - name
            - mimetype
            - size
          title: FilePublic
          type: object
        InfoBlobAskAssistantPublic:
          properties:
            created_at:
              anyOf:
                - format: date-time
                  type: string
                - type: 'null'
              default:
              title: Created At
            group_id:
              anyOf:
                - format: uuid
                  type: string
                - type: 'null'
              default:
              title: Group Id
            id:
              format: uuid
              title: Id
              type: string
            metadata:
              "$ref": "#/components/schemas/SSEFirstChunk/$defs/InfoBlobMetadata"
            score:
              title: Score
              type: number
            updated_at:
              anyOf:
                - format: date-time
                  type: string
                - type: 'null'
              default:
              title: Updated At
            website_id:
              anyOf:
                - format: uuid
                  type: string
                - type: 'null'
              default:
              title: Website Id
          required:
            - id
            - metadata
            - score
          title: InfoBlobAskAssistantPublic
          type: object
        InfoBlobMetadata:
          properties:
            embedding_model_id:
              format: uuid
              title: Embedding Model Id
              type: string
            size:
              title: Size
              type: integer
            title:
              anyOf:
                - type: string
                - type: 'null'
              default:
              title: Title
            url:
              anyOf:
                - type: string
                - type: 'null'
              default:
              title: Url
          required:
            - embedding_model_id
            - size
          title: InfoBlobMetadata
          type: object
        ToolAssistant:
          properties:
            handle:
              title: Handle
              type: string
            id:
              format: uuid
              title: Id
              type: string
          required:
            - id
            - handle
          title: ToolAssistant
          type: object
        UseTools:
          properties:
            assistants:
              items:
                "$ref": "#/components/schemas/SSEFirstChunk/$defs/ToolAssistant"
              title: Assistants
              type: array
          required:
            - assistants
          title: UseTools
          type: object
        WebSearchResultPublic:
          properties:
            id:
              format: uuid
              title: Id
              type: string
            title:
              title: Title
              type: string
            url:
              title: Url
              type: string
          required:
            - id
            - title
            - url
          title: WebSearchResultPublic
          type: object
      properties:
        answer:
          title: Answer
          type: string
        files:
          items:
            "$ref": "#/components/schemas/SSEFirstChunk/$defs/FilePublic"
          title: Files
          type: array
        generated_files:
          items:
            "$ref": "#/components/schemas/SSEFirstChunk/$defs/FilePublic"
          title: Generated Files
          type: array
        question:
          title: Question
          type: string
        references:
          items:
            "$ref": "#/components/schemas/SSEFirstChunk/$defs/InfoBlobAskAssistantPublic"
          title: References
          type: array
        session_id:
          format: uuid
          title: Session Id
          type: string
        tools:
          "$ref": "#/components/schemas/SSEFirstChunk/$defs/UseTools"
        web_search_references:
          items:
            "$ref": "#/components/schemas/SSEFirstChunk/$defs/WebSearchResultPublic"
          title: Web Search References
          type: array
      required:
        - session_id
        - question
        - answer
        - files
        - generated_files
        - references
        - tools
        - web_search_references
      title: SSEFirstChunk
      type: object
    SSEIntricEvent:
      "$defs":
        IntricEventType:
          enum:
            - generating_image
          title: IntricEventType
          type: string
      properties:
        intric_event_type:
          "$ref": "#/components/schemas/SSEIntricEvent/$defs/IntricEventType"
        session_id:
          format: uuid
          title: Session Id
          type: string
      required:
        - session_id
        - intric_event_type
      title: SSEIntricEvent
      type: object
    SSEText:
      "$defs":
        InfoBlobAskAssistantPublic:
          properties:
            created_at:
              anyOf:
                - format: date-time
                  type: string
                - type: 'null'
              default:
              title: Created At
            group_id:
              anyOf:
                - format: uuid
                  type: string
                - type: 'null'
              default:
              title: Group Id
            id:
              format: uuid
              title: Id
              type: string
            metadata:
              "$ref": "#/components/schemas/SSEText/$defs/InfoBlobMetadata"
            score:
              title: Score
              type: number
            updated_at:
              anyOf:
                - format: date-time
                  type: string
                - type: 'null'
              default:
              title: Updated At
            website_id:
              anyOf:
                - format: uuid
                  type: string
                - type: 'null'
              default:
              title: Website Id
          required:
            - id
            - metadata
            - score
          title: InfoBlobAskAssistantPublic
          type: object
        InfoBlobMetadata:
          properties:
            embedding_model_id:
              format: uuid
              title: Embedding Model Id
              type: string
            size:
              title: Size
              type: integer
            title:
              anyOf:
                - type: string
                - type: 'null'
              default:
              title: Title
            url:
              anyOf:
                - type: string
                - type: 'null'
              default:
              title: Url
          required:
            - embedding_model_id
            - size
          title: InfoBlobMetadata
          type: object
      properties:
        answer:
          title: Answer
          type: string
        references:
          items:
            "$ref": "#/components/schemas/SSEText/$defs/InfoBlobAskAssistantPublic"
          title: References
          type: array
        session_id:
          format: uuid
          title: Session Id
          type: string
      required:
        - session_id
        - answer
        - references
      title: SSEText
      type: object
    SecurityClassificationCreatePublic:
      description: Base model for security classification data.
      properties:
        description:
          anyOf:
            - type: string
            - type: 'null'
          description: Description of the security classification
          title: Description
        name:
          description: Name of the security classification
          title: Name
          type: string
        set_lowest_security:
          default: true
          description: Set lowest security level (0) if true, highest level if false
          title: Set Lowest Security
          type: boolean
      required:
        - name
      title: SecurityClassificationCreatePublic
      type: object
    SecurityClassificationLevelsUpdateRequest:
      properties:
        security_classifications:
          description: Security classification IDs
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Security Classifications
          type: array
      required:
        - security_classifications
      title: SecurityClassificationLevelsUpdateRequest
      type: object
    SecurityClassificationPublic:
      description: Basic security classification information.
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        security_level:
          title: Security Level
          type: integer
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
        - description
        - security_level
      title: SecurityClassificationPublic
      type: object
    SecurityClassificationResponse:
      properties:
        security_classifications:
          items:
            "$ref": "#/components/schemas/SecurityClassificationPublic"
          title: Security Classifications
          type: array
        security_enabled:
          title: Security Enabled
          type: boolean
      required:
        - security_enabled
        - security_classifications
      title: SecurityClassificationResponse
      type: object
    SecurityClassificationSingleUpdate:
      description: Model for updating an existing security classification's name and
        description only.
      properties:
        description:
          anyOf:
            - type: string
            - type: 'null'
          default: NOT_PROVIDED
          description: Description of the security classification
          title: Description
        name:
          default: NOT_PROVIDED
          description: Name of the security classification
          title: Name
          type: string
      title: SecurityClassificationSingleUpdate
      type: object
    SecurityClassificationsListPublic:
      description: All security classifications.
      properties:
        security_classifications:
          items:
            "$ref": "#/components/schemas/SecurityClassificationPublic"
          title: Security Classifications
          type: array
      required:
        - security_classifications
      title: SecurityClassificationsListPublic
      type: object
    SecurityEnableRequest:
      description: Request to enable or disable security classifications for a tenant.
      properties:
        enabled:
          description: Whether security classifications should be enabled for the
            tenant
          title: Enabled
          type: boolean
      required:
        - enabled
      title: SecurityEnableRequest
      type: object
    SecurityEnableResponse:
      description: Response after enabling or disabling security classifications for
        a tenant.
      properties:
        security_enabled:
          description: Whether security classifications are now enabled for the tenant
          title: Security Enabled
          type: boolean
      required:
        - security_enabled
      title: SecurityEnableResponse
      type: object
    SemanticSearchRequest:
      properties:
        autocut_cutoff:
          anyOf:
            - type: integer
            - type: 'null'
          description: Experimental feature that tries to limit the amount of chunks
            to only the relevant ones, based on the score. Set to null (or omit completely)
            to not use this feature
          title: Autocut Cutoff
        num_chunks:
          default: 30
          title: Num Chunks
          type: integer
        search_string:
          title: Search String
          type: string
      required:
        - search_string
      title: SemanticSearchRequest
      type: object
    SemanticSearchResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        id:
          format: uuid
          title: Id
          type: string
        info_blob_id:
          format: uuid
          title: Info Blob Id
          type: string
        score:
          title: Score
          type: number
        text:
          title: Text
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - info_blob_id
        - text
        - score
        - created_at
        - updated_at
      title: SemanticSearchResponse
      type: object
    ServiceCreatePublic:
      properties:
        completion_model:
          "$ref": "#/components/schemas/ModelId"
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
          default: { }
        groups:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Groups
          type: array
        json_schema:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Json Schema
        name:
          title: Name
          type: string
        output_format:
          anyOf:
            - enum:
                - json
                - list
                - boolean
              type: string
            - type: 'null'
          title: Output Format
        prompt:
          title: Prompt
          type: string
      required:
        - name
        - prompt
        - completion_model
      title: ServiceCreatePublic
      type: object
    ServiceOutput:
      properties:
        files:
          default: [ ]
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Files
          type: array
        output:
          title: Output
          type: string
      required:
        - output
      title: ServiceOutput
      type: object
    ServicePublicWithUser:
      properties:
        completion_model:
          "$ref": "#/components/schemas/CompletionModelPublic"
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        groups:
          items:
            "$ref": "#/components/schemas/GroupPublicBase"
          title: Groups
          type: array
        id:
          format: uuid
          title: Id
          type: string
        json_schema:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Json Schema
        name:
          title: Name
          type: string
        output_format:
          anyOf:
            - enum:
                - json
                - list
                - boolean
              type: string
            - type: 'null'
          title: Output Format
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        prompt:
          title: Prompt
          type: string
        space_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Space Id
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        user:
          "$ref": "#/components/schemas/UserPublicBase"
      required:
        - id
        - name
        - prompt
        - groups
        - completion_model
        - user
      title: ServicePublicWithUser
      type: object
    ServiceRun:
      properties:
        completion_model:
          "$ref": "#/components/schemas/CompletionModelPublic"
        id:
          format: uuid
          title: Id
          type: string
        input:
          title: Input
          type: string
        output:
          anyOf:
            - additionalProperties: true
              type: object
            - items: { }
              type: array
            - type: string
          title: Output
        references:
          items:
            "$ref": "#/components/schemas/InfoBlobPublic"
          title: References
          type: array
      required:
        - id
        - input
        - output
        - completion_model
        - references
      title: ServiceRun
      type: object
    ServiceSparse:
      properties:
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
          default: { }
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        json_schema:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Json Schema
        name:
          title: Name
          type: string
        output_format:
          anyOf:
            - enum:
                - json
                - list
                - boolean
              type: string
            - type: 'null'
          title: Output Format
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        prompt:
          title: Prompt
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        user_id:
          format: uuid
          title: User Id
          type: string
      required:
        - id
        - name
        - prompt
        - user_id
      title: ServiceSparse
      type: object
    SessionFeedback:
      properties:
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
        value:
          enum:
            - -1
            - 1
          title: Value
          type: integer
      required:
        - value
      title: SessionFeedback
      type: object
    SessionMetadata:
      properties:
        assistant_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Assistant Id
        created_at:
          format: date-time
          title: Created At
          type: string
        group_chat_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Group Chat Id
        id:
          format: uuid
          title: Id
          type: string
      required:
        - id
        - created_at
      title: SessionMetadata
      type: object
    SessionMetadataPublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - name
        - id
      title: SessionMetadataPublic
      type: object
    SessionPublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        feedback:
          anyOf:
            - "$ref": "#/components/schemas/SessionFeedback"
            - type: 'null'
        id:
          format: uuid
          title: Id
          type: string
        messages:
          items:
            "$ref": "#/components/schemas/Message"
          title: Messages
          type: array
        name:
          title: Name
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - name
        - id
        - messages
      title: SessionPublic
      type: object
    SettingsPublic:
      properties:
        chatbot_widget:
          additionalProperties: true
          default: { }
          title: Chatbot Widget
          type: object
      title: SettingsPublic
      type: object
    SignedURLRequest:
      properties:
        content_disposition:
          "$ref": "#/components/schemas/ContentDisposition"
          default: attachment
        expires_in:
          default: 3600
          title: Expires In
          type: integer
      title: SignedURLRequest
      type: object
    SignedURLResponse:
      properties:
        expires_at:
          title: Expires At
          type: integer
        url:
          title: Url
          type: string
      required:
        - url
        - expires_at
      title: SignedURLResponse
      type: object
    SpaceDashboard:
      properties:
        applications:
          "$ref": "#/components/schemas/Applications"
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        personal:
          title: Personal
          type: boolean
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
        - description
        - personal
        - applications
      title: SpaceDashboard
      type: object
    SpaceMember:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        email:
          format: email
          title: Email
          type: string
        id:
          format: uuid
          title: Id
          type: string
        role:
          "$ref": "#/components/schemas/SpaceRoleValue"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
      required:
        - id
        - email
        - role
      title: SpaceMember
      type: object
    SpacePublic:
      properties:
        applications:
          "$ref": "#/components/schemas/Applications"
        available_roles:
          items:
            "$ref": "#/components/schemas/SpaceRole"
          title: Available Roles
          type: array
        completion_models:
          items:
            "$ref": "#/components/schemas/CompletionModelPublic"
          title: Completion Models
          type: array
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        default_assistant:
          "$ref": "#/components/schemas/DefaultAssistant"
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        embedding_models:
          items:
            "$ref": "#/components/schemas/EmbeddingModelPublic"
          title: Embedding Models
          type: array
        id:
          format: uuid
          title: Id
          type: string
        knowledge:
          "$ref": "#/components/schemas/Knowledge"
        members:
          "$ref": "#/components/schemas/PaginatedPermissions_SpaceMember_"
        name:
          title: Name
          type: string
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        personal:
          title: Personal
          type: boolean
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
        transcription_models:
          items:
            "$ref": "#/components/schemas/TranscriptionModelPublic"
          title: Transcription Models
          type: array
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
        - description
        - personal
        - applications
        - embedding_models
        - completion_models
        - transcription_models
        - knowledge
        - members
        - default_assistant
        - available_roles
        - security_classification
      title: SpacePublic
      type: object
    SpaceRole:
      properties:
        label:
          readOnly: true
          title: Label
          type: string
        value:
          "$ref": "#/components/schemas/SpaceRoleValue"
      required:
        - value
        - label
      title: SpaceRole
      type: object
    SpaceRoleValue:
      enum:
        - admin
        - editor
        - viewer
      title: SpaceRoleValue
      type: string
    SpaceSparse:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        personal:
          title: Personal
          type: boolean
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
        - description
        - personal
      title: SpaceSparse
      type: object
    Status:
      enum:
        - in progress
        - queued
        - complete
        - failed
        - not found
      title: Status
      type: string
    StorageInfoModel:
      properties:
        count:
          title: Count
          type: integer
        items:
          items:
            "$ref": "#/components/schemas/StorageSpaceInfoModel"
          title: Items
          type: array
      required:
        - count
        - items
      title: StorageInfoModel
      type: object
    StorageModel:
      properties:
        limit:
          title: Limit
          type: integer
        personal_used:
          title: Personal Used
          type: integer
        shared_used:
          title: Shared Used
          type: integer
        total_used:
          title: Total Used
          type: integer
      required:
        - total_used
        - personal_used
        - shared_used
        - limit
      title: StorageModel
      type: object
    StorageSpaceInfoModel:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        id:
          format: uuid
          title: Id
          type: string
        members:
          items:
            "$ref": "#/components/schemas/StorageSpaceMemberModel"
          title: Members
          type: array
        name:
          title: Name
          type: string
        size:
          title: Size
          type: integer
        update_at:
          format: date-time
          title: Update At
          type: string
      required:
        - created_at
        - update_at
        - id
        - name
        - size
        - members
      title: StorageSpaceInfoModel
      type: object
    StorageSpaceMemberModel:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        email:
          title: Email
          type: string
        id:
          format: uuid
          title: Id
          type: string
        role:
          title: Role
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - created_at
        - updated_at
        - id
        - email
        - role
      title: StorageSpaceMemberModel
      type: object
    Task:
      enum:
        - upload_info_blob
        - transcription
        - crawl
        - embed_group
        - crawl_all_websites
        - run_app
        - pull_confluence_content
        - pull_sharepoint_content
      title: Task
      type: string
    TemplateCreate:
      properties:
        additional_fields:
          anyOf:
            - items:
                "$ref": "#/components/schemas/AdditionalField"
              type: array
            - type: 'null'
          title: Additional Fields
        id:
          format: uuid
          title: Id
          type: string
      required:
        - id
        - additional_fields
      title: TemplateCreate
      type: object
    TemplateListPublic:
      properties:
        count:
          readOnly: true
          title: Count
          type: integer
        items:
          items:
            anyOf:
              - "$ref": "#/components/schemas/AppTemplatePublic"
              - "$ref": "#/components/schemas/AssistantTemplatePublic"
          title: Items
          type: array
      required:
        - items
        - count
      title: TemplateListPublic
      type: object
    TemplateWizard:
      properties:
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        required:
          default: false
          title: Required
          type: boolean
        title:
          anyOf:
            - type: string
            - type: 'null'
          title: Title
      title: TemplateWizard
      type: object
    TenantBase:
      properties:
        display_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Display Name
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
        name:
          title: Name
          type: string
        provisioning:
          default: false
          title: Provisioning
          type: boolean
        quota_limit:
          default: 10737418240
          description: Size in bytes. Default is 10 GB
          title: Quota Limit
          type: integer
          format: int64
        security_enabled:
          default: false
          title: Security Enabled
          type: boolean
        state:
          "$ref": "#/components/schemas/TenantState"
          default: active
        zitadel_org_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Zitadel Org Id
      required:
        - name
      title: TenantBase
      type: object
    TenantInDB:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        display_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Display Name
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
        id:
          format: uuid
          title: Id
          type: string
        modules:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ModuleInDB"
          title: Modules
          type: array
        name:
          title: Name
          type: string
        privacy_policy:
          anyOf:
            - format: uri
              maxLength: 2083
              minLength: 1
              type: string
            - type: 'null'
          title: Privacy Policy
        provisioning:
          default: false
          title: Provisioning
          type: boolean
        quota_limit:
          title: Quota Limit
          type: integer
        security_enabled:
          default: false
          title: Security Enabled
          type: boolean
        state:
          "$ref": "#/components/schemas/TenantState"
          default: active
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        zitadel_org_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Zitadel Org Id
      required:
        - id
        - name
        - quota_limit
      title: TenantInDB
      type: object
    TenantIntegration:
      properties:
        description:
          title: Description
          type: string
        id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Id
        integration_id:
          format: uuid
          title: Integration Id
          type: string
        integration_type:
          "$ref": "#/components/schemas/IntegrationType"
        is_linked_to_tenant:
          readOnly: true
          title: Is Linked To Tenant
          type: boolean
        name:
          title: Name
          type: string
      required:
        - name
        - description
        - integration_type
        - integration_id
        - is_linked_to_tenant
      title: TenantIntegration
      type: object
    TenantIntegrationFilter:
      enum:
        - all
        - tenant_only
      title: TenantIntegrationFilter
      type: string
    TenantIntegrationList:
      properties:
        count:
          readOnly: true
          title: Count
          type: integer
        items:
          items:
            "$ref": "#/components/schemas/TenantIntegration"
          title: Items
          type: array
      required:
        - items
        - count
      title: TenantIntegrationList
      type: object
    TenantPublic:
      properties:
        display_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Display Name
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
        name:
          title: Name
          type: string
        privacy_policy:
          anyOf:
            - format: uri
              maxLength: 2083
              minLength: 1
              type: string
            - type: 'null'
          title: Privacy Policy
        provisioning:
          default: false
          title: Provisioning
          type: boolean
        quota_limit:
          default: 10737418240
          description: Size in bytes. Default is 10 GB
          title: Quota Limit
          type: integer
          format: int64
        security_enabled:
          default: false
          title: Security Enabled
          type: boolean
        state:
          "$ref": "#/components/schemas/TenantState"
          default: active
        zitadel_org_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Zitadel Org Id
      required:
        - name
      title: TenantPublic
      type: object
    TenantState:
      enum:
        - active
        - suspended
      title: TenantState
      type: string
    TenantUpdatePublic:
      properties:
        display_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Display Name
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
        provisioning:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Provisioning
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        security_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Security Enabled
        state:
          anyOf:
            - "$ref": "#/components/schemas/TenantState"
            - type: 'null'
        zitadel_org_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Zitadel Org Id
      title: TenantUpdatePublic
      type: object
    TokenUsageSummary:
      properties:
        end_date:
          format: date-time
          title: End Date
          type: string
        models:
          items:
            "$ref": "#/components/schemas/ModelUsage"
          title: Models
          type: array
        start_date:
          format: date-time
          title: Start Date
          type: string
        total_input_token_usage:
          description: Total input token usage across all models
          title: Total Input Token Usage
          type: integer
        total_output_token_usage:
          description: Total output token usage across all models
          title: Total Output Token Usage
          type: integer
        total_token_usage:
          description: Total combined token usage across all models
          title: Total Token Usage
          type: integer
      required:
        - start_date
        - end_date
        - models
        - total_input_token_usage
        - total_output_token_usage
        - total_token_usage
      title: TokenUsageSummary
      type: object
    ToolAssistant:
      properties:
        handle:
          title: Handle
          type: string
        id:
          format: uuid
          title: Id
          type: string
      required:
        - id
        - handle
      title: ToolAssistant
      type: object
    TranscriptionModelPublic:
      properties:
        can_access:
          default: false
          title: Can Access
          type: boolean
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        family:
          "$ref": "#/components/schemas/ModelFamily"
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        id:
          format: uuid
          title: Id
          type: string
        is_deprecated:
          title: Is Deprecated
          type: boolean
        is_locked:
          default: true
          title: Is Locked
          type: boolean
        is_org_default:
          default: false
          title: Is Org Default
          type: boolean
        is_org_enabled:
          default: false
          title: Is Org Enabled
          type: boolean
        name:
          title: Name
          type: string
        nickname:
          title: Nickname
          type: string
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
        stability:
          "$ref": "#/components/schemas/ModelStability"
      required:
        - id
        - name
        - nickname
        - family
        - is_deprecated
        - stability
        - hosting
      title: TranscriptionModelPublic
      type: object
    TranscriptionModelSecurityStatus:
      properties:
        can_access:
          default: false
          title: Can Access
          type: boolean
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        family:
          "$ref": "#/components/schemas/ModelFamily"
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        id:
          format: uuid
          title: Id
          type: string
        is_deprecated:
          title: Is Deprecated
          type: boolean
        is_locked:
          default: true
          title: Is Locked
          type: boolean
        is_org_default:
          default: false
          title: Is Org Default
          type: boolean
        is_org_enabled:
          default: false
          title: Is Org Enabled
          type: boolean
        meets_security_classification:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Meets Security Classification
        name:
          title: Name
          type: string
        nickname:
          title: Nickname
          type: string
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
        stability:
          "$ref": "#/components/schemas/ModelStability"
      required:
        - id
        - name
        - nickname
        - family
        - is_deprecated
        - stability
        - hosting
      title: TranscriptionModelSecurityStatus
      type: object
    TranscriptionModelUpdate:
      properties:
        is_org_default:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Org Default
        is_org_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Org Enabled
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          default: NOT_PROVIDED
          title: Security Classification
      title: TranscriptionModelUpdate
      type: object
    TransferApplicationRequest:
      properties:
        move_resources:
          default: false
          title: Move Resources
          type: boolean
        target_space_id:
          format: uuid
          title: Target Space Id
          type: string
      required:
        - target_space_id
      title: TransferApplicationRequest
      type: object
    TransferRequest:
      properties:
        target_space_id:
          format: uuid
          title: Target Space Id
          type: string
      required:
        - target_space_id
      title: TransferRequest
      type: object
    UpdateInterval:
      enum:
        - never
        - weekly
      title: UpdateInterval
      type: string
    UpdateSpaceDryRunResponse:
      properties:
        apps:
          items:
            "$ref": "#/components/schemas/AppSparse"
          title: Apps
          type: array
        assistants:
          items:
            "$ref": "#/components/schemas/AssistantSparse"
          title: Assistants
          type: array
        completion_models:
          items:
            "$ref": "#/components/schemas/CompletionModelPublic"
          title: Completion Models
          type: array
        embedding_models:
          items:
            "$ref": "#/components/schemas/EmbeddingModelPublic"
          title: Embedding Models
          type: array
        group_chats:
          items:
            "$ref": "#/components/schemas/GroupChatSparse"
          title: Group Chats
          type: array
        services:
          items:
            "$ref": "#/components/schemas/ServiceSparse"
          title: Services
          type: array
        transcription_models:
          items:
            "$ref": "#/components/schemas/TranscriptionModelPublic"
          title: Transcription Models
          type: array
      required:
        - assistants
        - group_chats
        - services
        - apps
        - completion_models
        - embedding_models
        - transcription_models
      title: UpdateSpaceDryRunResponse
      type: object
    UpdateSpaceMemberRequest:
      properties:
        role:
          "$ref": "#/components/schemas/SpaceRoleValue"
      required:
        - role
      title: UpdateSpaceMemberRequest
      type: object
    UseTools:
      properties:
        assistants:
          items:
            "$ref": "#/components/schemas/ToolAssistant"
          title: Assistants
          type: array
      required:
        - assistants
      title: UseTools
      type: object
    UserAddAdmin:
      properties:
        email:
          format: email
          title: Email
          type: string
        password:
          anyOf:
            - maxLength: 100
              minLength: 7
              type: string
            - type: 'null'
          title: Password
        predefined_roles:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Predefined Roles
          type: array
        quota_limit:
          anyOf:
            - minimum: 1000
              type: integer
            - type: 'null'
          description: Size in bytes
          title: Quota Limit
        roles:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Roles
          type: array
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
      required:
        - email
      title: UserAddAdmin
      type: object
    UserAddSuperAdmin:
      properties:
        email:
          format: email
          title: Email
          type: string
        password:
          anyOf:
            - maxLength: 100
              minLength: 7
              type: string
            - type: 'null'
          title: Password
        predefined_roles:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Predefined Roles
          type: array
        quota_limit:
          anyOf:
            - minimum: 1000
              type: integer
            - type: 'null'
          description: Size in bytes
          title: Quota Limit
        roles:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Roles
          type: array
        tenant_id:
          format: uuid
          title: Tenant Id
          type: string
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
      required:
        - email
        - tenant_id
      title: UserAddSuperAdmin
      type: object
    UserAdminView:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        email:
          format: email
          title: Email
          type: string
        email_verified:
          title: Email Verified
          type: boolean
        id:
          format: uuid
          title: Id
          type: string
        is_active:
          title: Is Active
          type: boolean
        predefined_roles:
          items:
            "$ref": "#/components/schemas/PredefinedRolePublic"
          title: Predefined Roles
          type: array
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        quota_used:
          default: 0
          title: Quota Used
          type: integer
        roles:
          items:
            "$ref": "#/components/schemas/RolePublic"
          title: Roles
          type: array
        state:
          "$ref": "#/components/schemas/UserState"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        used_tokens:
          title: Used Tokens
          type: integer
        user_groups:
          items:
            "$ref": "#/components/schemas/UserGroupRead"
          title: User Groups
          type: array
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
      required:
        - email
        - id
        - used_tokens
        - email_verified
        - quota_limit
        - is_active
        - state
        - roles
        - predefined_roles
        - user_groups
      title: UserAdminView
      type: object
    UserCreated:
      properties:
        access_token:
          anyOf:
            - "$ref": "#/components/schemas/AccessToken"
            - type: 'null'
        api_key:
          anyOf:
            - "$ref": "#/components/schemas/ApiKey"
            - type: 'null'
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        email:
          format: email
          title: Email
          type: string
        email_verified:
          default: false
          title: Email Verified
          type: boolean
        id:
          format: uuid
          title: Id
          type: string
        is_active:
          default: true
          title: Is Active
          type: boolean
        modules:
          items:
            type: string
          readOnly: true
          title: Modules
          type: array
        password:
          anyOf:
            - maxLength: 100
              minLength: 7
              type: string
            - type: 'null'
          title: Password
        permissions:
          items:
            "$ref": "#/components/schemas/Permission"
          readOnly: true
          title: Permissions
          type: array
          uniqueItems: true
        predefined_roles:
          default: [ ]
          items:
            "$ref": "#/components/schemas/PredefinedRoleInDB"
          title: Predefined Roles
          type: array
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        quota_used:
          default: 0
          title: Quota Used
          type: integer
        roles:
          default: [ ]
          items:
            "$ref": "#/components/schemas/RoleInDB"
          title: Roles
          type: array
        salt:
          anyOf:
            - type: string
            - type: 'null'
          title: Salt
        state:
          "$ref": "#/components/schemas/UserState"
        tenant:
          "$ref": "#/components/schemas/TenantInDB"
        tenant_id:
          format: uuid
          title: Tenant Id
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        used_tokens:
          default: 0
          title: Used Tokens
          type: integer
        user_groups:
          default: [ ]
          items:
            "$ref": "#/components/schemas/UserGroupInDBRead"
          title: User Groups
          type: array
        user_groups_ids:
          items:
            type: integer
          readOnly: true
          title: User Groups Ids
          type: array
          uniqueItems: true
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
      required:
        - email
        - id
        - state
        - tenant_id
        - tenant
        - api_key
        - access_token
        - modules
        - user_groups_ids
        - permissions
      title: UserCreated
      type: object
    UserCreatedAdminView:
      properties:
        api_key:
          "$ref": "#/components/schemas/ApiKey"
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        email:
          format: email
          title: Email
          type: string
        email_verified:
          title: Email Verified
          type: boolean
        id:
          format: uuid
          title: Id
          type: string
        is_active:
          title: Is Active
          type: boolean
        predefined_roles:
          items:
            "$ref": "#/components/schemas/PredefinedRolePublic"
          title: Predefined Roles
          type: array
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        quota_used:
          default: 0
          title: Quota Used
          type: integer
        roles:
          items:
            "$ref": "#/components/schemas/RolePublic"
          title: Roles
          type: array
        state:
          "$ref": "#/components/schemas/UserState"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        used_tokens:
          title: Used Tokens
          type: integer
        user_groups:
          items:
            "$ref": "#/components/schemas/UserGroupRead"
          title: User Groups
          type: array
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
      required:
        - email
        - id
        - used_tokens
        - email_verified
        - quota_limit
        - is_active
        - state
        - roles
        - predefined_roles
        - user_groups
        - api_key
      title: UserCreatedAdminView
      type: object
    UserGroupCreateRequest:
      properties:
        name:
          title: Name
          type: string
      required:
        - name
      title: UserGroupCreateRequest
      type: object
    UserGroupInDBRead:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
      title: UserGroupInDBRead
      type: object
    UserGroupPublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        users:
          default: [ ]
          items:
            "$ref": "#/components/schemas/UserPublicBase"
          title: Users
          type: array
      required:
        - id
        - name
      title: UserGroupPublic
      type: object
    UserGroupRead:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - name
      title: UserGroupRead
      type: object
    UserGroupUpdateRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        users:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Users
          type: array
      title: UserGroupUpdateRequest
      type: object
    UserInDB:
      properties:
        api_key:
          anyOf:
            - "$ref": "#/components/schemas/ApiKeyInDB"
            - type: 'null'
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        email:
          format: email
          title: Email
          type: string
        email_verified:
          default: false
          title: Email Verified
          type: boolean
        id:
          format: uuid
          title: Id
          type: string
        is_active:
          default: true
          title: Is Active
          type: boolean
        modules:
          items:
            type: string
          readOnly: true
          title: Modules
          type: array
        password:
          anyOf:
            - maxLength: 100
              minLength: 7
              type: string
            - type: 'null'
          title: Password
        permissions:
          items:
            "$ref": "#/components/schemas/Permission"
          readOnly: true
          title: Permissions
          type: array
          uniqueItems: true
        predefined_roles:
          default: [ ]
          items:
            "$ref": "#/components/schemas/PredefinedRoleInDB"
          title: Predefined Roles
          type: array
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        quota_used:
          default: 0
          title: Quota Used
          type: integer
        roles:
          default: [ ]
          items:
            "$ref": "#/components/schemas/RoleInDB"
          title: Roles
          type: array
        salt:
          anyOf:
            - type: string
            - type: 'null'
          title: Salt
        state:
          "$ref": "#/components/schemas/UserState"
        tenant:
          "$ref": "#/components/schemas/TenantInDB"
        tenant_id:
          format: uuid
          title: Tenant Id
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        used_tokens:
          default: 0
          title: Used Tokens
          type: integer
        user_groups:
          default: [ ]
          items:
            "$ref": "#/components/schemas/UserGroupInDBRead"
          title: User Groups
          type: array
        user_groups_ids:
          items:
            type: integer
          readOnly: true
          title: User Groups Ids
          type: array
          uniqueItems: true
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
      required:
        - email
        - id
        - state
        - tenant_id
        - tenant
        - modules
        - user_groups_ids
        - permissions
      title: UserInDB
      type: object
    UserIntegration:
      properties:
        connected:
          title: Connected
          type: boolean
        description:
          title: Description
          type: string
        id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Id
        integration_type:
          "$ref": "#/components/schemas/IntegrationType"
        name:
          title: Name
          type: string
        tenant_integration_id:
          format: uuid
          title: Tenant Integration Id
          type: string
      required:
        - name
        - description
        - integration_type
        - tenant_integration_id
        - connected
      title: UserIntegration
      type: object
    UserIntegrationList:
      properties:
        count:
          readOnly: true
          title: Count
          type: integer
        items:
          items:
            "$ref": "#/components/schemas/UserIntegration"
          title: Items
          type: array
      required:
        - items
        - count
      title: UserIntegrationList
      type: object
    UserProvision:
      properties:
        zitadel_token:
          title: Zitadel Token
          type: string
      required:
        - zitadel_token
      title: UserProvision
      type: object
    UserPublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        email:
          format: email
          title: Email
          type: string
        id:
          format: uuid
          title: Id
          type: string
        predefined_roles:
          items:
            "$ref": "#/components/schemas/PredefinedRolePublic"
          title: Predefined Roles
          type: array
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        quota_used:
          default: 0
          title: Quota Used
          type: integer
        roles:
          items:
            "$ref": "#/components/schemas/RolePublic"
          title: Roles
          type: array
        truncated_api_key:
          anyOf:
            - type: string
            - type: 'null'
          title: Truncated Api Key
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        user_groups:
          items:
            "$ref": "#/components/schemas/UserGroupRead"
          title: User Groups
          type: array
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
      required:
        - email
        - id
        - roles
        - predefined_roles
        - user_groups
      title: UserPublic
      type: object
    UserPublicBase:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        email:
          format: email
          title: Email
          type: string
        id:
          format: uuid
          title: Id
          type: string
        quota_used:
          default: 0
          title: Quota Used
          type: integer
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
      required:
        - email
        - id
      title: UserPublicBase
      type: object
    UserSparse:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        email:
          format: email
          title: Email
          type: string
        id:
          format: uuid
          title: Id
          type: string
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
      required:
        - id
        - email
      title: UserSparse
      type: object
    UserState:
      enum:
        - invited
        - active
        - inactive
        - deleted
      title: UserState
      type: string
    UserUpdatePublic:
      properties:
        email:
          anyOf:
            - format: email
              type: string
            - type: 'null'
          title: Email
        password:
          anyOf:
            - maxLength: 100
              minLength: 7
              type: string
            - type: 'null'
          title: Password
        predefined_roles:
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Predefined Roles
          type: array
        quota_limit:
          anyOf:
            - minimum: 1000
              type: integer
            - type: 'null'
          description: Size in bytes
          title: Quota Limit
        roles:
          anyOf:
            - items:
                "$ref": "#/components/schemas/ModelId"
              type: array
            - type: 'null'
          title: Roles
        state:
          anyOf:
            - "$ref": "#/components/schemas/UserState"
            - type: 'null'
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
      title: UserUpdatePublic
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
        - loc
        - msg
        - type
      title: ValidationError
      type: object
    WebSearchResultPublic:
      properties:
        id:
          format: uuid
          title: Id
          type: string
        title:
          title: Title
          type: string
        url:
          title: Url
          type: string
      required:
        - id
        - title
        - url
      title: WebSearchResultPublic
      type: object
    WebsiteCreate:
      properties:
        crawl_type:
          "$ref": "#/components/schemas/CrawlType"
          default: crawl
        download_files:
          default: false
          title: Download Files
          type: boolean
        embedding_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        update_interval:
          "$ref": "#/components/schemas/UpdateInterval"
          default: never
        url:
          title: Url
          type: string
      required:
        - url
      title: WebsiteCreate
      type: object
    WebsiteCreateRequestDeprecated:
      properties:
        crawl_type:
          "$ref": "#/components/schemas/CrawlType"
          default: crawl
        download_files:
          default: false
          title: Download Files
          type: boolean
        embedding_model:
          "$ref": "#/components/schemas/ModelId"
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        space_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          title: Space Id
        update_interval:
          "$ref": "#/components/schemas/UpdateInterval"
          default: never
        url:
          format: uri
          maxLength: 2083
          minLength: 1
          title: Url
          type: string
      required:
        - url
        - embedding_model
      title: WebsiteCreateRequestDeprecated
      type: object
    WebsiteMetadata:
      properties:
        size:
          title: Size
          type: integer
      required:
        - size
      title: WebsiteMetadata
      type: object
    WebsitePublic:
      properties:
        crawl_type:
          "$ref": "#/components/schemas/CrawlType"
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        download_files:
          title: Download Files
          type: boolean
        embedding_model:
          "$ref": "#/components/schemas/EmbeddingModelPublic"
        id:
          format: uuid
          title: Id
          type: string
        latest_crawl:
          anyOf:
            - "$ref": "#/components/schemas/intric__websites__presentation__website_models__CrawlRunPublic"
            - type: 'null'
        metadata:
          "$ref": "#/components/schemas/WebsiteMetadata"
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        permissions:
          default: [ ]
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
          type: array
        space_id:
          format: uuid
          title: Space Id
          type: string
        update_interval:
          "$ref": "#/components/schemas/UpdateInterval"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
        url:
          title: Url
          type: string
      required:
        - id
        - name
        - url
        - space_id
        - download_files
        - crawl_type
        - update_interval
        - latest_crawl
        - embedding_model
        - metadata
      title: WebsitePublic
      type: object
    WebsiteUpdate:
      properties:
        crawl_type:
          "$ref": "#/components/schemas/CrawlType"
          default: NOT_PROVIDED
          title: Crawl Type
        download_files:
          default: false
          title: Download Files
          type: boolean
        name:
          anyOf:
            - type: string
            - type: 'null'
          default: NOT_PROVIDED
          title: Name
        update_interval:
          "$ref": "#/components/schemas/UpdateInterval"
          default: NOT_PROVIDED
          title: Update Interval
        url:
          default: NOT_PROVIDED
          title: Url
          type: string
      title: WebsiteUpdate
      type: object
    WizardType:
      enum:
        - attachments
        - groups
      title: WizardType
      type: string
    WsAppRunUpdate:
      "$defs":
        Space:
          properties:
            id:
              format: uuid
              title: Id
              type: string
            personal:
              title: Personal
              type: boolean
          required:
            - id
            - personal
          title: Space
          type: object
        Status:
          enum:
            - in progress
            - queued
            - complete
            - failed
            - not found
          title: Status
          type: string
      properties:
        app_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          default:
          title: App Id
        id:
          format: uuid
          title: Id
          type: string
        space:
          anyOf:
            - "$ref": "#/components/schemas/WsAppRunUpdate/$defs/Space"
            - type: 'null'
          default:
        status:
          "$ref": "#/components/schemas/WsAppRunUpdate/$defs/Status"
      required:
        - id
        - status
      title: WsAppRunUpdate
      type: object
    WsOutgoingWebSocketMessage:
      "$defs":
        MessagePayload:
          properties: { }
          title: MessagePayload
          type: object
        OutGoingMessageType:
          enum:
            - pong
            - app_run_updates
          title: OutGoingMessageType
          type: string
      properties:
        data:
          anyOf:
            - "$ref": "#/components/schemas/WsOutgoingWebSocketMessage/$defs/MessagePayload"
            - type: 'null'
          default:
        type:
          "$ref": "#/components/schemas/WsOutgoingWebSocketMessage/$defs/OutGoingMessageType"
      required:
        - type
      title: WsOutgoingWebSocketMessage
      type: object
    intric__websites__crawl_dependencies__crawl_models__CrawlRunPublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        files_downloaded:
          anyOf:
            - type: integer
            - type: 'null'
          title: Files Downloaded
        files_failed:
          anyOf:
            - type: integer
            - type: 'null'
          title: Files Failed
        finished_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Finished At
        id:
          format: uuid
          title: Id
          type: string
        pages_crawled:
          anyOf:
            - type: integer
            - type: 'null'
          title: Pages Crawled
        pages_failed:
          anyOf:
            - type: integer
            - type: 'null'
          title: Pages Failed
        result_location:
          anyOf:
            - type: string
            - type: 'null'
          title: Result Location
        status:
          anyOf:
            - "$ref": "#/components/schemas/Status"
            - type: 'null'
          default: queued
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
      title: CrawlRunPublic
      type: object
    intric__websites__presentation__website_models__CrawlRunPublic:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Created At
        files_downloaded:
          anyOf:
            - type: integer
            - type: 'null'
          title: Files Downloaded
        files_failed:
          anyOf:
            - type: integer
            - type: 'null'
          title: Files Failed
        finished_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Finished At
        id:
          format: uuid
          title: Id
          type: string
        pages_crawled:
          anyOf:
            - type: integer
            - type: 'null'
          title: Pages Crawled
        pages_failed:
          anyOf:
            - type: integer
            - type: 'null'
          title: Pages Failed
        result_location:
          anyOf:
            - type: string
            - type: 'null'
          title: Result Location
        status:
          "$ref": "#/components/schemas/Status"
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: 'null'
          title: Updated At
      required:
        - id
        - pages_crawled
        - files_downloaded
        - pages_failed
        - files_failed
        - status
        - result_location
        - finished_at
      title: CrawlRunPublic
      type: object
  securitySchemes:
    APIKeyHeader:
      in: header
      name: api-key
      type: apiKey
    OAuth2PasswordBearer:
      flows:
        password:
          scopes: { }
          tokenUrl: "/api/v1/users/login/token/"
      type: oauth2
info:
  summary: General AI framework
  title: Intric
  version: DEV
openapi: 3.1.0
paths:
  "/api/v1/admin/privacy-policy/":
    post:
      deprecated: true
      operationId: update_privacy_policy_api_v1_admin_privacy_policy__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PrivacyPolicy"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TenantPublic"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Privacy Policy
      tags:
        - admin
  "/api/v1/admin/users/":
    get:
      deprecated: true
      operationId: get_users_api_v1_admin_users__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_UserAdminView_"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Users
      tags:
        - admin
    post:
      deprecated: true
      operationId: register_user_api_v1_admin_users__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserAddAdmin"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserCreatedAdminView"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Register User
      tags:
        - admin
  "/api/v1/admin/users/{username}":
    delete:
      deprecated: true
      operationId: delete_user_api_v1_admin_users__username__delete
      parameters:
        - in: path
          name: username
          required: true
          schema:
            title: Username
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DeleteResponse"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete User
      tags:
        - admin
  "/api/v1/admin/users/{username}/":
    post:
      deprecated: true
      description: Omitted fields are not updated.
      operationId: update_user_api_v1_admin_users__username___post
      parameters:
        - in: path
          name: username
          required: true
          schema:
            title: Username
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserUpdatePublic"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAdminView"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update User
      tags:
        - admin
  "/api/v1/ai-models/":
    get:
      description: Get all completion, embedding, and transcription models.
      operationId: get_models_api_v1_ai_models__get
      parameters:
        - description: Optional space ID to provide security classification status.
          in: query
          name: space_id
          required: false
          schema:
            anyOf:
              - format: uuid
                type: string
              - type: 'null'
            description: Optional space ID to provide security classification status.
            title: Space Id
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModelsPresentation"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Internal Server Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get all AI models
      tags:
        - ai-models
  "/api/v1/allowed-origins/":
    get:
      operationId: get_origins_api_v1_allowed_origins__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_AllowedOriginPublic_"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Origins
      tags:
        - allowed-origins
  "/api/v1/analysis/assistants/{assistant_id}/":
    get:
      description: |-
        Get all the questions asked to an assistant in the last `days_since` days.

        `days_since`: How long back in time to get the questions.

        `from_date`: Start date for filtering questions.
            If no time is provided, time components default to 00:00:00.

        `to_date`: End date for filtering questions.
            If no time is provided, time components default to 00:00:00.

        `include_followups`: If not selected, only the first question of a session is returned.
            Order is by date ascending, but if followups are included they are grouped together
            with their original question.
      operationId: get_most_recent_questions_api_v1_analysis_assistants__assistant_id___get
      parameters:
        - in: path
          name: assistant_id
          required: true
          schema:
            format: uuid
            title: Assistant Id
            type: string
        - in: query
          name: days_since
          required: false
          schema:
            default: 30
            maximum: 90
            minimum: 0
            title: Days Since
            type: integer
        - in: query
          name: from_date
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: 'null'
            title: From Date
        - in: query
          name: to_date
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: 'null'
            title: To Date
        - in: query
          name: include_followups
          required: false
          schema:
            default: false
            title: Include Followups
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_Message_"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Most Recent Questions
      tags:
        - analysis
    post:
      description: |-
        Ask a question with the questions asked to an assistant in the last
          `days_since` days as the context.

        `days_since`: How long back in time to get the questions.

        `from_date`: Start date for filtering questions.
            If no time is provided, time components default to 00:00:00.

        `to_date`: End date for filtering questions.
            If no time is provided, time components default to 00:00:00.

        `include_followups`: If not selected, only the first question of a session is returned.
            Order is by date ascending, but if followups are included they are grouped together
            with their original question.
      operationId: ask_question_about_questions_api_v1_analysis_assistants__assistant_id___post
      parameters:
        - in: path
          name: assistant_id
          required: true
          schema:
            format: uuid
            title: Assistant Id
            type: string
        - in: query
          name: days_since
          required: false
          schema:
            default: 30
            maximum: 90
            minimum: 0
            title: Days Since
            type: integer
        - in: query
          name: from_date
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: 'null'
            title: From Date
        - in: query
          name: to_date
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: 'null'
            title: To Date
        - in: query
          name: include_followups
          required: false
          schema:
            default: false
            title: Include Followups
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AskAnalysis"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: { }
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Ask Question About Questions
      tags:
        - analysis
  "/api/v1/analysis/conversation-insights/":
    get:
      description: |-
        Get statistics about conversations for either an assistant or a group chat.

        Either assistant_id or group_chat_id must be provided, but not both.
        Start time and end time are optional filters. If no time is provided in the datetime parameters,
        time components default to 00:00:00.
      operationId: get_conversation_insights_api_v1_analysis_conversation_insights__get
      parameters:
        - in: query
          name: start_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: 'null'
            title: Start Time
        - in: query
          name: end_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: 'null'
            title: End Time
        - in: query
          name: assistant_id
          required: false
          schema:
            anyOf:
              - format: uuid
                type: string
              - type: 'null'
            title: Assistant Id
        - in: query
          name: group_chat_id
          required: false
          schema:
            anyOf:
              - format: uuid
                type: string
              - type: 'null'
            title: Group Chat Id
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConversationInsightResponse"
          description: Successful Response
        '403':
          description: Forbidden - Either user is not ADMIN/EDITOR or insights are
            not enabled
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Conversation Insights
      tags:
        - analysis
    post:
      description: |-
        Ask a question about the questions asked to an assistant or group chat.

        This unified endpoint works with both assistants and group chats.
        Either assistant_id or group_chat_id must be provided, but not both.

        Args:
            ask_analysis: Contains the question and streaming preference
            days_since: How long back in time to get the questions
            from_date: Start date to filter questions (overrides days_since).
                If no time is provided, time components default to 00:00:00.
            to_date: End date to filter questions (overrides days_since).
                If no time is provided, time components default to 00:00:00.
            include_followups: If False, only returns first question of each session
            assistant_id: UUID of assistant to analyze questions for
            group_chat_id: UUID of group chat to analyze questions for

        Returns:
            AnalysisAnswer containing the AI response
      operationId: ask_unified_questions_about_questions_api_v1_analysis_conversation_insights__post
      parameters:
        - in: query
          name: days_since
          required: false
          schema:
            default: 30
            maximum: 90
            minimum: 0
            title: Days Since
            type: integer
        - in: query
          name: from_date
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: 'null'
            title: From Date
        - in: query
          name: to_date
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: 'null'
            title: To Date
        - in: query
          name: include_followups
          required: false
          schema:
            default: false
            title: Include Followups
            type: boolean
        - in: query
          name: assistant_id
          required: false
          schema:
            anyOf:
              - format: uuid
                type: string
              - type: 'null'
            title: Assistant Id
        - in: query
          name: group_chat_id
          required: false
          schema:
            anyOf:
              - format: uuid
                type: string
              - type: 'null'
            title: Group Chat Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AskAnalysis"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: { }
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Ask Unified Questions About Questions
      tags:
        - analysis
  "/api/v1/analysis/conversation-insights/sessions/":
    get:
      description: |-
        Get all sessions for an assistant or group chat across all
        users in the tenant (with insight access).

        This endpoint requires the user to be OWNER or EDITOR,
        and the assistant/group chat must have insight_enabled set to true.

        Args:
            assistant_id: UUID of the assistant (optional)
            group_chat_id: UUID of the group chat (optional)
            limit: Maximum number of sessions to return
            cursor: Datetime to start fetching from. If no time is provided, time defaults to 00:00:00.
            previous: Whether to fetch sessions before or after the cursor
            name_filter: Filter sessions by name
            start_date: Start date to filter sessions (optional).
                If no time is provided, time components default to 00:00:00.
            end_date: End date to filter sessions (optional).
                If no time is provided, time components default to 00:00:00.

        Returns:
            Paginated list of sessions
      operationId: get_conversation_insight_sessions_api_v1_analysis_conversation_insights_sessions__get
      parameters:
        - in: query
          name: assistant_id
          required: false
          schema:
            anyOf:
              - format: uuid
                type: string
              - type: 'null'
            title: Assistant Id
        - in: query
          name: group_chat_id
          required: false
          schema:
            anyOf:
              - format: uuid
                type: string
              - type: 'null'
            title: Group Chat Id
        - in: query
          name: limit
          required: false
          schema:
            anyOf:
              - maximum: 100
                minimum: 1
                type: integer
              - type: 'null'
            title: Limit
        - in: query
          name: cursor
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: 'null'
            title: Cursor
        - in: query
          name: previous
          required: false
          schema:
            default: false
            title: Previous
            type: boolean
        - in: query
          name: name_filter
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Name Filter
        - in: query
          name: start_date
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: 'null'
            title: Start Date
        - in: query
          name: end_date
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: 'null'
            title: End Date
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CursorPaginatedResponse_SessionMetadataPublic_"
          description: Successful Response
        '403':
          description: Forbidden - Either user is not ADMIN/EDITOR or insights are
            not enabled
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Conversation Insight Sessions
      tags:
        - analysis
  "/api/v1/analysis/conversation-insights/sessions/{session_id}/":
    get:
      description: |-
        Get a specific session with insight access.

        This endpoint requires the user to be OWNER or EDITOR, and the assistant/group chat
        must have insight_enabled set to true.

        Args:
            session_id: UUID of the session
            assistant_id: UUID of the assistant (optional)
            group_chat_id: UUID of the group chat (optional)

        Returns:
            Session data
      operationId: get_conversation_insight_session_api_v1_analysis_conversation_insights_sessions__session_id___get
      parameters:
        - in: path
          name: session_id
          required: true
          schema:
            format: uuid
            title: Session Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
          description: Successful Response
        '403':
          description: Forbidden - Either user is not ADMIN/EDITOR or insights are
            not enabled
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Conversation Insight Session
      tags:
        - analysis
  "/api/v1/analysis/counts/":
    get:
      description: Total counts.
      operationId: get_counts_api_v1_analysis_counts__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Counts"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Counts
      tags:
        - analysis
  "/api/v1/analysis/metadata-statistics/":
    get:
      description: |-
        Data for analytics.

        Note on datetime parameters:
        - If no time is provided in the datetime, time components default to 00:00:00
      operationId: get_metadata_api_v1_analysis_metadata_statistics__get
      parameters:
        - in: query
          name: start_date
          required: false
          schema:
            default: '2025-04-23T19:42:03.491991Z'
            format: date-time
            title: Start Date
            type: string
        - in: query
          name: end_date
          required: false
          schema:
            default: '2025-05-23T20:43:03.492003Z'
            format: date-time
            title: End Date
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MetadataStatistics"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Metadata
      tags:
        - analysis
  "/api/v1/app-runs/{id}/":
    delete:
      operationId: delete_app_run_api_v1_app_runs__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '204':
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete App Run
      tags:
        - app-runs
    get:
      operationId: get_app_run_api_v1_app_runs__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppRunPublic"
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get App Run
      tags:
        - app-runs
  "/api/v1/apps/{id}/":
    delete:
      operationId: delete_app_api_v1_apps__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '204':
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete App
      tags:
        - apps
    get:
      operationId: get_app_api_v1_apps__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppPublic"
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get App
      tags:
        - apps
    patch:
      operationId: update_app_api_v1_apps__id___patch
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AppUpdateRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update App
      tags:
        - apps
  "/api/v1/apps/{id}/prompts/":
    get:
      operationId: get_prompts_api_v1_apps__id__prompts__get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_PromptSparse_"
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Prompts
      tags:
        - apps
  "/api/v1/apps/{id}/publish/":
    post:
      operationId: publish_app_api_v1_apps__id__publish__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: query
          name: published
          required: true
          schema:
            title: Published
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppPublic"
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Publish App
      tags:
        - apps
  "/api/v1/apps/{id}/runs/":
    get:
      operationId: get_app_runs_api_v1_apps__id__runs__get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_AppRunSparse_"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get App Runs
      tags:
        - apps
    post:
      operationId: run_app_api_v1_apps__id__runs__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RunAppRequest"
        required: true
      responses:
        '203':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppRunPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Run App
      tags:
        - apps
  "/api/v1/assistants/":
    get:
      description: Requires Admin permission if `for_tenant` is `true`.
      operationId: get_assistants_api_v1_assistants__get
      parameters:
        - in: query
          name: name
          required: false
          schema:
            title: Name
            type: string
        - in: query
          name: for_tenant
          required: false
          schema:
            default: false
            title: For Tenant
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_AssistantPublic_"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Assistants
      tags:
        - assistants
    post:
      deprecated: true
      operationId: create_assistant_api_v1_assistants__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AssistantCreatePublic"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AssistantPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create Assistant
      tags:
        - assistants
  "/api/v1/assistants/{id}/":
    delete:
      operationId: delete_assistant_api_v1_assistants__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '204':
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete Assistant
      tags:
        - assistants
    get:
      operationId: get_assistant_api_v1_assistants__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AssistantPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Assistant
      tags:
        - assistants
    post:
      description: Omitted fields are not updated
      operationId: update_assistant_api_v1_assistants__id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartialAssistantUpdatePublic"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AssistantPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Assistant
      tags:
        - assistants
  "/api/v1/assistants/{id}/api-keys/":
    get:
      description: |-
        Generates a read-only api key for this assistant.

        This api key can only be used on `POST /api/v1/assistants/{id}/sessions/`
        and `POST /api/v1/assistants/{id}/sessions/{session_id}/`.
      operationId: generate_read_only_assistant_key_api_v1_assistants__id__api_keys__get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiKey"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Generate Read Only Assistant Key
      tags:
        - assistants
  "/api/v1/assistants/{id}/publish/":
    post:
      operationId: publish_assistant_api_v1_assistants__id__publish__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: query
          name: published
          required: true
          schema:
            title: Published
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AssistantPublic"
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Publish Assistant
      tags:
        - assistants
  "/api/v1/assistants/{id}/sessions/":
    get:
      operationId: get_assistant_sessions_api_v1_assistants__id__sessions__get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: query
          name: limit
          required: false
          schema:
            exclusiveMinimum: 0
            title: Limit
            type: integer
        - in: query
          name: cursor
          required: false
          schema:
            format: date-time
            title: Cursor
            type: string
        - in: query
          name: previous
          required: false
          schema:
            default: false
            title: Previous
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CursorPaginatedResponse_SessionMetadataPublic_"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Assistant Sessions
      tags:
        - assistants
    post:
      description: Streams the response as Server-Sent Events if stream == true
      operationId: ask_assistant_api_v1_assistants__id__sessions__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: query
          name: version
          required: false
          schema:
            default: 1
            maximum: 2
            minimum: 1
            title: Version
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AskAssistant"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AskResponse"
            text/event-stream:
              schema:
                "$defs":
                  CompletionModelPublic:
                    properties:
                      base_url:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Base Url
                      can_access:
                        default: false
                        title: Can Access
                        type: boolean
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      deployment_name:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Deployment Name
                      description:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Description
                      family:
                        "$ref": "#/components/schemas/ModelFamily"
                      hf_link:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Hf Link
                      hosting:
                        "$ref": "#/components/schemas/ModelHostingLocation"
                      id:
                        format: uuid
                        title: Id
                        type: string
                      is_deprecated:
                        title: Is Deprecated
                        type: boolean
                      is_locked:
                        default: true
                        title: Is Locked
                        type: boolean
                      is_org_default:
                        default: false
                        title: Is Org Default
                        type: boolean
                      is_org_enabled:
                        default: false
                        title: Is Org Enabled
                        type: boolean
                      name:
                        title: Name
                        type: string
                      nickname:
                        title: Nickname
                        type: string
                      nr_billion_parameters:
                        anyOf:
                          - type: integer
                          - type: 'null'
                        title: Nr Billion Parameters
                      open_source:
                        anyOf:
                          - type: boolean
                          - type: 'null'
                        title: Open Source
                      org:
                        anyOf:
                          - "$ref": "#/components/schemas/ModelOrg"
                          - type: 'null'
                      reasoning:
                        title: Reasoning
                        type: boolean
                      security_classification:
                        anyOf:
                          - "$ref": "#/components/schemas/SecurityClassificationPublic"
                          - type: 'null'
                      stability:
                        "$ref": "#/components/schemas/ModelStability"
                      token_limit:
                        title: Token Limit
                        type: integer
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      vision:
                        title: Vision
                        type: boolean
                    required:
                      - id
                      - name
                      - nickname
                      - family
                      - token_limit
                      - is_deprecated
                      - stability
                      - hosting
                      - vision
                      - reasoning
                    title: CompletionModelPublic
                    type: object
                  FilePublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      mimetype:
                        title: Mimetype
                        type: string
                      name:
                        title: Name
                        type: string
                      size:
                        title: Size
                        type: integer
                      transcription:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Transcription
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                    required:
                      - id
                      - name
                      - mimetype
                      - size
                    title: FilePublic
                    type: object
                  InfoBlobAskAssistantPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      group_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Group Id
                      id:
                        format: uuid
                        title: Id
                        type: string
                      metadata:
                        "$ref": "#/components/schemas/InfoBlobMetadata"
                      score:
                        title: Score
                        type: number
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      website_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Website Id
                    required:
                      - id
                      - metadata
                      - score
                    title: InfoBlobAskAssistantPublic
                    type: object
                  InfoBlobMetadata:
                    properties:
                      embedding_model_id:
                        format: uuid
                        title: Embedding Model Id
                        type: string
                      size:
                        title: Size
                        type: integer
                      title:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Title
                      url:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Url
                    required:
                      - embedding_model_id
                      - size
                    title: InfoBlobMetadata
                    type: object
                  ModelFamily:
                    enum:
                      - openai
                      - mistral
                      - vllm
                      - claude
                      - azure
                      - ovhcloud
                      - e5
                    title: ModelFamily
                    type: string
                  ModelHostingLocation:
                    enum:
                      - usa
                      - eu
                      - swe
                    title: ModelHostingLocation
                    type: string
                  ModelOrg:
                    enum:
                      - OpenAI
                      - Meta
                      - Microsoft
                      - Anthropic
                      - Mistral
                      - KBLab
                      - Google
                    title: ModelOrg
                    type: string
                  ModelStability:
                    enum:
                      - stable
                      - experimental
                    title: ModelStability
                    type: string
                  SecurityClassificationPublic:
                    description: Basic security classification information.
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      description:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Description
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      security_level:
                        title: Security Level
                        type: integer
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                    required:
                      - id
                      - name
                      - description
                      - security_level
                    title: SecurityClassificationPublic
                    type: object
                  ToolAssistant:
                    properties:
                      handle:
                        title: Handle
                        type: string
                      id:
                        format: uuid
                        title: Id
                        type: string
                    required:
                      - id
                      - handle
                    title: ToolAssistant
                    type: object
                  UseTools:
                    properties:
                      assistants:
                        items:
                          "$ref": "#/components/schemas/ToolAssistant"
                        title: Assistants
                        type: array
                    required:
                      - assistants
                    title: UseTools
                    type: object
                  WebSearchResultPublic:
                    properties:
                      id:
                        format: uuid
                        title: Id
                        type: string
                      title:
                        title: Title
                        type: string
                      url:
                        title: Url
                        type: string
                    required:
                      - id
                      - title
                      - url
                    title: WebSearchResultPublic
                    type: object
                properties:
                  answer:
                    title: Answer
                    type: string
                  files:
                    items:
                      "$ref": "#/components/schemas/FilePublic"
                    title: Files
                    type: array
                  generated_files:
                    items:
                      "$ref": "#/components/schemas/FilePublic"
                    title: Generated Files
                    type: array
                  model:
                    anyOf:
                      - "$ref": "#/components/schemas/CompletionModelPublic"
                      - type: 'null'
                  question:
                    title: Question
                    type: string
                  references:
                    items:
                      "$ref": "#/components/schemas/InfoBlobAskAssistantPublic"
                    title: References
                    type: array
                  session_id:
                    format: uuid
                    title: Session Id
                    type: string
                  tools:
                    "$ref": "#/components/schemas/UseTools"
                  web_search_references:
                    items:
                      "$ref": "#/components/schemas/WebSearchResultPublic"
                    title: Web Search References
                    type: array
                required:
                  - session_id
                  - question
                  - answer
                  - files
                  - generated_files
                  - references
                  - tools
                  - web_search_references
                title: AskResponse
                type: object
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Ask Assistant
      tags:
        - assistants
  "/api/v1/assistants/{id}/sessions/{session_id}/":
    delete:
      operationId: delete_assistant_session_api_v1_assistants__id__sessions__session_id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: path
          name: session_id
          required: true
          schema:
            format: uuid
            title: Session Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete Assistant Session
      tags:
        - assistants
    get:
      operationId: get_assistant_session_api_v1_assistants__id__sessions__session_id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: path
          name: session_id
          required: true
          schema:
            format: uuid
            title: Session Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Assistant Session
      tags:
        - assistants
    post:
      description: Streams the response as Server-Sent Events if stream == true
      operationId: ask_followup_api_v1_assistants__id__sessions__session_id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: path
          name: session_id
          required: true
          schema:
            format: uuid
            title: Session Id
            type: string
        - in: query
          name: version
          required: false
          schema:
            default: 1
            maximum: 2
            minimum: 1
            title: Version
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AskAssistant"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AskResponse"
            text/event-stream:
              schema:
                "$defs":
                  CompletionModelPublic:
                    properties:
                      base_url:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Base Url
                      can_access:
                        default: false
                        title: Can Access
                        type: boolean
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      deployment_name:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Deployment Name
                      description:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Description
                      family:
                        "$ref": "#/components/schemas/ModelFamily"
                      hf_link:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Hf Link
                      hosting:
                        "$ref": "#/components/schemas/ModelHostingLocation"
                      id:
                        format: uuid
                        title: Id
                        type: string
                      is_deprecated:
                        title: Is Deprecated
                        type: boolean
                      is_locked:
                        default: true
                        title: Is Locked
                        type: boolean
                      is_org_default:
                        default: false
                        title: Is Org Default
                        type: boolean
                      is_org_enabled:
                        default: false
                        title: Is Org Enabled
                        type: boolean
                      name:
                        title: Name
                        type: string
                      nickname:
                        title: Nickname
                        type: string
                      nr_billion_parameters:
                        anyOf:
                          - type: integer
                          - type: 'null'
                        title: Nr Billion Parameters
                      open_source:
                        anyOf:
                          - type: boolean
                          - type: 'null'
                        title: Open Source
                      org:
                        anyOf:
                          - "$ref": "#/components/schemas/ModelOrg"
                          - type: 'null'
                      reasoning:
                        title: Reasoning
                        type: boolean
                      security_classification:
                        anyOf:
                          - "$ref": "#/components/schemas/SecurityClassificationPublic"
                          - type: 'null'
                      stability:
                        "$ref": "#/components/schemas/ModelStability"
                      token_limit:
                        title: Token Limit
                        type: integer
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      vision:
                        title: Vision
                        type: boolean
                    required:
                      - id
                      - name
                      - nickname
                      - family
                      - token_limit
                      - is_deprecated
                      - stability
                      - hosting
                      - vision
                      - reasoning
                    title: CompletionModelPublic
                    type: object
                  FilePublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      mimetype:
                        title: Mimetype
                        type: string
                      name:
                        title: Name
                        type: string
                      size:
                        title: Size
                        type: integer
                      transcription:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Transcription
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                    required:
                      - id
                      - name
                      - mimetype
                      - size
                    title: FilePublic
                    type: object
                  InfoBlobAskAssistantPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      group_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Group Id
                      id:
                        format: uuid
                        title: Id
                        type: string
                      metadata:
                        "$ref": "#/components/schemas/InfoBlobMetadata"
                      score:
                        title: Score
                        type: number
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      website_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Website Id
                    required:
                      - id
                      - metadata
                      - score
                    title: InfoBlobAskAssistantPublic
                    type: object
                  InfoBlobMetadata:
                    properties:
                      embedding_model_id:
                        format: uuid
                        title: Embedding Model Id
                        type: string
                      size:
                        title: Size
                        type: integer
                      title:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Title
                      url:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Url
                    required:
                      - embedding_model_id
                      - size
                    title: InfoBlobMetadata
                    type: object
                  ModelFamily:
                    enum:
                      - openai
                      - mistral
                      - vllm
                      - claude
                      - azure
                      - ovhcloud
                      - e5
                    title: ModelFamily
                    type: string
                  ModelHostingLocation:
                    enum:
                      - usa
                      - eu
                      - swe
                    title: ModelHostingLocation
                    type: string
                  ModelOrg:
                    enum:
                      - OpenAI
                      - Meta
                      - Microsoft
                      - Anthropic
                      - Mistral
                      - KBLab
                      - Google
                    title: ModelOrg
                    type: string
                  ModelStability:
                    enum:
                      - stable
                      - experimental
                    title: ModelStability
                    type: string
                  SecurityClassificationPublic:
                    description: Basic security classification information.
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      description:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Description
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      security_level:
                        title: Security Level
                        type: integer
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                    required:
                      - id
                      - name
                      - description
                      - security_level
                    title: SecurityClassificationPublic
                    type: object
                  ToolAssistant:
                    properties:
                      handle:
                        title: Handle
                        type: string
                      id:
                        format: uuid
                        title: Id
                        type: string
                    required:
                      - id
                      - handle
                    title: ToolAssistant
                    type: object
                  UseTools:
                    properties:
                      assistants:
                        items:
                          "$ref": "#/components/schemas/ToolAssistant"
                        title: Assistants
                        type: array
                    required:
                      - assistants
                    title: UseTools
                    type: object
                  WebSearchResultPublic:
                    properties:
                      id:
                        format: uuid
                        title: Id
                        type: string
                      title:
                        title: Title
                        type: string
                      url:
                        title: Url
                        type: string
                    required:
                      - id
                      - title
                      - url
                    title: WebSearchResultPublic
                    type: object
                properties:
                  answer:
                    title: Answer
                    type: string
                  files:
                    items:
                      "$ref": "#/components/schemas/FilePublic"
                    title: Files
                    type: array
                  generated_files:
                    items:
                      "$ref": "#/components/schemas/FilePublic"
                    title: Generated Files
                    type: array
                  model:
                    anyOf:
                      - "$ref": "#/components/schemas/CompletionModelPublic"
                      - type: 'null'
                  question:
                    title: Question
                    type: string
                  references:
                    items:
                      "$ref": "#/components/schemas/InfoBlobAskAssistantPublic"
                    title: References
                    type: array
                  session_id:
                    format: uuid
                    title: Session Id
                    type: string
                  tools:
                    "$ref": "#/components/schemas/UseTools"
                  web_search_references:
                    items:
                      "$ref": "#/components/schemas/WebSearchResultPublic"
                    title: Web Search References
                    type: array
                required:
                  - session_id
                  - question
                  - answer
                  - files
                  - generated_files
                  - references
                  - tools
                  - web_search_references
                title: AskResponse
                type: object
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Ask Followup
      tags:
        - assistants
  "/api/v1/assistants/{id}/sessions/{session_id}/feedback/":
    post:
      operationId: leave_feedback_api_v1_assistants__id__sessions__session_id__feedback__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: path
          name: session_id
          required: true
          schema:
            format: uuid
            title: Session Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SessionFeedback"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Leave Feedback
      tags:
        - assistants
  "/api/v1/assistants/{id}/transfer/":
    post:
      operationId: transfer_assistant_to_space_api_v1_assistants__id__transfer__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransferApplicationRequest"
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Transfer Assistant To Space
      tags:
        - assistants
  "/api/v1/completion-models/":
    get:
      operationId: get_completion_models_api_v1_completion_models__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_CompletionModelPublic_"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Completion Models
      tags:
        - completion-models
  "/api/v1/completion-models/{id}/":
    post:
      operationId: update_completion_model_api_v1_completion_models__id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CompletionModelUpdateFlags"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CompletionModelPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Completion Model
      tags:
        - completion-models
  "/api/v1/conversations/":
    get:
      description: |-
        Gets conversations (sessions) for an assistant or group chat.

        Provide either assistant_id or group_chat_id (but not both) to filter sessions.
        If neither is provided, an error will be returned.
      operationId: list_conversations_api_v1_conversations__get
      parameters:
        - description: The UUID of the assistant
          in: query
          name: assistant_id
          required: false
          schema:
            anyOf:
              - format: uuid
                type: string
              - type: 'null'
            description: The UUID of the assistant
            title: Assistant Id
        - description: The UUID of the group chat
          in: query
          name: group_chat_id
          required: false
          schema:
            anyOf:
              - format: uuid
                type: string
              - type: 'null'
            description: The UUID of the group chat
            title: Group Chat Id
        - in: query
          name: limit
          required: false
          schema:
            exclusiveMinimum: 0
            title: Limit
            type: integer
        - in: query
          name: cursor
          required: false
          schema:
            format: date-time
            title: Cursor
            type: string
        - in: query
          name: previous
          required: false
          schema:
            default: false
            title: Previous
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CursorPaginatedResponse_SessionMetadataPublic_"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: List Conversations
      tags:
        - conversations
    post:
      description: |-
        Unified endpoint for communicating with an assistant or a group chat.

        If request.session_id is provided: continues an existing conversation.
        Otherwise: starts a new conversation with the specified assistant or group chat.

        Either request.session_id, request.assistant_id, or request.group_chat_id must be provided.

        For group chats:
        - Specify the group_chat_id to chat with a group chat
        - If tools.assistants contains an assistant, that specific assistant will be targeted
          (requires the group chat to have allow_mentions=True).
        - If no assistant is targeted, the most appropriate assistant will be selected.
        - When multiple assistants could answer a question, the system will choose the most relevant one
          or select the first matching assistant if relevance scores are similar.

        For regular assistants:
        - The tools.assistants field can be used for directing the request to a tool assistant.

        Streams the response as Server-Sent Events if stream == true.
        The following SSE response models are supported in the stream:
        - SSEText: Text completion chunks
        - SSEIntricEvent: Internal events like generating an image
        - SSEFiles: Generated files/images responses
        - SSEFirstChunk: Initial response with metadata
      operationId: chat_api_v1_conversations__post
      parameters:
        - in: query
          name: version
          required: false
          schema:
            default: 1
            maximum: 2
            minimum: 1
            title: Version
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ConversationRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: { }
            text/event-stream:
              schema:
                oneOf:
                  - "$defs":
                      InfoBlobAskAssistantPublic:
                        properties:
                          created_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Created At
                          group_id:
                            anyOf:
                              - format: uuid
                                type: string
                              - type: 'null'
                            title: Group Id
                          id:
                            format: uuid
                            title: Id
                            type: string
                          metadata:
                            "$ref": "#/components/schemas/InfoBlobMetadata"
                          score:
                            title: Score
                            type: number
                          updated_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Updated At
                          website_id:
                            anyOf:
                              - format: uuid
                                type: string
                              - type: 'null'
                            title: Website Id
                        required:
                          - id
                          - metadata
                          - score
                        title: InfoBlobAskAssistantPublic
                        type: object
                      InfoBlobMetadata:
                        properties:
                          embedding_model_id:
                            format: uuid
                            title: Embedding Model Id
                            type: string
                          size:
                            title: Size
                            type: integer
                          title:
                            anyOf:
                              - type: string
                              - type: 'null'
                            title: Title
                          url:
                            anyOf:
                              - type: string
                              - type: 'null'
                            title: Url
                        required:
                          - embedding_model_id
                          - size
                        title: InfoBlobMetadata
                        type: object
                    properties:
                      answer:
                        title: Answer
                        type: string
                      references:
                        items:
                          "$ref": "#/components/schemas/InfoBlobAskAssistantPublic"
                        title: References
                        type: array
                      session_id:
                        format: uuid
                        title: Session Id
                        type: string
                    required:
                      - session_id
                      - answer
                      - references
                    title: SSEText
                    type: object
                  - "$defs":
                      IntricEventType:
                        enum:
                          - generating_image
                        title: IntricEventType
                        type: string
                    properties:
                      intric_event_type:
                        "$ref": "#/components/schemas/IntricEventType"
                      session_id:
                        format: uuid
                        title: Session Id
                        type: string
                    required:
                      - session_id
                      - intric_event_type
                    title: SSEIntricEvent
                    type: object
                  - "$defs":
                      FilePublic:
                        properties:
                          created_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Created At
                          id:
                            format: uuid
                            title: Id
                            type: string
                          mimetype:
                            title: Mimetype
                            type: string
                          name:
                            title: Name
                            type: string
                          size:
                            title: Size
                            type: integer
                          transcription:
                            anyOf:
                              - type: string
                              - type: 'null'
                            title: Transcription
                          updated_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Updated At
                        required:
                          - id
                          - name
                          - mimetype
                          - size
                        title: FilePublic
                        type: object
                    properties:
                      generated_files:
                        items:
                          "$ref": "#/components/schemas/FilePublic"
                        title: Generated Files
                        type: array
                      session_id:
                        format: uuid
                        title: Session Id
                        type: string
                    required:
                      - session_id
                      - generated_files
                    title: SSEFiles
                    type: object
                  - "$defs":
                      FilePublic:
                        properties:
                          created_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Created At
                          id:
                            format: uuid
                            title: Id
                            type: string
                          mimetype:
                            title: Mimetype
                            type: string
                          name:
                            title: Name
                            type: string
                          size:
                            title: Size
                            type: integer
                          transcription:
                            anyOf:
                              - type: string
                              - type: 'null'
                            title: Transcription
                          updated_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Updated At
                        required:
                          - id
                          - name
                          - mimetype
                          - size
                        title: FilePublic
                        type: object
                      InfoBlobAskAssistantPublic:
                        properties:
                          created_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Created At
                          group_id:
                            anyOf:
                              - format: uuid
                                type: string
                              - type: 'null'
                            title: Group Id
                          id:
                            format: uuid
                            title: Id
                            type: string
                          metadata:
                            "$ref": "#/components/schemas/InfoBlobMetadata"
                          score:
                            title: Score
                            type: number
                          updated_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Updated At
                          website_id:
                            anyOf:
                              - format: uuid
                                type: string
                              - type: 'null'
                            title: Website Id
                        required:
                          - id
                          - metadata
                          - score
                        title: InfoBlobAskAssistantPublic
                        type: object
                      InfoBlobMetadata:
                        properties:
                          embedding_model_id:
                            format: uuid
                            title: Embedding Model Id
                            type: string
                          size:
                            title: Size
                            type: integer
                          title:
                            anyOf:
                              - type: string
                              - type: 'null'
                            title: Title
                          url:
                            anyOf:
                              - type: string
                              - type: 'null'
                            title: Url
                        required:
                          - embedding_model_id
                          - size
                        title: InfoBlobMetadata
                        type: object
                      ToolAssistant:
                        properties:
                          handle:
                            title: Handle
                            type: string
                          id:
                            format: uuid
                            title: Id
                            type: string
                        required:
                          - id
                          - handle
                        title: ToolAssistant
                        type: object
                      UseTools:
                        properties:
                          assistants:
                            items:
                              "$ref": "#/components/schemas/ToolAssistant"
                            title: Assistants
                            type: array
                        required:
                          - assistants
                        title: UseTools
                        type: object
                      WebSearchResultPublic:
                        properties:
                          id:
                            format: uuid
                            title: Id
                            type: string
                          title:
                            title: Title
                            type: string
                          url:
                            title: Url
                            type: string
                        required:
                          - id
                          - title
                          - url
                        title: WebSearchResultPublic
                        type: object
                    properties:
                      answer:
                        title: Answer
                        type: string
                      files:
                        items:
                          "$ref": "#/components/schemas/FilePublic"
                        title: Files
                        type: array
                      generated_files:
                        items:
                          "$ref": "#/components/schemas/FilePublic"
                        title: Generated Files
                        type: array
                      question:
                        title: Question
                        type: string
                      references:
                        items:
                          "$ref": "#/components/schemas/InfoBlobAskAssistantPublic"
                        title: References
                        type: array
                      session_id:
                        format: uuid
                        title: Session Id
                        type: string
                      tools:
                        "$ref": "#/components/schemas/UseTools"
                      web_search_references:
                        items:
                          "$ref": "#/components/schemas/WebSearchResultPublic"
                        title: Web Search References
                        type: array
                    required:
                      - session_id
                      - question
                      - answer
                      - files
                      - generated_files
                      - references
                      - tools
                      - web_search_references
                    title: SSEFirstChunk
                    type: object
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Chat
      tags:
        - conversations
  "/api/v1/conversations/{session_id}/":
    delete:
      description: Deletes a specific conversation
      operationId: delete_conversation_api_v1_conversations__session_id___delete
      parameters:
        - description: The UUID of the conversation/session
          in: path
          name: session_id
          required: true
          schema:
            description: The UUID of the conversation/session
            format: uuid
            title: Session Id
            type: string
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete Conversation
      tags:
        - conversations
    get:
      description: Gets a specific conversation by its session ID
      operationId: get_conversation_api_v1_conversations__session_id___get
      parameters:
        - description: The UUID of the conversation/session
          in: path
          name: session_id
          required: true
          schema:
            description: The UUID of the conversation/session
            format: uuid
            title: Session Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Conversation
      tags:
        - conversations
  "/api/v1/conversations/{session_id}/feedback/":
    post:
      description: Leave feedback for a conversation
      operationId: leave_feedback_api_v1_conversations__session_id__feedback__post
      parameters:
        - description: The UUID of the conversation/session
          in: path
          name: session_id
          required: true
          schema:
            description: The UUID of the conversation/session
            format: uuid
            title: Session Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SessionFeedback"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Leave Feedback
      tags:
        - conversations
  "/api/v1/conversations/{session_id}/title/":
    post:
      description: Set the title of a conversation
      operationId: set_title_of_conversation_api_v1_conversations__session_id__title__post
      parameters:
        - in: path
          name: session_id
          required: true
          schema:
            format: uuid
            title: Session Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Set Title Of Conversation
      tags:
        - conversations
  "/api/v1/crawl-runs/{id}/":
    get:
      operationId: get_crawl_run_api_v1_crawl_runs__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/intric__websites__crawl_dependencies__crawl_models__CrawlRunPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Crawl Run
      tags:
        - crawl-runs
  "/api/v1/dashboard/":
    get:
      operationId: get_dashboard_api_v1_dashboard__get
      parameters:
        - in: query
          name: only_published
          required: false
          schema:
            default: false
            title: Only Published
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Dashboard"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Dashboard
      tags:
        - dashboard
  "/api/v1/embedding-models/":
    get:
      operationId: get_embedding_models_api_v1_embedding_models__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_EmbeddingModelPublic_"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Embedding Models
      tags:
        - embedding-models
  "/api/v1/embedding-models/{id}/":
    get:
      operationId: get_embedding_model_api_v1_embedding_models__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmbeddingModelPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Embedding Model
      tags:
        - embedding-models
    post:
      operationId: update_embedding_model_api_v1_embedding_models__id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmbeddingModelUpdate"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmbeddingModelPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Embedding Model
      tags:
        - embedding-models
  "/api/v1/files/":
    get:
      operationId: get_files_api_v1_files__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_FilePublic_"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Files
      tags:
        - files
    post:
      operationId: upload_file_api_v1_files__post
      requestBody:
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Body_upload_file_api_v1_files__post"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FilePublic"
          description: Successful Response
        '413':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Request Entity Too Large
        '415':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Unsupported Media Type
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Upload File
      tags:
        - files
  "/api/v1/files/{id}/":
    delete:
      operationId: delete_file_api_v1_files__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete File
      tags:
        - files
    get:
      operationId: get_file_api_v1_files__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FilePublic"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get File
      tags:
        - files
  "/api/v1/files/{id}/download/":
    get:
      description: |-
        Allows downloading a file using a pre-signed URL token.
            No authentication is required, but the token must be valid and not expired.
      operationId: download_file_signed_api_v1_files__id__download__get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - description: The signed token for file access
          in: query
          name: token
          required: true
          schema:
            description: The signed token for file access
            title: Token
            type: string
        - in: header
          name: range
          required: false
          schema:
            title: Range
            type: string
      responses:
        '200':
          description: Successfully downloaded the entire file
        '206':
          description: Successfully downloaded a partial content (range request)
        '400':
          description: Bad request - Invalid token or range requests not supported
            for this file type
        '401':
          description: Unauthorized - Token is invalid or has expired
        '403':
          description: Unauthorized - Not authorized to view this file
        '404':
          description: File content not found or file does not exist
        '416':
          description: Range not satisfiable
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Download a file using a signed URL
      tags:
        - files
  "/api/v1/files/{id}/signed-url/":
    post:
      description: |-
        Generates a signed URL that can be used to download a file without authentication.
            The URL will expire after the specified time period.

            This is useful for sharing files with third parties or for embedding in emails.
      operationId: generate_signed_url_api_v1_files__id__signed_url__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignedURLRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SignedURLResponse"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Generate a signed URL for file download
      tags:
        - files
  "/api/v1/group-chats/{id}/":
    delete:
      description: Delete an existing group chat by its ID.
      operationId: delete_group_chat_api_v1_group_chats__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '204':
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete Group Chat
      tags:
        - group-chats
    get:
      description: Get an existing group chat by its ID.
      operationId: get_group_chat_api_v1_group_chats__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupChatPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Group Chat
      tags:
        - group-chats
    patch:
      description: Updates an existing group chat. Omitted fields are not updated
      operationId: update_group_chat_api_v1_group_chats__id___patch
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupChatUpdateSchema"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupChatPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Group Chat
      tags:
        - group-chats
  "/api/v1/group-chats/{id}/publish/":
    post:
      operationId: publish_group_chat_api_v1_group_chats__id__publish__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: query
          name: published
          required: true
          schema:
            title: Published
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupChatPublic"
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Publish Group Chat
      tags:
        - group-chats
  "/api/v1/groups/":
    get:
      deprecated: true
      operationId: get_groups_api_v1_groups__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_GroupPublicWithMetadata_"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Groups
      tags:
        - groups
    post:
      deprecated: true
      description: |-
        Valid values for `embedding_model` are the provided by `GET /api/v1/settings/models/`.
        Use the `name` field of the response from this endpoint.
      operationId: create_group_api_v1_groups__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateGroupRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupPublicWithMetadata"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create Group
      tags:
        - groups
  "/api/v1/groups/{id}/":
    delete:
      operationId: delete_group_by_id_api_v1_groups__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete Group By Id
      tags:
        - groups
    get:
      operationId: get_group_by_id_api_v1_groups__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CollectionPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Group By Id
      tags:
        - groups
    post:
      operationId: update_group_api_v1_groups__id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CollectionUpdate"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CollectionPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Group
      tags:
        - groups
  "/api/v1/groups/{id}/info-blobs/":
    get:
      operationId: get_info_blobs_api_v1_groups__id__info_blobs__get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_InfoBlobPublicNoText_"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Info Blobs
      tags:
        - groups
    post:
      description: |-
        Maximum allowed simultaneous upload is 128.

        Will be embedded using the embedding model of the group.
      operationId: add_info_blobs_api_v1_groups__id__info_blobs__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/InfoBlobUpsertRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_InfoBlobPublic_"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
        '503':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Service Unavailable
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Add Info Blobs
      tags:
        - groups
  "/api/v1/groups/{id}/info-blobs/upload/":
    post:
      description: Starts a job, use the job operations to keep track of this job
      operationId: upload_file_api_v1_groups__id__info_blobs_upload__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Body_upload_file_api_v1_groups__id__info_blobs_upload__post"
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/JobPublic"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Upload File
      tags:
        - groups
  "/api/v1/groups/{id}/searches/":
    post:
      operationId: run_semantic_search_api_v1_groups__id__searches__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SemanticSearchRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_SemanticSearchResponse_"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Run Semantic Search
      tags:
        - groups
  "/api/v1/groups/{id}/transfer/":
    post:
      operationId: transfer_group_to_space_api_v1_groups__id__transfer__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransferRequest"
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Transfer Group To Space
      tags:
        - groups
  "/api/v1/info-blobs/":
    get:
      description: |-
        Returns a list of info-blobs.

        Does not return the text of each info-blob, 'text' will be null.
      operationId: get_info_blob_ids_api_v1_info_blobs__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_InfoBlobPublicNoText_"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Info Blob Ids
      tags:
        - info-blobs
  "/api/v1/info-blobs/{id}/":
    delete:
      description: Returns the deleted object.
      operationId: delete_info_blob_api_v1_info_blobs__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InfoBlobPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete Info Blob
      tags:
        - info-blobs
    get:
      operationId: get_info_blob_api_v1_info_blobs__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InfoBlobPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Info Blob
      tags:
        - info-blobs
    post:
      description: Omitted fields are not updated.
      operationId: update_info_blob_api_v1_info_blobs__id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/InfoBlobUpdatePublic"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InfoBlobPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Info Blob
      tags:
        - info-blobs
  "/api/v1/integrations/":
    get:
      operationId: get_integrations_api_v1_integrations__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/IntegrationList"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Integrations
      tags:
        - integrations
  "/api/v1/integrations/auth/callback/token/":
    post:
      operationId: on_auth_callback_api_v1_integrations_auth_callback_token__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AuthCallbackParams"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserIntegration"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: On Auth Callback
      tags:
        - integrations
  "/api/v1/integrations/auth/{tenant_integration_id}/url/":
    get:
      operationId: gen_url_api_v1_integrations_auth__tenant_integration_id__url__get
      parameters:
        - in: path
          name: tenant_integration_id
          required: true
          schema:
            format: uuid
            title: Tenant Integration Id
            type: string
        - in: query
          name: state
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: State
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AuthUrlPublic"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Gen Url
      tags:
        - integrations
  "/api/v1/integrations/me/":
    get:
      operationId: get_user_integrations_api_v1_integrations_me__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserIntegrationList"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get User Integrations
      tags:
        - integrations
  "/api/v1/integrations/tenant/":
    get:
      operationId: get_tenant_integrations_api_v1_integrations_tenant__get
      parameters:
        - in: query
          name: filter
          required: false
          schema:
            anyOf:
              - "$ref": "#/components/schemas/TenantIntegrationFilter"
              - type: 'null'
            title: Filter
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TenantIntegrationList"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Tenant Integrations
      tags:
        - integrations
  "/api/v1/integrations/tenant/{integration_id}/":
    post:
      operationId: add_tenant_integration_api_v1_integrations_tenant__integration_id___post
      parameters:
        - in: path
          name: integration_id
          required: true
          schema:
            format: uuid
            title: Integration Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TenantIntegration"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Add Tenant Integration
      tags:
        - integrations
  "/api/v1/integrations/tenant/{tenant_integration_id}/":
    delete:
      operationId: remove_tenant_integration_api_v1_integrations_tenant__tenant_integration_id___delete
      parameters:
        - in: path
          name: tenant_integration_id
          required: true
          schema:
            format: uuid
            title: Tenant Integration Id
            type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Remove Tenant Integration
      tags:
        - integrations
  "/api/v1/integrations/users/{user_integration_id}/":
    delete:
      operationId: disconnect_user_integration_api_v1_integrations_users__user_integration_id___delete
      parameters:
        - in: path
          name: user_integration_id
          required: true
          schema:
            format: uuid
            title: User Integration Id
            type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Disconnect User Integration
      tags:
        - integrations
  "/api/v1/integrations/{integration_id}/":
    get:
      operationId: get_integration_by_id_api_v1_integrations__integration_id___get
      parameters:
        - in: path
          name: integration_id
          required: true
          schema:
            format: uuid
            title: Integration Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Integration"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Integration By Id
      tags:
        - integrations
  "/api/v1/integrations/{user_integration_id}/preview/":
    get:
      operationId: get_integration_preview_api_v1_integrations__user_integration_id__preview__get
      parameters:
        - in: path
          name: user_integration_id
          required: true
          schema:
            format: uuid
            title: User Integration Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/IntegrationPreviewDataList"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Integration Preview
      tags:
        - integrations
  "/api/v1/jobs/":
    get:
      operationId: get_running_jobs_api_v1_jobs__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_JobPublic_"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Running Jobs
      tags:
        - jobs
  "/api/v1/jobs/{id}/":
    get:
      operationId: get_job_api_v1_jobs__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/JobPublic"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Job
      tags:
        - jobs
  "/api/v1/limits/":
    get:
      operationId: get_limits_api_v1_limits__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Limits"
          description: Successful Response
      summary: Get Limits
      tags:
        - limits
  "/api/v1/logging/{message_id}/":
    get:
      operationId: get_logging_details_api_v1_logging__message_id___get
      parameters:
        - in: path
          name: message_id
          required: true
          schema:
            format: uuid
            title: Message Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageLogging"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Logging Details
      tags:
        - logging
  "/api/v1/modules/":
    get:
      operationId: get_modules_api_v1_modules__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_ModuleInDB_"
          description: Successful Response
      security:
        - APIKeyHeader: [ ]
      summary: Get Modules
      tags:
        - modules
    post:
      operationId: add_module_api_v1_modules__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ModuleBase"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModuleInDB"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Add Module
      tags:
        - modules
  "/api/v1/modules/{tenant_id}/":
    post:
      description: Value is a list of module `id`'s to add to the `tenant_id`.
      operationId: add_module_to_tenant_api_v1_modules__tenant_id___post
      parameters:
        - in: path
          name: tenant_id
          required: true
          schema:
            format: uuid
            title: Tenant Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                "$ref": "#/components/schemas/ModelId"
              title: Module Ids
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TenantInDB"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Add Module To Tenant
      tags:
        - modules
  "/api/v1/prompts/{id}/":
    delete:
      operationId: delete_prompt_api_v1_prompts__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '204':
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete Prompt
      tags:
        - prompts
    get:
      operationId: get_prompt_api_v1_prompts__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PromptPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Prompt
      tags:
        - prompts
    patch:
      operationId: update_prompt_description_api_v1_prompts__id___patch
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PromptUpdateRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PromptPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Prompt Description
      tags:
        - prompts
  "/api/v1/roles/":
    get:
      operationId: get_roles_api_v1_roles__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RolesPaginatedResponse"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Roles
      tags:
        - roles
    post:
      operationId: create_role_api_v1_roles__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RoleCreateRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RolePublic"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create Role
      tags:
        - roles
  "/api/v1/roles/permissions/":
    get:
      operationId: get_permissions_api_v1_roles_permissions__get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/PermissionPublic"
                title: Response Get Permissions Api V1 Roles Permissions  Get
                type: array
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Permissions
      tags:
        - roles
  "/api/v1/roles/{role_id}/":
    delete:
      operationId: delete_role_by_id_api_v1_roles__role_id___delete
      parameters:
        - in: path
          name: role_id
          required: true
          schema:
            format: uuid
            title: Role Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RolePublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete Role By Id
      tags:
        - roles
    get:
      operationId: get_role_by_id_api_v1_roles__role_id___get
      parameters:
        - in: path
          name: role_id
          required: true
          schema:
            format: uuid
            title: Role Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RolePublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Role By Id
      tags:
        - roles
    post:
      operationId: update_role_api_v1_roles__role_id___post
      parameters:
        - in: path
          name: role_id
          required: true
          schema:
            format: uuid
            title: Role Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RoleUpdateRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RolePublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Role
      tags:
        - roles
  "/api/v1/security-classifications/":
    get:
      description: |-
        List all security classifications ordered by security classification level.
        Returns:
            List of security classifications ordered by security classification level.
        Raises:
            403: If the user doesn't have permission to list security classifications.
      operationId: list_security_classifications_api_v1_security_classifications__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecurityClassificationResponse"
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: List Security Classifications
      tags:
        - security-classifications
    patch:
      description: |-
        Update the security levels of security classifications.
        Args:
            request: Security classifications to update.
        Returns:
            The updated security classifications.
        Raises:
            400: If the request is invalid.
            403: If the user doesn't have permission to update the security classification.
            404: If the security classification doesn't exist or belongs to a different tenant.
      operationId: update_security_classification_levels_api_v1_security_classifications__patch
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SecurityClassificationLevelsUpdateRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecurityClassificationsListPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Security Classification Levels
      tags:
        - security-classifications
    post:
      description: |-
        Create a new security classification for the current tenant.
        Args:
            request: The security classification creation request.
        Returns:
            The created security classification.
        Raises:
            400: If the request is invalid. Names must be unique.
      operationId: create_security_classification_api_v1_security_classifications__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SecurityClassificationCreatePublic"
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecurityClassificationPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create Security Classification
      tags:
        - security-classifications
  "/api/v1/security-classifications/enable/":
    post:
      description: |-
        Enable or disable security classifications for the current tenant.

        Args:
            request: Contains a flag to enable or disable security classifications.

        Returns:
            The updated tenant information with security_enabled status.

        Raises:
            400: If the request is invalid.
            403: If the user doesn't have permission to update tenant settings.
      operationId: toggle_security_classifications_api_v1_security_classifications_enable__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SecurityEnableRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecurityEnableResponse"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Toggle Security Classifications
      tags:
        - security-classifications
  "/api/v1/security-classifications/{id}/":
    delete:
      description: |-
        Delete a security classification.
        Args:
            id: The ID of the security classification to delete.
        Raises:
            403: If the user doesn't have permission to delete the security classification.
            404: If the security classification doesn't exist.
      operationId: delete_security_classification_api_v1_security_classifications__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '204':
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete Security Classification
      tags:
        - security-classifications
    get:
      description: |-
        Get a security classification by ID.
        Args:
            id: The ID of the security classification.
        Returns:
            The security classification.
        Raises:
            403: If the user doesn't have permission to view the security classification.
            404: If the security classification doesn't exist or belongs to a different tenant.
      operationId: get_security_classification_api_v1_security_classifications__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecurityClassificationPublic"
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Security Classification
      tags:
        - security-classifications
    patch:
      description: |-
        Update a single security classification's name and/or description.

        This endpoint allows updating just the name and description of a security classification
        without changing its security level.

        Args:
            id: The ID of the security classification to update
            request: The update request containing new name and/or description

        Returns:
            The updated security classification

        Raises:
            400: If the request is invalid or security is disabled. Names must be unique.
            403: If the user doesn't have permission to update the classification
            404: If the security classification doesn't exist
      operationId: update_security_classification_api_v1_security_classifications__id___patch
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SecurityClassificationSingleUpdate"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecurityClassificationPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Security Classification
      tags:
        - security-classifications
  "/api/v1/services/":
    get:
      operationId: get_services_api_v1_services__get
      parameters:
        - in: query
          name: name
          required: false
          schema:
            title: Name
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_ServicePublicWithUser_"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Services
      tags:
        - services
    post:
      deprecated: true
      description: |-
        Create a service.

        `json_schema` is required if `output_validation` is 'json'.

        Conversely, `json_schema` is not evaluated if `output_format` is not 'json'.

        if `output_format` is omitted, the output will not be formatted.
      operationId: create_service_api_v1_services__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ServiceCreatePublic"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ServicePublicWithUser"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create Service
      tags:
        - services
  "/api/v1/services/{id}/":
    delete:
      operationId: delete_service_api_v1_services__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '204':
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete Service
      tags:
        - services
    get:
      operationId: get_service_api_v1_services__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ServicePublicWithUser"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Service
      tags:
        - services
    post:
      description: Omitted fields are not updated
      operationId: update_service_api_v1_services__id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartialServiceUpdatePublic"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ServicePublicWithUser"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Service
      tags:
        - services
  "/api/v1/services/{id}/run/":
    get:
      operationId: get_service_runs_api_v1_services__id__run__get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_ServiceRun_"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Service Runs
      tags:
        - services
    post:
      description: The schema of the output will be depending on the output validation
        of the service
      operationId: run_service_api_v1_services__id__run__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RunService"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ServiceOutput"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Run Service
      tags:
        - services
  "/api/v1/services/{id}/transfer/":
    post:
      operationId: transfer_service_to_space_api_v1_services__id__transfer__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransferApplicationRequest"
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Transfer Service To Space
      tags:
        - services
  "/api/v1/settings/":
    get:
      operationId: get_settings_api_v1_settings__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SettingsPublic"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Settings
      tags:
        - settings
    post:
      description: Omitted fields are not updated.
      operationId: upsert_settings_api_v1_settings__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SettingsPublic"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SettingsPublic"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Upsert Settings
      tags:
        - settings
  "/api/v1/settings/formats/":
    get:
      operationId: get_formats_api_v1_settings_formats__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_str_"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Formats
      tags:
        - settings
  "/api/v1/settings/models/":
    get:
      description: |-
        From the response:
            - use the `id` field as values for `completion_model`
            - use the `id` field as values for `embedding_model`

        in creating and updating `Assistants` and `Services`.
      operationId: get_models_api_v1_settings_models__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetModelsResponse"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Models
      tags:
        - settings
  "/api/v1/spaces/":
    get:
      operationId: get_spaces_api_v1_spaces__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_SpaceSparse_"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Spaces
      tags:
        - spaces
    post:
      operationId: create_space_api_v1_spaces__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateSpaceRequest"
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpacePublic"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create Space
      tags:
        - spaces
  "/api/v1/spaces/type/personal/":
    get:
      operationId: get_personal_space_api_v1_spaces_type_personal__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpacePublic"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Personal Space
      tags:
        - spaces
  "/api/v1/spaces/{id}/":
    delete:
      operationId: delete_space_api_v1_spaces__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '204':
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete Space
      tags:
        - spaces
    get:
      operationId: get_space_api_v1_spaces__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpacePublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Space
      tags:
        - spaces
    patch:
      operationId: update_space_api_v1_spaces__id___patch
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartialUpdateSpaceRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpacePublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Space
      tags:
        - spaces
  "/api/v1/spaces/{id}/applications/":
    get:
      operationId: get_space_applications_api_v1_spaces__id__applications__get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Applications"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Space Applications
      tags:
        - spaces
  "/api/v1/spaces/{id}/applications/apps/":
    post:
      operationId: create_app_api_v1_spaces__id__applications_apps__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateSpaceAppRequest"
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create App
      tags:
        - spaces
  "/api/v1/spaces/{id}/applications/assistants/":
    post:
      operationId: create_space_assistant_api_v1_spaces__id__applications_assistants__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateSpaceAssistantRequest"
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AssistantPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create Space Assistant
      tags:
        - spaces
  "/api/v1/spaces/{id}/applications/group-chats/":
    post:
      description: Creates a group chat.
      operationId: create_group_chat_api_v1_spaces__id__applications_group_chats__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupChatCreate"
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupChatPublic"
          description: Successful Response.
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create Group Chat
      tags:
        - spaces
  "/api/v1/spaces/{id}/applications/services/":
    post:
      operationId: create_space_services_api_v1_spaces__id__applications_services__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateSpaceServiceRequest"
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateSpaceServiceResponse"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create Space Services
      tags:
        - spaces
  "/api/v1/spaces/{id}/knowledge/":
    get:
      operationId: get_space_knowledge_api_v1_spaces__id__knowledge__get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Knowledge"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Space Knowledge
      tags:
        - spaces
  "/api/v1/spaces/{id}/knowledge/groups/":
    post:
      operationId: create_space_groups_api_v1_spaces__id__knowledge_groups__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateSpaceGroupsRequest"
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CollectionPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create Space Groups
      tags:
        - spaces
  "/api/v1/spaces/{id}/knowledge/integrations/{user_integration_id}/":
    post:
      operationId: create_space_integration_knowledge_api_v1_spaces__id__knowledge_integrations__user_integration_id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: path
          name: user_integration_id
          required: true
          schema:
            format: uuid
            title: User Integration Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateSpaceIntegrationKnowledge"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: { }
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create Space Integration Knowledge
      tags:
        - spaces
  "/api/v1/spaces/{id}/knowledge/websites/":
    post:
      operationId: create_space_websites_api_v1_spaces__id__knowledge_websites__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebsiteCreate"
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebsitePublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create Space Websites
      tags:
        - spaces
  "/api/v1/spaces/{id}/knowledge/{integration_knowledge_id}/":
    delete:
      operationId: delete_space_integration_knowledge_api_v1_spaces__id__knowledge__integration_knowledge_id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: path
          name: integration_knowledge_id
          required: true
          schema:
            format: uuid
            title: Integration Knowledge Id
            type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete Space Integration Knowledge
      tags:
        - spaces
  "/api/v1/spaces/{id}/members/":
    post:
      operationId: add_space_member_api_v1_spaces__id__members__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AddSpaceMemberRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpaceMember"
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Add Space Member
      tags:
        - spaces
  "/api/v1/spaces/{id}/members/{user_id}/":
    delete:
      operationId: remove_space_member_api_v1_spaces__id__members__user_id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid
            title: User Id
            type: string
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Remove Space Member
      tags:
        - spaces
    patch:
      operationId: change_role_of_member_api_v1_spaces__id__members__user_id___patch
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid
            title: User Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateSpaceMemberRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpaceMember"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Change Role Of Member
      tags:
        - spaces
  "/api/v1/spaces/{id}/security_classification/{security_classification_id}/impact-analysis/":
    get:
      description: Get a preview of the impact of changing the security classification
        of a space.
      operationId: get_security_classification_impact_analysis_api_v1_spaces__id__security_classification__security_classification_id__impact_analysis__get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: path
          name: security_classification_id
          required: true
          schema:
            format: uuid
            title: Security Classification Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateSpaceDryRunResponse"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Security Classification Impact Analysis
      tags:
        - spaces
  "/api/v1/storage/":
    get:
      operationId: get_storage_api_v1_storage__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StorageModel"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Storage
      tags:
        - storage
  "/api/v1/storage/spaces/":
    get:
      operationId: get_spaces_api_v1_storage_spaces__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StorageInfoModel"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Spaces
      tags:
        - storage
  "/api/v1/sysadmin/allowed-origins/":
    get:
      operationId: get_origins_api_v1_sysadmin_allowed_origins__get
      parameters:
        - in: query
          name: tenant_id
          required: false
          schema:
            anyOf:
              - format: uuid
                type: string
              - type: 'null'
            title: Tenant Id
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_AllowedOriginInDB_"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Get Origins
      tags:
        - sysadmin
    post:
      operationId: add_origin_api_v1_sysadmin_allowed_origins__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AllowedOriginCreate"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AllowedOriginInDB"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Add Origin
      tags:
        - sysadmin
  "/api/v1/sysadmin/allowed-origins/{id}/":
    delete:
      operationId: delete_origin_api_v1_sysadmin_allowed_origins__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Delete Origin
      tags:
        - sysadmin
  "/api/v1/sysadmin/completion-models/":
    get:
      operationId: get_completion_models_api_v1_sysadmin_completion_models__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_CompletionModelPublic_"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
      security:
        - APIKeyHeader: [ ]
      summary: Get Completion Models
      tags:
        - sysadmin
  "/api/v1/sysadmin/crawl-all-weekly-websites/":
    post:
      operationId: crawl_all_weekly_websites_api_v1_sysadmin_crawl_all_weekly_websites__post
      responses:
        '200':
          content:
            application/json:
              schema: { }
          description: Successful Response
      security:
        - APIKeyHeader: [ ]
      summary: Crawl All Weekly Websites
      tags:
        - sysadmin
  "/api/v1/sysadmin/embedding-models/":
    get:
      operationId: get_embedding_models_api_v1_sysadmin_embedding_models__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_EmbeddingModelLegacy_"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
      security:
        - APIKeyHeader: [ ]
      summary: Get Embedding Models
      tags:
        - sysadmin
  "/api/v1/sysadmin/predefined-roles/":
    get:
      operationId: get_predefined_roles_api_v1_sysadmin_predefined_roles__get
      responses:
        '200':
          content:
            application/json:
              schema: { }
          description: Successful Response
      security:
        - APIKeyHeader: [ ]
      summary: Get Predefined Roles
      tags:
        - sysadmin
  "/api/v1/sysadmin/tenants/":
    get:
      operationId: get_tenants_api_v1_sysadmin_tenants__get
      parameters:
        - in: query
          name: domain
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Domain
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_TenantInDB_"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Get Tenants
      tags:
        - sysadmin
    post:
      operationId: create_tenant_api_v1_sysadmin_tenants__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TenantBase"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TenantInDB"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Create Tenant
      tags:
        - sysadmin
  "/api/v1/sysadmin/tenants/{id}/":
    delete:
      operationId: delete_tenant_by_id_api_v1_sysadmin_tenants__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TenantInDB"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Delete Tenant By Id
      tags:
        - sysadmin
    post:
      operationId: update_tenant_api_v1_sysadmin_tenants__id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TenantUpdatePublic"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TenantInDB"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Update Tenant
      tags:
        - sysadmin
  "/api/v1/sysadmin/tenants/{id}/completion-models/{completion_model_id}/":
    post:
      operationId: enable_completion_model_api_v1_sysadmin_tenants__id__completion_models__completion_model_id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: path
          name: completion_model_id
          required: true
          schema:
            format: uuid
            title: Completion Model Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CompletionModelUpdateFlags"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CompletionModelPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Enable Completion Model
      tags:
        - sysadmin
  "/api/v1/sysadmin/tenants/{id}/embedding-models/{embedding_model_id}/":
    post:
      operationId: enable_embedding_model_api_v1_sysadmin_tenants__id__embedding_models__embedding_model_id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: path
          name: embedding_model_id
          required: true
          schema:
            format: uuid
            title: Embedding Model Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmbeddingModelUpdateFlags"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmbeddingModelPublicLegacy"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Enable Embedding Model
      tags:
        - sysadmin
  "/api/v1/sysadmin/users/":
    get:
      operationId: get_all_users_api_v1_sysadmin_users__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_UserInDB_"
          description: Successful Response
      security:
        - APIKeyHeader: [ ]
      summary: Get All Users
      tags:
        - sysadmin
    post:
      operationId: register_new_user_api_v1_sysadmin_users__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserAddSuperAdmin"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserCreated"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Register New User
      tags:
        - sysadmin
  "/api/v1/sysadmin/users/{user_id}/":
    delete:
      operationId: delete_user_api_v1_sysadmin_users__user_id___delete
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid
            title: User Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DeleteResponse"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Delete User
      tags:
        - sysadmin
    get:
      operationId: get_user_api_v1_sysadmin_users__user_id___get
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid
            title: User Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserInDB"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Get User
      tags:
        - sysadmin
    post:
      description: Omitted fields are not updated.
      operationId: update_user_api_v1_sysadmin_users__user_id___post
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid
            title: User Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserUpdatePublic"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserInDB"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: [ ]
      summary: Update User
      tags:
        - sysadmin
  "/api/v1/templates/":
    get:
      description: Get all types of templates
      operationId: get_templates_api_v1_templates__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TemplateListPublic"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Templates
      tags:
        - templates
  "/api/v1/templates/apps/":
    get:
      description: Get all app templates
      operationId: get_templates_api_v1_templates_apps__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppTemplateListPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Templates
      tags:
        - apps-templates
  "/api/v1/templates/assistants/":
    get:
      description: Get all assistant templates
      operationId: get_templates_api_v1_templates_assistants__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AssistantTemplateListPublic"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Templates
      tags:
        - assistants-templates
  "/api/v1/token-usage/":
    get:
      description: |-
        Get token usage statistics for the specified date range.
        If no dates are provided, returns token usage for the last 30 days.
        Note: If no time is provided in datetime parameters, time components default to 00:00:00.
      operationId: get_token_usage_api_v1_token_usage__get
      parameters:
        - description: Start date for token usage data (defaults to 30 days ago).Time
            defaults to 00:00:00.
          in: query
          name: start_date
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: 'null'
            description: Start date for token usage data (defaults to 30 days ago).Time
              defaults to 00:00:00.
            title: Start Date
        - description: End date for token usage data (defaults to current time).Time
            defaults to 00:00:00.
          in: query
          name: end_date
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: 'null'
            description: End date for token usage data (defaults to current time).Time
              defaults to 00:00:00.
            title: End Date
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenUsageSummary"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Token Usage
      tags:
        - token-usage
  "/api/v1/transcription-models/":
    get:
      operationId: get_transcription_models_api_v1_transcription_models__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_TranscriptionModelPublic_"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Transcription Models
      tags:
        - transcription-models
  "/api/v1/transcription-models/{id}/":
    post:
      operationId: update_transcription_model_api_v1_transcription_models__id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TranscriptionModelUpdate"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TranscriptionModelPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Transcription Model
      tags:
        - transcription-models
  "/api/v1/user-groups/":
    get:
      operationId: get_user_groups_api_v1_user_groups__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_UserGroupPublic_"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get User Groups
      tags:
        - user-groups
    post:
      operationId: create_user_group_api_v1_user_groups__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserGroupCreateRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserGroupPublic"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create User Group
      tags:
        - user-groups
  "/api/v1/user-groups/{id}/":
    delete:
      operationId: delete_user_group_by_uuid_api_v1_user_groups__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserGroupPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete User Group By Uuid
      tags:
        - user-groups
    get:
      operationId: get_user_group_by_uuid_api_v1_user_groups__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserGroupPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get User Group By Uuid
      tags:
        - user-groups
    post:
      operationId: update_user_group_api_v1_user_groups__id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserGroupUpdateRequest"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserGroupPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update User Group
      tags:
        - user-groups
  "/api/v1/user-groups/{id}/users/{user_id}/":
    delete:
      operationId: delete_user_from_user_group_api_v1_user_groups__id__users__user_id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid
            title: User Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserGroupPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete User From User Group
      tags:
        - user-groups
    post:
      operationId: add_user_to_user_group_api_v1_user_groups__id__users__user_id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid
            title: User Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserGroupPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Add User To User Group
      tags:
        - user-groups
  "/api/v1/users/":
    get:
      operationId: get_tenant_users_api_v1_users__get
      parameters:
        - description: Email of user
          in: query
          name: email
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Email of user
            title: Email
        - description: Users per page
          in: query
          name: limit
          required: false
          schema:
            description: Users per page
            minimum: 1
            title: Limit
            type: integer
        - description: Current cursor
          in: query
          name: cursor
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Current cursor
            title: Cursor
        - description: Show previous page
          in: query
          name: previous
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            default: false
            description: Show previous page
            title: Previous
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CursorPaginatedResponse_UserSparse_"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Tenant Users
      tags:
        - users
  "/api/v1/users/admin/invite/":
    post:
      operationId: invite_user_api_v1_users_admin_invite__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PropUserInvite"
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAdminView"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Invite User
      tags:
        - users
  "/api/v1/users/admin/{id}/":
    delete:
      operationId: delete_user_api_v1_users_admin__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete User
      tags:
        - users
    patch:
      operationId: update_user_api_v1_users_admin__id___patch
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartialPropUserUpdate"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAdminView"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update User
      tags:
        - users
  "/api/v1/users/api-keys/":
    get:
      description: |-
        Generating a new api key will delete the old key.
        Make sure to copy the key since it will only be showed once,
        after which only the truncated key will be shown.
      operationId: generate_api_key_api_v1_users_api_keys__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiKey"
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Generate Api Key
      tags:
        - users
  "/api/v1/users/login/openid-connect/mobilityguard/":
    post:
      description: OpenID Connect Login with mobilityguard.
      operationId: login_with_mobilityguard_api_v1_users_login_openid_connect_mobilityguard__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpenIdConnectLogin"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccessToken"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Login With Mobilityguard
      tags:
        - users
  "/api/v1/users/login/token/":
    post:
      description: OAuth2 Login
      operationId: Login_api_v1_users_login_token__post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Body_Login_api_v1_users_login_token__post"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccessToken"
          description: Successful Response
        '401':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Login
      tags:
        - users
  "/api/v1/users/me/":
    get:
      operationId: Get_current_user_api_v1_users_me__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Current User
      tags:
        - users
  "/api/v1/users/provision/":
    post:
      operationId: provision_user_api_v1_users_provision__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserProvision"
        required: true
      responses:
        '201':
          content:
            application/json:
              schema: { }
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Provision User
      tags:
        - users
  "/api/v1/users/tenant/":
    get:
      operationId: Get_current_user_tenant_api_v1_users_tenant__get
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TenantPublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Current User Tenant
      tags:
        - users
  "/api/v1/websites/":
    get:
      deprecated: true
      operationId: get_websites_api_v1_websites__get
      parameters:
        - in: query
          name: for_tenant
          required: false
          schema:
            default: false
            title: For Tenant
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_WebsitePublic_"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Websites
      tags:
        - websites
    post:
      deprecated: true
      operationId: create_website_api_v1_websites__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebsiteCreateRequestDeprecated"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebsitePublic"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Create Website
      tags:
        - websites
  "/api/v1/websites/{id}/":
    delete:
      operationId: delete_website_api_v1_websites__id___delete
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Delete Website
      tags:
        - websites
    get:
      operationId: get_website_api_v1_websites__id___get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebsitePublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Website
      tags:
        - websites
    post:
      operationId: update_website_api_v1_websites__id___post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebsiteUpdate"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebsitePublic"
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Update Website
      tags:
        - websites
  "/api/v1/websites/{id}/info-blobs/":
    get:
      operationId: get_info_blobs_api_v1_websites__id__info_blobs__get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_InfoBlobPublicNoText_"
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Info Blobs
      tags:
        - websites
  "/api/v1/websites/{id}/run/":
    post:
      operationId: run_crawl_api_v1_websites__id__run__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/intric__websites__presentation__website_models__CrawlRunPublic"
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Run Crawl
      tags:
        - websites
  "/api/v1/websites/{id}/runs/":
    get:
      operationId: get_crawl_runs_api_v1_websites__id__runs__get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_CrawlRunPublic_"
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Crawl Runs
      tags:
        - websites
  "/api/v1/websites/{id}/transfer/":
    post:
      operationId: transfer_website_to_space_api_v1_websites__id__transfer__post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            title: Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransferRequest"
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Transfer Website To Space
      tags:
        - websites
  "/version":
    get:
      operationId: get_version_version_get
      responses:
        '200':
          content:
            application/json:
              schema: { }
          description: Successful Response
      security:
        - OAuth2PasswordBearer: [ ]
        - APIKeyHeader: [ ]
      summary: Get Version
tags:
  - description: User operations. **Login** logic is here.
    name: users
  - description: User groups operations. Use this to manage user groups.
    name: user-groups
  - description: Document operations. **Info-blobs** are blobs of binary information,
      not restricted to text, although current support is only text.
    name: info-blobs
  - description: Group operations. Use this to organize your info-blobs. **Uploading**
      info-blobs is here.
    name: groups
  - description: Assistant operations. Create assistants with the desired configuration
      and ask questions to them.
    name: assistants
  - description: Services operations. Documentation for these endpoints are coming soon.
    externalDocs:
      description: Services documentation (coming soon)
      url: https://www.intric.ai/documentation/services
    name: services
  - description: Job operations. Use this to keep track of running and completed jobs.
    name: jobs
  - description: Logging operations. Use these endpoints to get exactly what was sent
      to the AI-model for each question.
    name: logging
  - description: Analysis operations. Use these endpoints to see how your assistants
      are used, as well as to ask questions about the questions asked to an assistant.
    name: analysis
  - description: Widget operations. Use this to save widget settings and run widgets.
    name: widgets
  - description: Allowed Origins operations. Use this to specify the allowed origins
      from where the widgets will be hosted
    name: allowed-origins
  - description: Crawl operations. Use these endpoint to set up and run crawls.
    name: crawls
  - description: Crawl run operations. Use these endpoint to keep track of crawl runs.
    name: crawl-runs
  - description: User roles. Use this to manage user permissions.
    name: roles
  - description: Admin operations. Use this to manage your tenant.
    name: admin
  - description: Settings operations. Currently only houses chatbot widget settings.
    name: settings
  - description: Sysadmin operations. Use the super api key in order to access these
      operations.
    name: sysadmin
  - description: Module operations. These endpoints are used to handle module access
      for tenants. Requires elevated privileges.
    name: modules
