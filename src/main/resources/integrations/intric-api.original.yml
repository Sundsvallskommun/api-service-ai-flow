openapi: 3.1.0
info:
  title: Intric
  summary: General AI framework
  version: 1.74.0-dev
paths:
  /api/v1/users/login/token/:
    post:
      tags:
        - users
      summary: Login
      description: OAuth2 Login
      operationId: Login_api_v1_users_login_token__post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_Login_api_v1_users_login_token__post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/login/openid-connect/mobilityguard/:
    post:
      tags:
        - users
      summary: Login With Mobilityguard
      description: OpenID Connect Login with mobilityguard.
      operationId: >-
        login_with_mobilityguard_api_v1_users_login_openid_connect_mobilityguard__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenIdConnectLogin'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/:
    get:
      tags:
        - users
      summary: Get Tenant Users
      operationId: get_tenant_users_api_v1_users__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_UserSparse_'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/users/me/:
    get:
      tags:
        - users
      summary: Get Current User
      operationId: Get_current_user_api_v1_users_me__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublic'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/users/api-keys/:
    get:
      tags:
        - users
      summary: Generate Api Key
      description: |-
        Generating a new api key will delete the old key.
        Make sure to copy the key since it will only be showed once,
        after which only the truncated key will be shown.
      operationId: generate_api_key_api_v1_users_api_keys__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/users/tenant/:
    get:
      tags:
        - users
      summary: Get Current User Tenant
      operationId: Get_current_user_tenant_api_v1_users_tenant__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantPublic'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/users/admin/invite/:
    post:
      tags:
        - users
      summary: Invite User
      operationId: invite_user_api_v1_users_admin_invite__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropUserInvite'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdminView'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/users/admin/{id}/:
    patch:
      tags:
        - users
      summary: Update User
      operationId: update_user_api_v1_users_admin__id___patch
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialPropUserUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdminView'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - users
      summary: Delete User
      operationId: delete_user_api_v1_users_admin__id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/provision/:
    post:
      tags:
        - users
      summary: Provision User
      operationId: provision_user_api_v1_users_provision__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProvision'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/info-blobs/:
    get:
      tags:
        - info-blobs
      summary: Get Info Blob Ids
      description: |-
        Returns a list of info-blobs.

        Does not return the text of each info-blob, 'text' will be null.
      operationId: get_info_blob_ids_api_v1_info_blobs__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_InfoBlobPublicNoText_'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/info-blobs/{id}/:
    get:
      tags:
        - info-blobs
      summary: Get Info Blob
      operationId: get_info_blob_api_v1_info_blobs__id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoBlobPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - info-blobs
      summary: Update Info Blob
      description: Omitted fields are not updated.
      operationId: update_info_blob_api_v1_info_blobs__id___post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfoBlobUpdatePublic'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoBlobPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - info-blobs
      summary: Delete Info Blob
      description: Returns the deleted object.
      operationId: delete_info_blob_api_v1_info_blobs__id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoBlobPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/groups/:
    get:
      tags:
        - groups
      summary: Get Groups
      operationId: get_groups_api_v1_groups__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaginatedResponse_GroupPublicWithMetadata_
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
    post:
      tags:
        - groups
      summary: Create Group
      description: >-
        Valid values for `embedding_model` are the provided by `GET
        /api/v1/settings/models/`.

        Use the `name` field of the response from this endpoint.
      operationId: create_group_api_v1_groups__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPublicWithMetadata'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/groups/{id}/:
    get:
      tags:
        - groups
      summary: Get Group By Id
      operationId: get_group_by_id_api_v1_groups__id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPublicWithMetadata'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - groups
      summary: Update Group
      operationId: update_group_api_v1_groups__id___post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialGroupUpdatePublic'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPublicWithMetadata'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - groups
      summary: Delete Group By Id
      operationId: delete_group_by_id_api_v1_groups__id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGroupResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/groups/{id}/info-blobs/:
    post:
      tags:
        - groups
      summary: Add Info Blobs
      description: |-
        Maximum allowed simultaneous upload is 128.

        Will be embedded using the embedding model of the group.
      operationId: add_info_blobs_api_v1_groups__id__info_blobs__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfoBlobUpsertRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_InfoBlobPublic_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Service Unavailable
    get:
      tags:
        - groups
      summary: Get Info Blobs
      operationId: get_info_blobs_api_v1_groups__id__info_blobs__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_InfoBlobPublicNoText_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/groups/{id}/info-blobs/upload/:
    post:
      tags:
        - groups
      summary: Upload File
      description: Starts a job, use the job operations to keep track of this job
      operationId: upload_file_api_v1_groups__id__info_blobs_upload__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/Body_upload_file_api_v1_groups__id__info_blobs_upload__post
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/groups/{id}/searches/:
    post:
      tags:
        - groups
      summary: Run Semantic Search
      operationId: run_semantic_search_api_v1_groups__id__searches__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemanticSearchRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_SemanticSearchResponse_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/groups/{id}/transfer/:
    post:
      tags:
        - groups
      summary: Transfer Group To Space
      operationId: transfer_group_to_space_api_v1_groups__id__transfer__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/groups/{id}/publish/:
    post:
      tags:
        - groups
      summary: Publish Group
      operationId: publish_group_api_v1_groups__id__publish__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: published
          in: query
          required: true
          schema:
            type: boolean
            title: Published
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPublicWithMetadata'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/settings/:
    get:
      tags:
        - settings
      summary: Get Settings
      operationId: get_settings_api_v1_settings__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsPublic'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
    post:
      tags:
        - settings
      summary: Upsert Settings
      description: Omitted fields are not updated.
      operationId: upsert_settings_api_v1_settings__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsPublic'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/settings/models/:
    get:
      tags:
        - settings
      summary: Get Models
      description: |-
        From the response:
            - use the `id` field as values for `completion_model`
            - use the `id` field as values for `embedding_model`

        in creating and updating `Assistants` and `Services`.
      operationId: get_models_api_v1_settings_models__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsResponse'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/settings/formats/:
    get:
      tags:
        - settings
      summary: Get Formats
      operationId: get_formats_api_v1_settings_formats__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_str_'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/assistants/:
    post:
      tags:
        - assistants
      summary: Create Assistant
      operationId: create_assistant_api_v1_assistants__post
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssistantCreatePublic'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistantPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - assistants
      summary: Get Assistants
      description: Requires Admin permission if `for_tenant` is `true`.
      operationId: get_assistants_api_v1_assistants__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
            title: Name
        - name: for_tenant
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: For Tenant
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_AssistantPublic_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/assistants/{id}/:
    get:
      tags:
        - assistants
      summary: Get Assistant
      operationId: get_assistant_api_v1_assistants__id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistantPublic'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - assistants
      summary: Update Assistant
      description: Omitted fields are not updated
      operationId: update_assistant_api_v1_assistants__id___post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialAssistantUpdatePublic'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistantPublic'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - assistants
      summary: Delete Assistant
      operationId: delete_assistant_api_v1_assistants__id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/assistants/{id}/sessions/:
    post:
      tags:
        - assistants
      summary: Ask Assistant
      description: Streams the response as Server-Sent Events if stream == true
      operationId: ask_assistant_api_v1_assistants__id__sessions__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AskAssistant'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskResponse'
            text/event-stream:
              schema:
                $defs:
                  CompletionModelFamily:
                    enum:
                      - openai
                      - mistral
                      - vllm
                      - claude
                      - azure
                    title: CompletionModelFamily
                    type: string
                  CompletionModelPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      nickname:
                        title: Nickname
                        type: string
                      family:
                        $ref: '#/components/schemas/CompletionModelFamily'
                      token_limit:
                        title: Token Limit
                        type: integer
                      is_deprecated:
                        title: Is Deprecated
                        type: boolean
                      nr_billion_parameters:
                        anyOf:
                          - type: integer
                          - type: 'null'
                        title: Nr Billion Parameters
                      hf_link:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Hf Link
                      stability:
                        $ref: '#/components/schemas/ModelStability'
                      hosting:
                        $ref: '#/components/schemas/ModelHostingLocation'
                      open_source:
                        anyOf:
                          - type: boolean
                          - type: 'null'
                        title: Open Source
                      description:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Description
                      deployment_name:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Deployment Name
                      org:
                        anyOf:
                          - $ref: '#/components/schemas/Orgs'
                          - type: 'null'
                      vision:
                        title: Vision
                        type: boolean
                      is_org_enabled:
                        default: false
                        title: Is Org Enabled
                        type: boolean
                      can_access:
                        default: false
                        title: Can Access
                        type: boolean
                      is_locked:
                        default: true
                        title: Is Locked
                        type: boolean
                    required:
                      - id
                      - name
                      - nickname
                      - family
                      - token_limit
                      - is_deprecated
                      - stability
                      - hosting
                      - vision
                    title: CompletionModelPublic
                    type: object
                  FilePublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      mimetype:
                        title: Mimetype
                        type: string
                      size:
                        title: Size
                        type: integer
                    required:
                      - id
                      - name
                      - mimetype
                      - size
                    title: FilePublic
                    type: object
                  InfoBlobAskAssistantPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      metadata:
                        $ref: '#/components/schemas/InfoBlobMetadata'
                      group_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Group Id
                      website_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Website Id
                      score:
                        title: Score
                        type: number
                    required:
                      - id
                      - metadata
                      - score
                    title: InfoBlobAskAssistantPublic
                    type: object
                  InfoBlobMetadata:
                    properties:
                      url:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Url
                      title:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Title
                      embedding_model_id:
                        format: uuid
                        title: Embedding Model Id
                        type: string
                      size:
                        title: Size
                        type: integer
                    required:
                      - embedding_model_id
                      - size
                    title: InfoBlobMetadata
                    type: object
                  ModelHostingLocation:
                    enum:
                      - usa
                      - eu
                      - swe
                    title: ModelHostingLocation
                    type: string
                  ModelId:
                    properties:
                      id:
                        format: uuid
                        title: Id
                        type: string
                    required:
                      - id
                    title: ModelId
                    type: object
                  ModelStability:
                    enum:
                      - stable
                      - experimental
                    title: ModelStability
                    type: string
                  Orgs:
                    enum:
                      - OpenAI
                      - Meta
                      - Microsoft
                      - Anthropic
                    title: Orgs
                    type: string
                  UseTools:
                    properties:
                      assistants:
                        items:
                          $ref: '#/components/schemas/ModelId'
                        title: Assistants
                        type: array
                    required:
                      - assistants
                    title: UseTools
                    type: object
                properties:
                  session_id:
                    format: uuid
                    title: Session Id
                    type: string
                  question:
                    title: Question
                    type: string
                  files:
                    items:
                      $ref: '#/components/schemas/FilePublic'
                    title: Files
                    type: array
                  answer:
                    title: Answer
                    type: string
                  references:
                    items:
                      $ref: '#/components/schemas/InfoBlobAskAssistantPublic'
                    title: References
                    type: array
                  model:
                    anyOf:
                      - $ref: '#/components/schemas/CompletionModelPublic'
                      - type: 'null'
                  tools:
                    $ref: '#/components/schemas/UseTools'
                required:
                  - session_id
                  - question
                  - files
                  - answer
                  - references
                  - tools
                title: AskResponse
                type: object
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - assistants
      summary: Get Assistant Sessions
      operationId: get_assistant_sessions_api_v1_assistants__id__sessions__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
        - name: cursor
          in: query
          required: false
          schema:
            type: string
            format: date-time
            title: Cursor
        - name: previous
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Previous
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CursorPaginatedResponse_SessionMetadataPublic_
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/assistants/{id}/sessions/{session_id}/:
    get:
      tags:
        - assistants
      summary: Get Assistant Session
      operationId: get_assistant_session_api_v1_assistants__id__sessions__session_id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: session_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Session Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionPublic'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - assistants
      summary: Delete Assistant Session
      operationId: >-
        delete_assistant_session_api_v1_assistants__id__sessions__session_id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: session_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Session Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionPublic'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - assistants
      summary: Ask Followup
      description: Streams the response as Server-Sent Events if stream == true
      operationId: ask_followup_api_v1_assistants__id__sessions__session_id___post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: session_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Session Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AskAssistant'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskResponse'
            text/event-stream:
              schema:
                $defs:
                  CompletionModelFamily:
                    enum:
                      - openai
                      - mistral
                      - vllm
                      - claude
                      - azure
                    title: CompletionModelFamily
                    type: string
                  CompletionModelPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      nickname:
                        title: Nickname
                        type: string
                      family:
                        $ref: '#/components/schemas/CompletionModelFamily'
                      token_limit:
                        title: Token Limit
                        type: integer
                      is_deprecated:
                        title: Is Deprecated
                        type: boolean
                      nr_billion_parameters:
                        anyOf:
                          - type: integer
                          - type: 'null'
                        title: Nr Billion Parameters
                      hf_link:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Hf Link
                      stability:
                        $ref: '#/components/schemas/ModelStability'
                      hosting:
                        $ref: '#/components/schemas/ModelHostingLocation'
                      open_source:
                        anyOf:
                          - type: boolean
                          - type: 'null'
                        title: Open Source
                      description:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Description
                      deployment_name:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Deployment Name
                      org:
                        anyOf:
                          - $ref: '#/components/schemas/Orgs'
                          - type: 'null'
                      vision:
                        title: Vision
                        type: boolean
                      is_org_enabled:
                        default: false
                        title: Is Org Enabled
                        type: boolean
                      can_access:
                        default: false
                        title: Can Access
                        type: boolean
                      is_locked:
                        default: true
                        title: Is Locked
                        type: boolean
                    required:
                      - id
                      - name
                      - nickname
                      - family
                      - token_limit
                      - is_deprecated
                      - stability
                      - hosting
                      - vision
                    title: CompletionModelPublic
                    type: object
                  FilePublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      mimetype:
                        title: Mimetype
                        type: string
                      size:
                        title: Size
                        type: integer
                    required:
                      - id
                      - name
                      - mimetype
                      - size
                    title: FilePublic
                    type: object
                  InfoBlobAskAssistantPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      metadata:
                        $ref: '#/components/schemas/InfoBlobMetadata'
                      group_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Group Id
                      website_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Website Id
                      score:
                        title: Score
                        type: number
                    required:
                      - id
                      - metadata
                      - score
                    title: InfoBlobAskAssistantPublic
                    type: object
                  InfoBlobMetadata:
                    properties:
                      url:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Url
                      title:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Title
                      embedding_model_id:
                        format: uuid
                        title: Embedding Model Id
                        type: string
                      size:
                        title: Size
                        type: integer
                    required:
                      - embedding_model_id
                      - size
                    title: InfoBlobMetadata
                    type: object
                  ModelHostingLocation:
                    enum:
                      - usa
                      - eu
                      - swe
                    title: ModelHostingLocation
                    type: string
                  ModelId:
                    properties:
                      id:
                        format: uuid
                        title: Id
                        type: string
                    required:
                      - id
                    title: ModelId
                    type: object
                  ModelStability:
                    enum:
                      - stable
                      - experimental
                    title: ModelStability
                    type: string
                  Orgs:
                    enum:
                      - OpenAI
                      - Meta
                      - Microsoft
                      - Anthropic
                    title: Orgs
                    type: string
                  UseTools:
                    properties:
                      assistants:
                        items:
                          $ref: '#/components/schemas/ModelId'
                        title: Assistants
                        type: array
                    required:
                      - assistants
                    title: UseTools
                    type: object
                properties:
                  session_id:
                    format: uuid
                    title: Session Id
                    type: string
                  question:
                    title: Question
                    type: string
                  files:
                    items:
                      $ref: '#/components/schemas/FilePublic'
                    title: Files
                    type: array
                  answer:
                    title: Answer
                    type: string
                  references:
                    items:
                      $ref: '#/components/schemas/InfoBlobAskAssistantPublic'
                    title: References
                    type: array
                  model:
                    anyOf:
                      - $ref: '#/components/schemas/CompletionModelPublic'
                      - type: 'null'
                  tools:
                    $ref: '#/components/schemas/UseTools'
                required:
                  - session_id
                  - question
                  - files
                  - answer
                  - references
                  - tools
                title: AskResponse
                type: object
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/assistants/{id}/sessions/{session_id}/feedback/:
    post:
      tags:
        - assistants
      summary: Leave Feedback
      operationId: >-
        leave_feedback_api_v1_assistants__id__sessions__session_id__feedback__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: session_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Session Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionFeedback'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionPublic'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/assistants/{id}/api-keys/:
    get:
      tags:
        - assistants
      summary: Generate Read Only Assistant Key
      description: >-
        Generates a read-only api key for this assistant.


        This api key can only be used on `POST
        /api/v1/assistants/{id}/sessions/`

        and `POST /api/v1/assistants/{id}/sessions/{session_id}/`.
      operationId: generate_read_only_assistant_key_api_v1_assistants__id__api_keys__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/assistants/{id}/transfer/:
    post:
      tags:
        - assistants
      summary: Transfer Assistant To Space
      operationId: transfer_assistant_to_space_api_v1_assistants__id__transfer__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferApplicationRequest'
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/assistants/{id}/publish/:
    post:
      tags:
        - assistants
      summary: Publish Assistant
      operationId: publish_assistant_api_v1_assistants__id__publish__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: published
          in: query
          required: true
          schema:
            type: boolean
            title: Published
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistantPublic'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/services/:
    post:
      tags:
        - services
      summary: Create Service
      description: >-
        Create a service.


        `json_schema` is required if `output_validation` is 'json'.


        Conversely, `json_schema` is not evaluated if `output_format` is not
        'json'.


        if `output_format` is omitted, the output will not be formatted.
      operationId: create_service_api_v1_services__post
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCreatePublic'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePublicWithUser'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - services
      summary: Get Services
      operationId: get_services_api_v1_services__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
            title: Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_ServicePublicWithUser_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/services/{id}/:
    get:
      tags:
        - services
      summary: Get Service
      operationId: get_service_api_v1_services__id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePublicWithUser'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - services
      summary: Update Service
      description: Omitted fields are not updated
      operationId: update_service_api_v1_services__id___post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialServiceUpdatePublic'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePublicWithUser'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - services
      summary: Delete Service
      operationId: delete_service_api_v1_services__id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        '204':
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/services/{id}/run/:
    post:
      tags:
        - services
      summary: Run Service
      description: >-
        The schema of the output will be depending on the output validation of
        the service
      operationId: run_service_api_v1_services__id__run__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunService'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOutput'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - services
      summary: Get Service Runs
      operationId: get_service_runs_api_v1_services__id__run__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_ServiceRun_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/services/{id}/transfer/:
    post:
      tags:
        - services
      summary: Transfer Service To Space
      operationId: transfer_service_to_space_api_v1_services__id__transfer__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferApplicationRequest'
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/services/{id}/publish/:
    post:
      tags:
        - services
      summary: Publish Service
      operationId: publish_service_api_v1_services__id__publish__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: published
          in: query
          required: true
          schema:
            type: boolean
            title: Published
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePublicWithUser'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/logging/{message_id}/:
    get:
      tags:
        - logging
      summary: Get Logging Details
      operationId: get_logging_details_api_v1_logging__message_id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Message Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageLogging'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/analysis/counts/:
    get:
      tags:
        - analysis
      summary: Get Counts
      description: Total counts.
      operationId: get_counts_api_v1_analysis_counts__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Counts'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/analysis/metadata-statistics/:
    get:
      tags:
        - analysis
      summary: Get Metadata
      description: Data for analytics
      operationId: get_metadata_api_v1_analysis_metadata_statistics__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
            format: date-time
            default: '2024-12-10T19:02:57.327113Z'
            title: Start Date
        - name: end_date
          in: query
          required: false
          schema:
            type: string
            format: date-time
            default: '2025-01-09T20:03:57.327120Z'
            title: End Date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataStatistics'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/analysis/assistants/{assistant_id}/:
    get:
      tags:
        - analysis
      summary: Get Most Recent Questions
      description: >-
        Get all the questions asked to an assistant in the last `days_since`
        days.


        `days_since`: How long back in time to get the questions.


        `include_followups`: If not selected, only the first question of a
        session is returned.
            Order is by date ascending, but if followups are included they are grouped together
            with their original question.
      operationId: get_most_recent_questions_api_v1_analysis_assistants__assistant_id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: assistant_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Assistant Id
        - name: days_since
          in: query
          required: false
          schema:
            type: integer
            maximum: 90
            minimum: 0
            default: 30
            title: Days Since
        - name: from_date
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date
              - type: 'null'
            title: From Date
        - name: to_date
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date
              - type: 'null'
            title: To Date
        - name: include_followups
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Include Followups
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Message_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - analysis
      summary: Ask Question About Questions
      description: >-
        Ask a question with the questions asked to an assistant in the last
          `days_since` days as the context.

        `days_since`: How long back in time to get the questions.


        `include_followups`: If not selected, only the first question of a
        session is returned.
            Order is by date ascending, but if followups are included they are grouped together
            with their original question.
      operationId: >-
        ask_question_about_questions_api_v1_analysis_assistants__assistant_id___post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: assistant_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Assistant Id
        - name: days_since
          in: query
          required: false
          schema:
            type: integer
            maximum: 90
            minimum: 0
            default: 30
            title: Days Since
        - name: from_date
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date
              - type: 'null'
            title: From Date
        - name: to_date
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date
              - type: 'null'
            title: To Date
        - name: include_followups
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Include Followups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AskAnalysis'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/admin/users/:
    get:
      tags:
        - admin
      summary: Get Users
      operationId: get_users_api_v1_admin_users__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_UserAdminView_'
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
    post:
      tags:
        - admin
      summary: Register User
      operationId: register_user_api_v1_admin_users__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddAdmin'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreatedAdminView'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/admin/users/{username}/:
    post:
      tags:
        - admin
      summary: Update User
      description: Omitted fields are not updated.
      operationId: update_user_api_v1_admin_users__username___post
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
            title: Username
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdatePublic'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdminView'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/admin/users/{username}:
    delete:
      tags:
        - admin
      summary: Delete User
      operationId: delete_user_api_v1_admin_users__username__delete
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
            title: Username
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/admin/privacy-policy/:
    post:
      tags:
        - admin
      summary: Update Privacy Policy
      operationId: update_privacy_policy_api_v1_admin_privacy_policy__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivacyPolicy'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/jobs/:
    get:
      tags:
        - jobs
      summary: Get Jobs
      operationId: get_jobs_api_v1_jobs__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: include_completed
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Include Completed
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_JobPublic_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/jobs/{id}/:
    get:
      tags:
        - jobs
      summary: Get Job
      operationId: get_job_api_v1_jobs__id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/user-groups/:
    get:
      tags:
        - user-groups
      summary: Get User Groups
      operationId: get_user_groups_api_v1_user_groups__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_UserGroupPublic_'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
    post:
      tags:
        - user-groups
      summary: Create User Group
      operationId: create_user_group_api_v1_user_groups__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupCreateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/user-groups/{id}/:
    get:
      tags:
        - user-groups
      summary: Get User Group By Uuid
      operationId: get_user_group_by_uuid_api_v1_user_groups__id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - user-groups
      summary: Update User Group
      operationId: update_user_group_api_v1_user_groups__id___post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupUpdateRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - user-groups
      summary: Delete User Group By Uuid
      operationId: delete_user_group_by_uuid_api_v1_user_groups__id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/user-groups/{id}/users/{user_id}/:
    post:
      tags:
        - user-groups
      summary: Add User To User Group
      operationId: add_user_to_user_group_api_v1_user_groups__id__users__user_id___post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - user-groups
      summary: Delete User From User Group
      operationId: >-
        delete_user_from_user_group_api_v1_user_groups__id__users__user_id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/allowed-origins/:
    get:
      tags:
        - allowed-origins
      summary: Get Origins
      operationId: get_origins_api_v1_allowed_origins__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_AllowedOriginPublic_'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/completion-models/:
    get:
      tags:
        - completion-models
      summary: Get Completion Models
      operationId: get_completion_models_api_v1_completion_models__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_CompletionModelPublic_'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/completion-models/{id}/:
    post:
      tags:
        - completion-models
      summary: Enable Completion Model
      operationId: enable_completion_model_api_v1_completion_models__id___post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionModelUpdateFlags'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionModelPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/embedding-models/:
    get:
      tags:
        - embedding-models
      summary: Get Embedding Models
      operationId: get_embedding_models_api_v1_embedding_models__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_EmbeddingModelPublic_'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/embedding-models/{id}/:
    post:
      tags:
        - embedding-models
      summary: Enable Embedding Model
      operationId: enable_embedding_model_api_v1_embedding_models__id___post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddingModelUpdateFlags'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingModelPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/files/:
    get:
      tags:
        - files
      summary: Get Files
      operationId: get_files_api_v1_files__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_FilePublic_'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
    post:
      tags:
        - files
      summary: Upload File
      operationId: upload_file_api_v1_files__post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_file_api_v1_files__post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilePublic'
        '413':
          description: Request Entity Too Large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/files/{id}/:
    get:
      tags:
        - files
      summary: Get File
      operationId: get_file_api_v1_files__id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilePublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - files
      summary: Delete File
      operationId: delete_file_api_v1_files__id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/limits/:
    get:
      tags:
        - limits
      summary: Get Limits
      operationId: get_limits_api_v1_limits__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Limits'
  /api/v1/spaces/:
    get:
      tags:
        - spaces
      summary: Get Spaces
      operationId: get_spaces_api_v1_spaces__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_SpaceSparse_'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
    post:
      tags:
        - spaces
      summary: Create Space
      operationId: create_space_api_v1_spaces__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSpaceRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacePublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/spaces/{id}/:
    get:
      tags:
        - spaces
      summary: Get Space
      operationId: get_space_api_v1_spaces__id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacePublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
        - spaces
      summary: Update Space
      operationId: update_space_api_v1_spaces__id___patch
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialUpdateSpaceRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacePublic'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - spaces
      summary: Delete Space
      operationId: delete_space_api_v1_spaces__id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/spaces/{id}/applications/:
    get:
      tags:
        - spaces
      summary: Get Space Applications
      operationId: get_space_applications_api_v1_spaces__id__applications__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/spaces/{id}/applications/assistants/:
    post:
      tags:
        - spaces
      summary: Create Space Assistant
      operationId: create_space_assistant_api_v1_spaces__id__applications_assistants__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSpaceAssistantRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistantPublic'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/spaces/{id}/applications/services/:
    post:
      tags:
        - spaces
      summary: Create Space Services
      operationId: create_space_services_api_v1_spaces__id__applications_services__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSpaceServiceRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSpaceServiceResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/spaces/{id}/knowledge/:
    get:
      tags:
        - spaces
      summary: Get Space Knowledge
      operationId: get_space_knowledge_api_v1_spaces__id__knowledge__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Knowledge'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/spaces/{id}/knowledge/groups/:
    post:
      tags:
        - spaces
      summary: Create Space Groups
      operationId: create_space_groups_api_v1_spaces__id__knowledge_groups__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSpaceGroupsRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSpaceGroupsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/spaces/{id}/knowledge/websites/:
    post:
      tags:
        - spaces
      summary: Create Space Websites
      operationId: create_space_websites_api_v1_spaces__id__knowledge_websites__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSpaceWebsitesRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSpaceWebsitesResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/spaces/{id}/members/:
    post:
      tags:
        - spaces
      summary: Add Space Member
      operationId: add_space_member_api_v1_spaces__id__members__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSpaceMemberRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceMember'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/spaces/{id}/members/{user_id}/:
    patch:
      tags:
        - spaces
      summary: Change Role Of Member
      operationId: change_role_of_member_api_v1_spaces__id__members__user_id___patch
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpaceMemberRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceMember'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - spaces
      summary: Remove Space Member
      operationId: remove_space_member_api_v1_spaces__id__members__user_id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: User Id
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/spaces/type/personal/:
    get:
      tags:
        - spaces
      summary: Get Personal Space
      operationId: get_personal_space_api_v1_spaces_type_personal__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacePublic'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/spaces/{id}/applications/apps/:
    post:
      tags:
        - spaces
      summary: Create App
      operationId: create_app_api_v1_spaces__id__applications_apps__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSpaceAppRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPublic'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/dashboard/:
    get:
      tags:
        - dashboard
      summary: Get Dashboard
      operationId: get_dashboard_api_v1_dashboard__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/websites/:
    get:
      tags:
        - websites
      summary: Get Websites
      operationId: get_websites_api_v1_websites__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: for_tenant
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: For Tenant
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_WebsitePublic_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - websites
      summary: Create Website
      description: >-
        If `crawl_type` is `sitemap`, `allowed_path` and `download_files` must
        be unset.
      operationId: create_website_api_v1_websites__post
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsiteCreateRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsitePublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/websites/{id}/:
    get:
      tags:
        - websites
      summary: Get Website
      operationId: get_website_api_v1_websites__id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsitePublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - websites
      summary: Update Website
      operationId: update_website_api_v1_websites__id___post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialWebsiteUpdateRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsitePublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - websites
      summary: Delete Website
      operationId: delete_website_api_v1_websites__id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsitePublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/websites/{id}/run/:
    post:
      tags:
        - websites
      summary: Run Crawl
      operationId: run_crawl_api_v1_websites__id__run__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrawlRunPublic'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/websites/{id}/runs/:
    get:
      tags:
        - websites
      summary: Get Crawl Runs
      operationId: get_crawl_runs_api_v1_websites__id__runs__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_CrawlRunPublic_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/websites/{id}/transfer/:
    post:
      tags:
        - websites
      summary: Transfer Website To Space
      operationId: transfer_website_to_space_api_v1_websites__id__transfer__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/websites/{id}/info-blobs/:
    get:
      tags:
        - websites
      summary: Get Info Blobs
      operationId: get_info_blobs_api_v1_websites__id__info_blobs__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_InfoBlobPublicNoText_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/websites/{id}/publish/:
    post:
      tags:
        - websites
      summary: Publish Website
      operationId: publish_website_api_v1_websites__id__publish__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: published
          in: query
          required: true
          schema:
            type: boolean
            title: Published
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsitePublic'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/templates/apps/:
    get:
      tags:
        - apps-templates
      summary: Get Templates
      description: Get all app templates
      operationId: get_templates_api_v1_templates_apps__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppTemplateListPublic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/templates/apps/{id}:
    get:
      tags:
        - apps-templates
      summary: Get App Template
      operationId: get_app_template_api_v1_templates_apps__id__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppTemplatePublic'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/templates/assistants/:
    get:
      tags:
        - assistants-templates
      summary: Get Templates
      description: Get all assistant templates
      operationId: get_templates_api_v1_templates_assistants__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistantTemplateListPublic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/templates/assistants/{id}/:
    get:
      tags:
        - assistants-templates
      summary: Get Assistant Template
      operationId: get_assistant_template_api_v1_templates_assistants__id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistantTemplatePublic'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/templates/:
    get:
      tags:
        - templates
      summary: Get Templates
      description: Get all types of templates
      operationId: get_templates_api_v1_templates__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateListPublic'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/widgets/:
    get:
      tags:
        - widgets
      summary: Get Tenant Widgets
      operationId: get_tenant_widgets_api_v1_widgets__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: assistant_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
            title: Assistant Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_WidgetPublic_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - widgets
      summary: Add Widget
      operationId: add_widget_api_v1_widgets__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetCreatePublic'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/widgets/{id}/:
    get:
      tags:
        - widgets
      summary: Get Widget
      operationId: get_widget_api_v1_widgets__id___get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - widgets
      summary: Update Widget
      operationId: update_widget_api_v1_widgets__id___post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialWidgetUpdatePublic'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - widgets
      summary: Delete Widget
      operationId: delete_widget_api_v1_widgets__id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/widgets/{id}/sessions/:
    post:
      tags:
        - widgets
      summary: Ask Assistant
      operationId: ask_assistant_api_v1_widgets__id__sessions__post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AskAssistant'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskResponse'
            text/event-stream:
              schema:
                $defs:
                  CompletionModelFamily:
                    enum:
                      - openai
                      - mistral
                      - vllm
                      - claude
                      - azure
                    title: CompletionModelFamily
                    type: string
                  CompletionModelPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      nickname:
                        title: Nickname
                        type: string
                      family:
                        $ref: '#/components/schemas/CompletionModelFamily'
                      token_limit:
                        title: Token Limit
                        type: integer
                      is_deprecated:
                        title: Is Deprecated
                        type: boolean
                      nr_billion_parameters:
                        anyOf:
                          - type: integer
                          - type: 'null'
                        title: Nr Billion Parameters
                      hf_link:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Hf Link
                      stability:
                        $ref: '#/components/schemas/ModelStability'
                      hosting:
                        $ref: '#/components/schemas/ModelHostingLocation'
                      open_source:
                        anyOf:
                          - type: boolean
                          - type: 'null'
                        title: Open Source
                      description:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Description
                      deployment_name:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Deployment Name
                      org:
                        anyOf:
                          - $ref: '#/components/schemas/Orgs'
                          - type: 'null'
                      vision:
                        title: Vision
                        type: boolean
                      is_org_enabled:
                        default: false
                        title: Is Org Enabled
                        type: boolean
                      can_access:
                        default: false
                        title: Can Access
                        type: boolean
                      is_locked:
                        default: true
                        title: Is Locked
                        type: boolean
                    required:
                      - id
                      - name
                      - nickname
                      - family
                      - token_limit
                      - is_deprecated
                      - stability
                      - hosting
                      - vision
                    title: CompletionModelPublic
                    type: object
                  FilePublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      mimetype:
                        title: Mimetype
                        type: string
                      size:
                        title: Size
                        type: integer
                    required:
                      - id
                      - name
                      - mimetype
                      - size
                    title: FilePublic
                    type: object
                  InfoBlobAskAssistantPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      metadata:
                        $ref: '#/components/schemas/InfoBlobMetadata'
                      group_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Group Id
                      website_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Website Id
                      score:
                        title: Score
                        type: number
                    required:
                      - id
                      - metadata
                      - score
                    title: InfoBlobAskAssistantPublic
                    type: object
                  InfoBlobMetadata:
                    properties:
                      url:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Url
                      title:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Title
                      embedding_model_id:
                        format: uuid
                        title: Embedding Model Id
                        type: string
                      size:
                        title: Size
                        type: integer
                    required:
                      - embedding_model_id
                      - size
                    title: InfoBlobMetadata
                    type: object
                  ModelHostingLocation:
                    enum:
                      - usa
                      - eu
                      - swe
                    title: ModelHostingLocation
                    type: string
                  ModelId:
                    properties:
                      id:
                        format: uuid
                        title: Id
                        type: string
                    required:
                      - id
                    title: ModelId
                    type: object
                  ModelStability:
                    enum:
                      - stable
                      - experimental
                    title: ModelStability
                    type: string
                  Orgs:
                    enum:
                      - OpenAI
                      - Meta
                      - Microsoft
                      - Anthropic
                    title: Orgs
                    type: string
                  UseTools:
                    properties:
                      assistants:
                        items:
                          $ref: '#/components/schemas/ModelId'
                        title: Assistants
                        type: array
                    required:
                      - assistants
                    title: UseTools
                    type: object
                properties:
                  session_id:
                    format: uuid
                    title: Session Id
                    type: string
                  question:
                    title: Question
                    type: string
                  files:
                    items:
                      $ref: '#/components/schemas/FilePublic'
                    title: Files
                    type: array
                  answer:
                    title: Answer
                    type: string
                  references:
                    items:
                      $ref: '#/components/schemas/InfoBlobAskAssistantPublic'
                    title: References
                    type: array
                  model:
                    anyOf:
                      - $ref: '#/components/schemas/CompletionModelPublic'
                      - type: 'null'
                  tools:
                    $ref: '#/components/schemas/UseTools'
                required:
                  - session_id
                  - question
                  - files
                  - answer
                  - references
                  - tools
                title: AskResponse
                type: object
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/widgets/{id}/sessions/{session_id}/:
    post:
      tags:
        - widgets
      summary: Ask Followup
      operationId: ask_followup_api_v1_widgets__id__sessions__session_id___post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: session_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Session Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AskAssistant'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskResponse'
            text/event-stream:
              schema:
                $defs:
                  CompletionModelFamily:
                    enum:
                      - openai
                      - mistral
                      - vllm
                      - claude
                      - azure
                    title: CompletionModelFamily
                    type: string
                  CompletionModelPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      nickname:
                        title: Nickname
                        type: string
                      family:
                        $ref: '#/components/schemas/CompletionModelFamily'
                      token_limit:
                        title: Token Limit
                        type: integer
                      is_deprecated:
                        title: Is Deprecated
                        type: boolean
                      nr_billion_parameters:
                        anyOf:
                          - type: integer
                          - type: 'null'
                        title: Nr Billion Parameters
                      hf_link:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Hf Link
                      stability:
                        $ref: '#/components/schemas/ModelStability'
                      hosting:
                        $ref: '#/components/schemas/ModelHostingLocation'
                      open_source:
                        anyOf:
                          - type: boolean
                          - type: 'null'
                        title: Open Source
                      description:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Description
                      deployment_name:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Deployment Name
                      org:
                        anyOf:
                          - $ref: '#/components/schemas/Orgs'
                          - type: 'null'
                      vision:
                        title: Vision
                        type: boolean
                      is_org_enabled:
                        default: false
                        title: Is Org Enabled
                        type: boolean
                      can_access:
                        default: false
                        title: Can Access
                        type: boolean
                      is_locked:
                        default: true
                        title: Is Locked
                        type: boolean
                    required:
                      - id
                      - name
                      - nickname
                      - family
                      - token_limit
                      - is_deprecated
                      - stability
                      - hosting
                      - vision
                    title: CompletionModelPublic
                    type: object
                  FilePublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      mimetype:
                        title: Mimetype
                        type: string
                      size:
                        title: Size
                        type: integer
                    required:
                      - id
                      - name
                      - mimetype
                      - size
                    title: FilePublic
                    type: object
                  InfoBlobAskAssistantPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      metadata:
                        $ref: '#/components/schemas/InfoBlobMetadata'
                      group_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Group Id
                      website_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Website Id
                      score:
                        title: Score
                        type: number
                    required:
                      - id
                      - metadata
                      - score
                    title: InfoBlobAskAssistantPublic
                    type: object
                  InfoBlobMetadata:
                    properties:
                      url:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Url
                      title:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Title
                      embedding_model_id:
                        format: uuid
                        title: Embedding Model Id
                        type: string
                      size:
                        title: Size
                        type: integer
                    required:
                      - embedding_model_id
                      - size
                    title: InfoBlobMetadata
                    type: object
                  ModelHostingLocation:
                    enum:
                      - usa
                      - eu
                      - swe
                    title: ModelHostingLocation
                    type: string
                  ModelId:
                    properties:
                      id:
                        format: uuid
                        title: Id
                        type: string
                    required:
                      - id
                    title: ModelId
                    type: object
                  ModelStability:
                    enum:
                      - stable
                      - experimental
                    title: ModelStability
                    type: string
                  Orgs:
                    enum:
                      - OpenAI
                      - Meta
                      - Microsoft
                      - Anthropic
                    title: Orgs
                    type: string
                  UseTools:
                    properties:
                      assistants:
                        items:
                          $ref: '#/components/schemas/ModelId'
                        title: Assistants
                        type: array
                    required:
                      - assistants
                    title: UseTools
                    type: object
                properties:
                  session_id:
                    format: uuid
                    title: Session Id
                    type: string
                  question:
                    title: Question
                    type: string
                  files:
                    items:
                      $ref: '#/components/schemas/FilePublic'
                    title: Files
                    type: array
                  answer:
                    title: Answer
                    type: string
                  references:
                    items:
                      $ref: '#/components/schemas/InfoBlobAskAssistantPublic'
                    title: References
                    type: array
                  model:
                    anyOf:
                      - $ref: '#/components/schemas/CompletionModelPublic'
                      - type: 'null'
                  tools:
                    $ref: '#/components/schemas/UseTools'
                required:
                  - session_id
                  - question
                  - files
                  - answer
                  - references
                  - tools
                title: AskResponse
                type: object
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/widgets/settings/privacy-policy/:
    get:
      tags:
        - widgets
      summary: Get Privacy Policy
      operationId: get_privacy_policy_api_v1_widgets_settings_privacy_policy__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivacyPolicy'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
    post:
      tags:
        - widgets
      summary: Set Privacy Policy
      operationId: set_privacy_policy_api_v1_widgets_settings_privacy_policy__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivacyPolicy'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivacyPolicy'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/crawl-runs/{id}/:
    get:
      tags:
        - crawl-runs
      summary: Get Crawl Run
      operationId: get_crawl_run_api_v1_crawl_runs__id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrawlRunPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sysadmin/users/:
    get:
      tags:
        - sysadmin
      summary: Get All Users
      operationId: get_all_users_api_v1_sysadmin_users__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_UserInDB_'
      security:
        - APIKeyHeader: []
    post:
      tags:
        - sysadmin
      summary: Register New User
      operationId: register_new_user_api_v1_sysadmin_users__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddSuperAdmin'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreated'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /api/v1/sysadmin/users/{user_id}/:
    get:
      tags:
        - sysadmin
      summary: Get User
      operationId: get_user_api_v1_sysadmin_users__user_id___get
      security:
        - APIKeyHeader: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInDB'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - sysadmin
      summary: Delete User
      operationId: delete_user_api_v1_sysadmin_users__user_id___delete
      security:
        - APIKeyHeader: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - sysadmin
      summary: Update User
      description: Omitted fields are not updated.
      operationId: update_user_api_v1_sysadmin_users__user_id___post
      security:
        - APIKeyHeader: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdatePublic'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInDB'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sysadmin/tenants/:
    get:
      tags:
        - sysadmin
      summary: Get Tenants
      operationId: get_tenants_api_v1_sysadmin_tenants__get
      security:
        - APIKeyHeader: []
      parameters:
        - name: domain
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Domain
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_TenantInDB_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - sysadmin
      summary: Create Tenant
      operationId: create_tenant_api_v1_sysadmin_tenants__post
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantBase'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInDB'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sysadmin/tenants/{id}/:
    post:
      tags:
        - sysadmin
      summary: Update Tenant
      operationId: update_tenant_api_v1_sysadmin_tenants__id___post
      security:
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantUpdatePublic'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInDB'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - sysadmin
      summary: Delete Tenant By Id
      operationId: delete_tenant_by_id_api_v1_sysadmin_tenants__id___delete
      security:
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInDB'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sysadmin/predefined-roles/:
    get:
      tags:
        - sysadmin
      summary: Get Predefined Roles
      operationId: get_predefined_roles_api_v1_sysadmin_predefined_roles__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /api/v1/sysadmin/crawl-all-weekly-websites/:
    post:
      tags:
        - sysadmin
      summary: Crawl All Weekly Websites
      operationId: >-
        crawl_all_weekly_websites_api_v1_sysadmin_crawl_all_weekly_websites__post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /api/v1/sysadmin/embedding-models/:
    get:
      tags:
        - sysadmin
      summary: Get Embedding Models
      operationId: get_embedding_models_api_v1_sysadmin_embedding_models__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_EmbeddingModel_'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
      security:
        - APIKeyHeader: []
  /api/v1/sysadmin/completion-models/:
    get:
      tags:
        - sysadmin
      summary: Get Completion Models
      operationId: get_completion_models_api_v1_sysadmin_completion_models__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_CompletionModelPublic_'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
      security:
        - APIKeyHeader: []
  /api/v1/sysadmin/tenants/{id}/completion-models/{completion_model_id}/:
    post:
      tags:
        - sysadmin
      summary: Enable Completion Model
      operationId: >-
        enable_completion_model_api_v1_sysadmin_tenants__id__completion_models__completion_model_id___post
      security:
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: completion_model_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Completion Model Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionModelUpdateFlags'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionModelPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sysadmin/tenants/{id}/embedding-models/{embedding_model_id}/:
    post:
      tags:
        - sysadmin
      summary: Enable Embedding Model
      operationId: >-
        enable_embedding_model_api_v1_sysadmin_tenants__id__embedding_models__embedding_model_id___post
      security:
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: embedding_model_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Embedding Model Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddingModelUpdateFlags'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingModelPublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sysadmin/spaces/import/:
    post:
      tags:
        - sysadmin
      summary: Create Space And Import
      operationId: create_space_and_import_api_v1_sysadmin_spaces_import__post
      security:
        - APIKeyHeader: []
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
            title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAndImportSpaceRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sysadmin/migrations/migrate-to-spaces/:
    post:
      tags:
        - sysadmin
      summary: Migrate To Spaces
      operationId: migrate_to_spaces_api_v1_sysadmin_migrations_migrate_to_spaces__post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /api/v1/sysadmin/allowed-origins/:
    post:
      tags:
        - sysadmin
      summary: Add Origin
      operationId: add_origin_api_v1_sysadmin_allowed_origins__post
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllowedOriginCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedOriginInDB'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - sysadmin
      summary: Get Origins
      operationId: get_origins_api_v1_sysadmin_allowed_origins__get
      security:
        - APIKeyHeader: []
      parameters:
        - name: tenant_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: 'null'
            title: Tenant Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_AllowedOriginInDB_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/sysadmin/allowed-origins/{id}/:
    delete:
      tags:
        - sysadmin
      summary: Delete Origin
      operationId: delete_origin_api_v1_sysadmin_allowed_origins__id___delete
      security:
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/modules/:
    get:
      tags:
        - modules
      summary: Get Modules
      operationId: get_modules_api_v1_modules__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_ModuleInDB_'
      security:
        - APIKeyHeader: []
    post:
      tags:
        - modules
      summary: Add Module
      operationId: add_module_api_v1_modules__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModuleBase'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleInDB'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /api/v1/modules/{tenant_id}/:
    post:
      tags:
        - modules
      summary: Add Module To Tenant
      description: Value is a list of module `id`'s to add to the `tenant_id`.
      operationId: add_module_to_tenant_api_v1_modules__tenant_id___post
      security:
        - APIKeyHeader: []
      parameters:
        - name: tenant_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Tenant Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ModelId'
              title: Module Ids
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInDB'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/apps/{id}/:
    get:
      tags:
        - apps
      summary: Get App
      operationId: get_app_api_v1_apps__id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPublic'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
        - apps
      summary: Update App
      operationId: update_app_api_v1_apps__id___patch
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialAppUpdateRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPublic'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - apps
      summary: Delete App
      operationId: delete_app_api_v1_apps__id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/apps/{id}/runs/:
    post:
      tags:
        - apps
      summary: Run App
      operationId: run_app_api_v1_apps__id__runs__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunAppRequest'
      responses:
        '203':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppRunPublic'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - apps
      summary: Get App Runs
      operationId: get_app_runs_api_v1_apps__id__runs__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_AppRunSparse_'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/apps/{id}/prompts/:
    get:
      tags:
        - apps
      summary: Get Prompts
      operationId: get_prompts_api_v1_apps__id__prompts__get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_PromptSparse_'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/apps/{id}/publish/:
    post:
      tags:
        - apps
      summary: Publish App
      operationId: publish_app_api_v1_apps__id__publish__post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
        - name: published
          in: query
          required: true
          schema:
            type: boolean
            title: Published
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPublic'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/app-runs/{id}/:
    get:
      tags:
        - app-runs
      summary: Get App Run
      operationId: get_app_run_api_v1_app_runs__id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppRunPublic'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - app-runs
      summary: Delete App Run
      operationId: delete_app_run_api_v1_app_runs__id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/roles/permissions/:
    get:
      tags:
        - roles
      summary: Get Permissions
      operationId: get_permissions_api_v1_roles_permissions__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PermissionPublic'
                type: array
                title: Response Get Permissions Api V1 Roles Permissions  Get
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/roles/:
    get:
      tags:
        - roles
      summary: Get Roles
      operationId: get_roles_api_v1_roles__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesPaginatedResponse'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
    post:
      tags:
        - roles
      summary: Create Role
      operationId: create_role_api_v1_roles__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
  /api/v1/roles/{role_id}/:
    get:
      tags:
        - roles
      summary: Get Role By Id
      operationId: get_role_by_id_api_v1_roles__role_id___get
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: role_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Role Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - roles
      summary: Update Role
      operationId: update_role_api_v1_roles__role_id___post
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: role_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Role Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUpdateRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - roles
      summary: Delete Role By Id
      operationId: delete_role_by_id_api_v1_roles__role_id___delete
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
      parameters:
        - name: role_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Role Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePublic'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
          description: Not Found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /version:
    get:
      summary: Get Version
      operationId: get_version_version_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
components:
  schemas:
    AcceptedFileType:
      properties:
        mimetype:
          type: string
          title: Mimetype
        size_limit:
          type: integer
          title: Size Limit
      type: object
      required:
        - mimetype
        - size_limit
      title: AcceptedFileType
    AccessToken:
      properties:
        access_token:
          type: string
          title: Access Token
        token_type:
          type: string
          title: Token Type
      type: object
      required:
        - access_token
        - token_type
      title: AccessToken
    AddSpaceMemberRequest:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        role:
          $ref: '#/components/schemas/SpaceRole'
      type: object
      required:
        - id
        - role
      title: AddSpaceMemberRequest
    AdditionalField:
      properties:
        type:
          $ref: '#/components/schemas/WizardType'
        value:
          items:
            additionalProperties:
              type: string
              format: uuid
            type: object
          type: array
          title: Value
      type: object
      required:
        - type
        - value
      title: AdditionalField
    AllowedOriginCreate:
      properties:
        url:
          type: string
          title: Url
        tenant_id:
          type: string
          format: uuid
          title: Tenant Id
      type: object
      required:
        - url
        - tenant_id
      title: AllowedOriginCreate
    AllowedOriginInDB:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        url:
          type: string
          title: Url
        tenant_id:
          type: string
          format: uuid
          title: Tenant Id
      type: object
      required:
        - id
        - url
        - tenant_id
      title: AllowedOriginInDB
    AllowedOriginPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        url:
          type: string
          title: Url
      type: object
      required:
        - id
        - url
      title: AllowedOriginPublic
    ApiKey:
      properties:
        truncated_key:
          type: string
          title: Truncated Key
        key:
          type: string
          title: Key
      type: object
      required:
        - truncated_key
        - key
      title: ApiKey
    ApiKeyInDB:
      properties:
        truncated_key:
          type: string
          title: Truncated Key
        key:
          type: string
          title: Key
        user_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: User Id
        assistant_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Assistant Id
      type: object
      required:
        - truncated_key
        - key
        - user_id
        - assistant_id
      title: ApiKeyInDB
    AppInTemplatePublic:
      properties:
        name:
          type: string
          title: Name
        completion_model:
          anyOf:
            - $ref: '#/components/schemas/CompletionModelPublicAppTemplate'
            - type: 'null'
        completion_model_kwargs:
          type: object
          title: Completion Model Kwargs
        prompt:
          anyOf:
            - $ref: '#/components/schemas/PromptPublicAppTemplate'
            - type: 'null'
        input_description:
          anyOf:
            - type: string
            - type: 'null'
          title: Input Description
        input_type:
          type: string
          title: Input Type
      type: object
      required:
        - name
        - completion_model
        - completion_model_kwargs
        - prompt
        - input_description
        - input_type
      title: AppInTemplatePublic
    AppPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        input_fields:
          items:
            $ref: '#/components/schemas/InputFieldPublic'
          type: array
          title: Input Fields
        attachments:
          items:
            $ref: '#/components/schemas/FilePublic'
          type: array
          title: Attachments
        prompt:
          anyOf:
            - $ref: '#/components/schemas/PromptPublic'
            - type: 'null'
        completion_model:
          $ref: '#/components/schemas/CompletionModelSparse'
        completion_model_kwargs:
          $ref: '#/components/schemas/ModelKwargs'
        allowed_attachments:
          $ref: '#/components/schemas/FileRestrictions'
        published:
          type: boolean
          title: Published
      type: object
      required:
        - id
        - name
        - description
        - input_fields
        - attachments
        - prompt
        - completion_model
        - completion_model_kwargs
        - allowed_attachments
        - published
      title: AppPublic
    AppRunInput:
      properties:
        files:
          items:
            $ref: '#/components/schemas/FilePublic'
          type: array
          title: Files
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      type: object
      required:
        - files
        - text
      title: AppRunInput
    AppRunPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        input:
          $ref: '#/components/schemas/AppRunInput'
        status:
          $ref: '#/components/schemas/Status'
        finished_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Finished At
        user:
          $ref: '#/components/schemas/UserSparse'
        output:
          anyOf:
            - type: string
            - type: 'null'
          title: Output
      type: object
      required:
        - id
        - input
        - status
        - finished_at
        - user
        - output
      title: AppRunPublic
    AppRunSparse:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        input:
          $ref: '#/components/schemas/AppRunInput'
        status:
          $ref: '#/components/schemas/Status'
        finished_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Finished At
        user:
          $ref: '#/components/schemas/UserSparse'
      type: object
      required:
        - id
        - input
        - status
        - finished_at
        - user
      title: AppRunSparse
    AppSparse:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        published:
          type: boolean
          title: Published
        user_id:
          type: string
          format: uuid
          title: User Id
      type: object
      required:
        - id
        - name
        - published
        - user_id
      title: AppSparse
    AppTemplateListPublic:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppTemplatePublic'
          type: array
          title: Items
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: AppTemplateListPublic
    AppTemplatePublic:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        category:
          type: string
          title: Category
        app:
          $ref: '#/components/schemas/AppInTemplatePublic'
        type:
          type: string
          enum:
            - app
          const: app
          title: Type
        wizard:
          $ref: '#/components/schemas/AppTemplateWizard'
      type: object
      required:
        - id
        - created_at
        - updated_at
        - name
        - description
        - category
        - app
        - type
        - wizard
      title: AppTemplatePublic
    AppTemplateWizard:
      properties:
        attachments:
          anyOf:
            - $ref: '#/components/schemas/TemplateWizard'
            - type: 'null'
        collections:
          anyOf:
            - $ref: '#/components/schemas/TemplateWizard'
            - type: 'null'
      type: object
      required:
        - attachments
        - collections
      title: AppTemplateWizard
    Applications:
      properties:
        assistants:
          $ref: '#/components/schemas/PaginatedPermissions_AssistantSparse_'
        services:
          $ref: '#/components/schemas/PaginatedPermissions_ServiceSparse_'
        apps:
          $ref: '#/components/schemas/PaginatedPermissions_AppSparse_'
      type: object
      required:
        - assistants
        - services
        - apps
      title: Applications
    AskAnalysis:
      properties:
        question:
          type: string
          title: Question
        completion_model_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Completion Model Id
        stream:
          type: boolean
          title: Stream
          default: false
      type: object
      required:
        - question
      title: AskAnalysis
    AskAssistant:
      properties:
        question:
          type: string
          title: Question
        files:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          maxItems: 5
          title: Files
          default: []
        stream:
          type: boolean
          title: Stream
          default: false
        tools:
          anyOf:
            - $ref: '#/components/schemas/UseTools'
            - type: 'null'
        version:
          type: integer
          enum:
            - 1
            - 2
          title: Version
          default: 1
      type: object
      required:
        - question
      title: AskAssistant
    AskResponse:
      properties:
        session_id:
          type: string
          format: uuid
          title: Session Id
        question:
          type: string
          title: Question
        files:
          items:
            $ref: '#/components/schemas/FilePublic'
          type: array
          title: Files
        answer:
          type: string
          title: Answer
        references:
          items:
            $ref: '#/components/schemas/InfoBlobAskAssistantPublic'
          type: array
          title: References
        model:
          anyOf:
            - $ref: '#/components/schemas/CompletionModelPublic'
            - type: 'null'
        tools:
          $ref: '#/components/schemas/UseTools'
      type: object
      required:
        - session_id
        - question
        - files
        - answer
        - references
        - tools
      title: AskResponse
    AssistantCreatePublic:
      properties:
        name:
          type: string
          title: Name
        completion_model_kwargs:
          allOf:
            - $ref: '#/components/schemas/ModelKwargs'
          default: {}
        logging_enabled:
          type: boolean
          title: Logging Enabled
          default: false
        prompt:
          anyOf:
            - $ref: '#/components/schemas/PromptCreate'
            - type: 'null'
        space_id:
          type: string
          format: uuid
          title: Space Id
        groups:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Groups
          default: []
        websites:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Websites
          default: []
        guardrail:
          anyOf:
            - $ref: '#/components/schemas/AssistantGuard'
            - type: 'null'
        completion_model:
          $ref: '#/components/schemas/ModelId'
      type: object
      required:
        - name
        - space_id
        - completion_model
      title: AssistantCreatePublic
    AssistantGuard:
      properties:
        guardrail_active:
          type: boolean
          title: Guardrail Active
          default: true
        guardrail_string:
          type: string
          title: Guardrail String
          default: ''
        on_fail_message:
          type: string
          title: On Fail Message
          default: Jag kan tyvärr inte svara på det. Fråga gärna något annat!
      type: object
      title: AssistantGuard
    AssistantInTemplatePublic:
      properties:
        name:
          type: string
          title: Name
        completion_model:
          anyOf:
            - $ref: '#/components/schemas/CompletionModelPublicAssistantTemplate'
            - type: 'null'
        completion_model_kwargs:
          type: object
          title: Completion Model Kwargs
          default: {}
        prompt:
          anyOf:
            - $ref: '#/components/schemas/PromptPublicAssistantTemplate'
            - type: 'null'
      type: object
      required:
        - name
        - completion_model
        - prompt
      title: AssistantInTemplatePublic
    AssistantMetadata:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
      type: object
      required:
        - id
        - created_at
      title: AssistantMetadata
    AssistantPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        prompt:
          anyOf:
            - $ref: '#/components/schemas/PromptPublic'
            - type: 'null'
        space_id:
          type: string
          format: uuid
          title: Space Id
        completion_model_kwargs:
          $ref: '#/components/schemas/ModelKwargs'
        logging_enabled:
          type: boolean
          title: Logging Enabled
        attachments:
          items:
            $ref: '#/components/schemas/FilePublic'
          type: array
          title: Attachments
        allowed_attachments:
          $ref: '#/components/schemas/FileRestrictions'
        groups:
          items:
            $ref: '#/components/schemas/GroupSparse'
          type: array
          title: Groups
        websites:
          items:
            $ref: '#/components/schemas/WebsiteSparse'
          type: array
          title: Websites
        completion_model:
          $ref: '#/components/schemas/CompletionModelSparse'
        published:
          type: boolean
          title: Published
          default: false
        user:
          $ref: '#/components/schemas/UserSparse'
        tools:
          $ref: '#/components/schemas/Tools'
      type: object
      required:
        - id
        - name
        - space_id
        - completion_model_kwargs
        - logging_enabled
        - attachments
        - allowed_attachments
        - groups
        - websites
        - completion_model
        - user
        - tools
      title: AssistantPublic
    AssistantSparse:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        completion_model_kwargs:
          allOf:
            - $ref: '#/components/schemas/ModelKwargs'
          default: {}
        logging_enabled:
          type: boolean
          title: Logging Enabled
          default: false
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        user_id:
          type: string
          format: uuid
          title: User Id
        published:
          type: boolean
          title: Published
          default: false
      type: object
      required:
        - id
        - name
        - user_id
      title: AssistantSparse
    AssistantTemplateListPublic:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AssistantTemplatePublic'
          type: array
          title: Items
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: AssistantTemplateListPublic
    AssistantTemplatePublic:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        category:
          type: string
          title: Category
        assistant:
          $ref: '#/components/schemas/AssistantInTemplatePublic'
        type:
          type: string
          enum:
            - assistant
          const: assistant
          title: Type
        wizard:
          $ref: '#/components/schemas/AssistantTemplateWizard'
      type: object
      required:
        - id
        - created_at
        - updated_at
        - name
        - description
        - category
        - assistant
        - type
        - wizard
      title: AssistantTemplatePublic
    AssistantTemplateWizard:
      properties:
        attachments:
          anyOf:
            - $ref: '#/components/schemas/TemplateWizard'
            - type: 'null'
        collections:
          anyOf:
            - $ref: '#/components/schemas/TemplateWizard'
            - type: 'null'
      type: object
      required:
        - attachments
        - collections
      title: AssistantTemplateWizard
    AttachmentLimits:
      properties:
        formats:
          items:
            $ref: '#/components/schemas/FormatLimit'
          type: array
          title: Formats
        max_in_question:
          type: integer
          title: Max In Question
      type: object
      required:
        - formats
        - max_in_question
      title: AttachmentLimits
    Body_Login_api_v1_users_login_token__post:
      properties:
        grant_type:
          anyOf:
            - type: string
              pattern: password
            - type: 'null'
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        scope:
          type: string
          title: Scope
          default: ''
        client_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Client Id
        client_secret:
          anyOf:
            - type: string
            - type: 'null'
          title: Client Secret
      type: object
      required:
        - username
        - password
      title: Body_Login_api_v1_users_login_token__post
    Body_upload_file_api_v1_files__post:
      properties:
        upload_file:
          type: string
          format: binary
          title: Upload File
      type: object
      required:
        - upload_file
      title: Body_upload_file_api_v1_files__post
    Body_upload_file_api_v1_groups__id__info_blobs_upload__post:
      properties:
        file:
          type: string
          format: binary
          title: File
      type: object
      required:
        - file
      title: Body_upload_file_api_v1_groups__id__info_blobs_upload__post
    CompletionModel:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        nickname:
          type: string
          title: Nickname
        family:
          $ref: '#/components/schemas/CompletionModelFamily'
        token_limit:
          type: integer
          title: Token Limit
        is_deprecated:
          type: boolean
          title: Is Deprecated
        nr_billion_parameters:
          anyOf:
            - type: integer
            - type: 'null'
          title: Nr Billion Parameters
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          $ref: '#/components/schemas/ModelStability'
        hosting:
          $ref: '#/components/schemas/ModelHostingLocation'
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        deployment_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Deployment Name
        org:
          anyOf:
            - $ref: '#/components/schemas/Orgs'
            - type: 'null'
        vision:
          type: boolean
          title: Vision
        is_org_enabled:
          type: boolean
          title: Is Org Enabled
          default: false
      type: object
      required:
        - id
        - name
        - nickname
        - family
        - token_limit
        - is_deprecated
        - stability
        - hosting
        - vision
      title: CompletionModel
    CompletionModelFamily:
      type: string
      enum:
        - openai
        - mistral
        - vllm
        - claude
        - azure
      title: CompletionModelFamily
    CompletionModelPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        nickname:
          type: string
          title: Nickname
        family:
          $ref: '#/components/schemas/CompletionModelFamily'
        token_limit:
          type: integer
          title: Token Limit
        is_deprecated:
          type: boolean
          title: Is Deprecated
        nr_billion_parameters:
          anyOf:
            - type: integer
            - type: 'null'
          title: Nr Billion Parameters
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          $ref: '#/components/schemas/ModelStability'
        hosting:
          $ref: '#/components/schemas/ModelHostingLocation'
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        deployment_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Deployment Name
        org:
          anyOf:
            - $ref: '#/components/schemas/Orgs'
            - type: 'null'
        vision:
          type: boolean
          title: Vision
        is_org_enabled:
          type: boolean
          title: Is Org Enabled
          default: false
        can_access:
          type: boolean
          title: Can Access
          default: false
        is_locked:
          type: boolean
          title: Is Locked
          default: true
      type: object
      required:
        - id
        - name
        - nickname
        - family
        - token_limit
        - is_deprecated
        - stability
        - hosting
        - vision
      title: CompletionModelPublic
    CompletionModelPublicAppTemplate:
      properties:
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
        - id
      title: CompletionModelPublicAppTemplate
    CompletionModelPublicAssistantTemplate:
      properties:
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
        - id
      title: CompletionModelPublicAssistantTemplate
    CompletionModelSparse:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        nickname:
          type: string
          title: Nickname
        family:
          $ref: '#/components/schemas/CompletionModelFamily'
        token_limit:
          type: integer
          title: Token Limit
        is_deprecated:
          type: boolean
          title: Is Deprecated
        nr_billion_parameters:
          anyOf:
            - type: integer
            - type: 'null'
          title: Nr Billion Parameters
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          $ref: '#/components/schemas/ModelStability'
        hosting:
          $ref: '#/components/schemas/ModelHostingLocation'
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        deployment_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Deployment Name
        org:
          anyOf:
            - $ref: '#/components/schemas/Orgs'
            - type: 'null'
        vision:
          type: boolean
          title: Vision
      type: object
      required:
        - id
        - name
        - nickname
        - family
        - token_limit
        - is_deprecated
        - stability
        - hosting
        - vision
      title: CompletionModelSparse
    CompletionModelUpdateFlags:
      properties:
        is_org_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Org Enabled
          default: false
      type: object
      title: CompletionModelUpdateFlags
    Counts:
      properties:
        assistants:
          type: integer
          title: Assistants
        sessions:
          type: integer
          title: Sessions
        questions:
          type: integer
          title: Questions
      type: object
      required:
        - assistants
        - sessions
        - questions
      title: Counts
    CrawlRunPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        pages_crawled:
          anyOf:
            - type: integer
            - type: 'null'
          title: Pages Crawled
        files_downloaded:
          anyOf:
            - type: integer
            - type: 'null'
          title: Files Downloaded
        pages_failed:
          anyOf:
            - type: integer
            - type: 'null'
          title: Pages Failed
        files_failed:
          anyOf:
            - type: integer
            - type: 'null'
          title: Files Failed
        status:
          anyOf:
            - $ref: '#/components/schemas/Status'
            - type: 'null'
          default: queued
        result_location:
          anyOf:
            - type: string
            - type: 'null'
          title: Result Location
        finished_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Finished At
      type: object
      required:
        - id
      title: CrawlRunPublic
    CrawlRunSparse:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        pages_crawled:
          anyOf:
            - type: integer
            - type: 'null'
          title: Pages Crawled
        files_downloaded:
          anyOf:
            - type: integer
            - type: 'null'
          title: Files Downloaded
        pages_failed:
          anyOf:
            - type: integer
            - type: 'null'
          title: Pages Failed
        files_failed:
          anyOf:
            - type: integer
            - type: 'null'
          title: Files Failed
        status:
          anyOf:
            - $ref: '#/components/schemas/Status'
            - type: 'null'
          default: queued
        result_location:
          anyOf:
            - type: string
            - type: 'null'
          title: Result Location
        finished_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Finished At
      type: object
      required:
        - id
      title: CrawlRunSparse
    CrawlType:
      type: string
      enum:
        - crawl
        - sitemap
      title: CrawlType
    CreateAndImportSpaceRequest:
      properties:
        name:
          type: string
          title: Name
        embedding_model:
          $ref: '#/components/schemas/ModelId'
        assistants:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Assistants
          default: []
        groups:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Groups
          default: []
        websites:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Websites
          default: []
        members:
          items:
            $ref: '#/components/schemas/AddSpaceMemberRequest'
          type: array
          title: Members
          default: []
      type: object
      required:
        - name
        - embedding_model
      title: CreateAndImportSpaceRequest
    CreateGroupRequest:
      properties:
        name:
          type: string
          title: Name
        embedding_model:
          $ref: '#/components/schemas/ModelId'
      type: object
      required:
        - name
        - embedding_model
      title: CreateGroupRequest
    CreateSpaceAppRequest:
      properties:
        name:
          type: string
          title: Name
        from_template:
          anyOf:
            - $ref: '#/components/schemas/TemplateCreate'
            - type: 'null'
      type: object
      required:
        - name
      title: CreateSpaceAppRequest
    CreateSpaceAssistantRequest:
      properties:
        name:
          type: string
          title: Name
        from_template:
          anyOf:
            - $ref: '#/components/schemas/TemplateCreate'
            - type: 'null'
      type: object
      required:
        - name
      title: CreateSpaceAssistantRequest
    CreateSpaceGroupsRequest:
      properties:
        name:
          type: string
          title: Name
        embedding_model:
          anyOf:
            - $ref: '#/components/schemas/ModelId'
            - type: 'null'
      type: object
      required:
        - name
      title: CreateSpaceGroupsRequest
    CreateSpaceGroupsResponse:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        embedding_model:
          anyOf:
            - $ref: '#/components/schemas/EmbeddingModelSparse'
            - type: 'null'
        user:
          $ref: '#/components/schemas/UserSparse'
        metadata:
          $ref: '#/components/schemas/GroupMetadata'
        published:
          type: boolean
          title: Published
      type: object
      required:
        - id
        - name
        - embedding_model
        - user
        - metadata
        - published
      title: CreateSpaceGroupsResponse
    CreateSpaceRequest:
      properties:
        name:
          type: string
          title: Name
      type: object
      required:
        - name
      title: CreateSpaceRequest
    CreateSpaceServiceRequest:
      properties:
        name:
          type: string
          title: Name
      type: object
      required:
        - name
      title: CreateSpaceServiceRequest
    CreateSpaceServiceResponse:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        prompt:
          type: string
          title: Prompt
        completion_model_kwargs:
          $ref: '#/components/schemas/ModelKwargs'
        output_format:
          anyOf:
            - type: string
              enum:
                - json
                - list
                - boolean
            - type: 'null'
          title: Output Format
        json_schema:
          anyOf:
            - type: object
            - type: 'null'
          title: Json Schema
        groups:
          items:
            $ref: '#/components/schemas/GroupSparse'
          type: array
          title: Groups
        completion_model:
          anyOf:
            - $ref: '#/components/schemas/CompletionModelSparse'
            - type: 'null'
        published:
          type: boolean
          title: Published
          default: false
        user:
          $ref: '#/components/schemas/UserSparse'
      type: object
      required:
        - id
        - name
        - prompt
        - completion_model_kwargs
        - groups
        - completion_model
        - user
      title: CreateSpaceServiceResponse
    CreateSpaceWebsitesRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        url:
          type: string
          title: Url
        download_files:
          type: boolean
          title: Download Files
          default: false
        crawl_type:
          allOf:
            - $ref: '#/components/schemas/CrawlType'
          default: crawl
        update_interval:
          allOf:
            - $ref: '#/components/schemas/UpdateInterval'
          default: never
        embedding_model:
          anyOf:
            - $ref: '#/components/schemas/ModelId'
            - type: 'null'
      type: object
      required:
        - url
      title: CreateSpaceWebsitesRequest
    CreateSpaceWebsitesResponse:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        url:
          type: string
          title: Url
        download_files:
          type: boolean
          title: Download Files
        crawl_type:
          $ref: '#/components/schemas/CrawlType'
        update_interval:
          $ref: '#/components/schemas/UpdateInterval'
        embedding_model:
          anyOf:
            - $ref: '#/components/schemas/EmbeddingModelSparse'
            - type: 'null'
        latest_crawl:
          anyOf:
            - $ref: '#/components/schemas/CrawlRunPublic'
            - type: 'null'
        published:
          type: boolean
          title: Published
      type: object
      required:
        - id
        - url
        - download_files
        - crawl_type
        - update_interval
        - embedding_model
        - latest_crawl
        - published
      title: CreateSpaceWebsitesResponse
    CursorPaginatedResponse_SessionMetadataPublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/SessionMetadataPublic'
          type: array
          title: Items
          description: List of items returned in the response
        total_count:
          type: integer
          title: Total Count
        limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Limit
        next_cursor:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Next Cursor
        previous_cursor:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Previous Cursor
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - total_count
        - count
      title: CursorPaginatedResponse[SessionMetadataPublic]
    Dashboard:
      properties:
        spaces:
          $ref: '#/components/schemas/PaginatedResponse_SpaceDashboard_'
      type: object
      required:
        - spaces
      title: Dashboard
    DefaultAssistant:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        prompt:
          anyOf:
            - $ref: '#/components/schemas/PromptPublic'
            - type: 'null'
        space_id:
          type: string
          format: uuid
          title: Space Id
        completion_model_kwargs:
          $ref: '#/components/schemas/ModelKwargs'
        logging_enabled:
          type: boolean
          title: Logging Enabled
        attachments:
          items:
            $ref: '#/components/schemas/FilePublic'
          type: array
          title: Attachments
        allowed_attachments:
          $ref: '#/components/schemas/FileRestrictions'
        groups:
          items:
            $ref: '#/components/schemas/GroupSparse'
          type: array
          title: Groups
        websites:
          items:
            $ref: '#/components/schemas/WebsiteSparse'
          type: array
          title: Websites
        completion_model:
          anyOf:
            - $ref: '#/components/schemas/CompletionModelSparse'
            - type: 'null'
        published:
          type: boolean
          title: Published
          default: false
        user:
          $ref: '#/components/schemas/UserSparse'
        tools:
          $ref: '#/components/schemas/Tools'
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
      type: object
      required:
        - id
        - name
        - space_id
        - completion_model_kwargs
        - logging_enabled
        - attachments
        - allowed_attachments
        - groups
        - websites
        - user
        - tools
      title: DefaultAssistant
    DeleteGroupResponse:
      properties:
        name:
          type: string
          title: Name
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        embedding_model:
          $ref: '#/components/schemas/EmbeddingModelPublic'
        published:
          type: boolean
          title: Published
        deletion_info:
          $ref: '#/components/schemas/DeletionInfo'
      type: object
      required:
        - name
        - id
        - embedding_model
        - published
        - deletion_info
      title: DeleteGroupResponse
    DeleteResponse:
      properties:
        success:
          type: boolean
          title: Success
      type: object
      required:
        - success
      title: DeleteResponse
    DeletionInfo:
      properties:
        success:
          type: boolean
          title: Success
      type: object
      required:
        - success
      title: DeletionInfo
    EmbeddingModel:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        family:
          $ref: '#/components/schemas/EmbeddingModelFamily'
        is_deprecated:
          type: boolean
          title: Is Deprecated
        open_source:
          type: boolean
          title: Open Source
        dimensions:
          anyOf:
            - type: integer
            - type: 'null'
          title: Dimensions
        max_input:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Input
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          $ref: '#/components/schemas/ModelStability'
        hosting:
          $ref: '#/components/schemas/ModelHostingLocation'
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        org:
          anyOf:
            - $ref: '#/components/schemas/Orgs'
            - type: 'null'
        is_org_enabled:
          type: boolean
          title: Is Org Enabled
          default: false
      type: object
      required:
        - id
        - name
        - family
        - is_deprecated
        - open_source
        - stability
        - hosting
      title: EmbeddingModel
    EmbeddingModelFamily:
      type: string
      enum:
        - openai
        - mini_lm
        - e5
      title: EmbeddingModelFamily
    EmbeddingModelPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        family:
          $ref: '#/components/schemas/EmbeddingModelFamily'
        is_deprecated:
          type: boolean
          title: Is Deprecated
        open_source:
          type: boolean
          title: Open Source
        dimensions:
          anyOf:
            - type: integer
            - type: 'null'
          title: Dimensions
        max_input:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Input
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          $ref: '#/components/schemas/ModelStability'
        hosting:
          $ref: '#/components/schemas/ModelHostingLocation'
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        org:
          anyOf:
            - $ref: '#/components/schemas/Orgs'
            - type: 'null'
        is_org_enabled:
          type: boolean
          title: Is Org Enabled
          default: false
        can_access:
          type: boolean
          title: Can Access
          default: false
        is_locked:
          type: boolean
          title: Is Locked
          default: true
      type: object
      required:
        - id
        - name
        - family
        - is_deprecated
        - open_source
        - stability
        - hosting
      title: EmbeddingModelPublic
    EmbeddingModelPublicBase:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        family:
          $ref: '#/components/schemas/EmbeddingModelFamily'
        is_deprecated:
          type: boolean
          title: Is Deprecated
        open_source:
          type: boolean
          title: Open Source
        dimensions:
          anyOf:
            - type: integer
            - type: 'null'
          title: Dimensions
        max_input:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Input
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          $ref: '#/components/schemas/ModelStability'
        hosting:
          $ref: '#/components/schemas/ModelHostingLocation'
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        org:
          anyOf:
            - $ref: '#/components/schemas/Orgs'
            - type: 'null'
      type: object
      required:
        - id
        - name
        - family
        - is_deprecated
        - open_source
        - stability
        - hosting
      title: EmbeddingModelPublicBase
    EmbeddingModelSparse:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        family:
          $ref: '#/components/schemas/EmbeddingModelFamily'
        is_deprecated:
          type: boolean
          title: Is Deprecated
        open_source:
          type: boolean
          title: Open Source
        dimensions:
          anyOf:
            - type: integer
            - type: 'null'
          title: Dimensions
        max_input:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Input
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          $ref: '#/components/schemas/ModelStability'
        hosting:
          $ref: '#/components/schemas/ModelHostingLocation'
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        org:
          anyOf:
            - $ref: '#/components/schemas/Orgs'
            - type: 'null'
      type: object
      required:
        - id
        - name
        - family
        - is_deprecated
        - open_source
        - stability
        - hosting
      title: EmbeddingModelSparse
    EmbeddingModelUpdateFlags:
      properties:
        is_org_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Org Enabled
          default: false
      type: object
      title: EmbeddingModelUpdateFlags
    ErrorCodes:
      type: integer
      enum:
        - 9000
        - 9001
        - 9002
        - 9003
        - 9004
        - 9005
        - 9006
        - 9007
        - 9008
        - 9009
        - 9010
        - 9011
        - 9012
        - 9013
        - 9014
        - 9015
        - 9016
        - 9017
        - 9018
        - 9019
        - 9020
        - 9021
      title: ErrorCodes
    FilePublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        mimetype:
          type: string
          title: Mimetype
        size:
          type: integer
          title: Size
      type: object
      required:
        - id
        - name
        - mimetype
        - size
      title: FilePublic
    FileRestrictions:
      properties:
        accepted_file_types:
          items:
            $ref: '#/components/schemas/AcceptedFileType'
          type: array
          title: Accepted File Types
        limit:
          $ref: '#/components/schemas/Limit'
      type: object
      required:
        - accepted_file_types
        - limit
      title: FileRestrictions
    FormatLimit:
      properties:
        mimetype:
          type: string
          title: Mimetype
        size:
          type: integer
          title: Size
        extensions:
          items:
            type: string
          type: array
          title: Extensions
        vision:
          type: boolean
          title: Vision
      type: object
      required:
        - mimetype
        - size
        - extensions
        - vision
      title: FormatLimit
    GeneralError:
      properties:
        message:
          type: string
          title: Message
        intric_error_code:
          $ref: '#/components/schemas/ErrorCodes'
      type: object
      required:
        - message
        - intric_error_code
      title: GeneralError
    GetModelsResponse:
      properties:
        completion_models:
          items:
            $ref: '#/components/schemas/CompletionModelPublic'
          type: array
          title: Completion Models
        embedding_models:
          items:
            $ref: '#/components/schemas/EmbeddingModelPublic'
          type: array
          title: Embedding Models
      type: object
      required:
        - completion_models
        - embedding_models
      title: GetModelsResponse
    GroupMetadata:
      properties:
        num_info_blobs:
          type: integer
          title: Num Info Blobs
      type: object
      required:
        - num_info_blobs
      title: GroupMetadata
    GroupPublicBase:
      properties:
        name:
          type: string
          title: Name
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
        - name
        - id
      title: GroupPublicBase
    GroupPublicWithMetadata:
      properties:
        name:
          type: string
          title: Name
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        embedding_model:
          $ref: '#/components/schemas/EmbeddingModelPublic'
        published:
          type: boolean
          title: Published
        metadata:
          $ref: '#/components/schemas/GroupMetadata'
        user:
          $ref: '#/components/schemas/UserPublicBase'
      type: object
      required:
        - name
        - id
        - embedding_model
        - published
        - metadata
        - user
      title: GroupPublicWithMetadata
    GroupSparse:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        metadata:
          $ref: '#/components/schemas/GroupMetadata'
        user_id:
          type: string
          format: uuid
          title: User Id
        embedding_model:
          $ref: '#/components/schemas/IdAndName'
        published:
          type: boolean
          title: Published
      type: object
      required:
        - id
        - name
        - metadata
        - user_id
        - embedding_model
        - published
      title: GroupSparse
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    IdAndName:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
      type: object
      required:
        - id
        - name
      title: IdAndName
    InfoBlobAddPublic:
      properties:
        text:
          type: string
          title: Text
        metadata:
          allOf:
            - $ref: '#/components/schemas/InfoBlobMetadataUpsertPublic'
      type: object
      required:
        - text
      title: InfoBlobAddPublic
    InfoBlobAskAssistantPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        metadata:
          $ref: '#/components/schemas/InfoBlobMetadata'
        group_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Group Id
        website_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Website Id
        score:
          type: number
          title: Score
      type: object
      required:
        - id
        - metadata
        - score
      title: InfoBlobAskAssistantPublic
    InfoBlobLimits:
      properties:
        formats:
          items:
            $ref: '#/components/schemas/FormatLimit'
          type: array
          title: Formats
      type: object
      required:
        - formats
      title: InfoBlobLimits
    InfoBlobMetadata:
      properties:
        url:
          anyOf:
            - type: string
            - type: 'null'
          title: Url
        title:
          anyOf:
            - type: string
            - type: 'null'
          title: Title
        embedding_model_id:
          type: string
          format: uuid
          title: Embedding Model Id
        size:
          type: integer
          title: Size
      type: object
      required:
        - embedding_model_id
        - size
      title: InfoBlobMetadata
    InfoBlobMetadataUpsertPublic:
      properties:
        url:
          anyOf:
            - type: string
            - type: 'null'
          title: Url
        title:
          anyOf:
            - type: string
            - type: 'null'
          title: Title
      type: object
      title: InfoBlobMetadataUpsertPublic
    InfoBlobPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        metadata:
          $ref: '#/components/schemas/InfoBlobMetadata'
        group_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Group Id
        website_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Website Id
        text:
          type: string
          title: Text
      type: object
      required:
        - id
        - metadata
        - text
      title: InfoBlobPublic
    InfoBlobPublicNoText:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        metadata:
          $ref: '#/components/schemas/InfoBlobMetadata'
        group_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Group Id
        website_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Website Id
      type: object
      required:
        - id
        - metadata
      title: InfoBlobPublicNoText
    InfoBlobUpdatePublic:
      properties:
        metadata:
          $ref: '#/components/schemas/InfoBlobMetadataUpsertPublic'
      type: object
      required:
        - metadata
      title: InfoBlobUpdatePublic
    InfoBlobUpsertRequest:
      properties:
        info_blobs:
          items:
            $ref: '#/components/schemas/InfoBlobAddPublic'
          type: array
          title: Info Blobs
      type: object
      required:
        - info_blobs
      title: InfoBlobUpsertRequest
    InputField:
      properties:
        type:
          $ref: '#/components/schemas/InputFieldType'
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
      type: object
      required:
        - type
      title: InputField
    InputFieldPublic:
      properties:
        accepted_file_types:
          items:
            $ref: '#/components/schemas/AcceptedFileType'
          type: array
          title: Accepted File Types
        limit:
          $ref: '#/components/schemas/Limit'
        type:
          $ref: '#/components/schemas/InputFieldType'
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
      type: object
      required:
        - accepted_file_types
        - limit
        - type
      title: InputFieldPublic
    InputFieldType:
      type: string
      enum:
        - text-field
        - text-upload
        - audio-upload
        - audio-recorder
        - image-upload
      title: InputFieldType
    JobPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        status:
          $ref: '#/components/schemas/Status'
        task:
          $ref: '#/components/schemas/Task'
        result_location:
          anyOf:
            - type: string
            - type: 'null'
          title: Result Location
        finished_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Finished At
      type: object
      required:
        - id
        - status
        - task
      title: JobPublic
    Knowledge:
      properties:
        groups:
          $ref: '#/components/schemas/PaginatedPermissions_GroupSparse_'
        websites:
          $ref: '#/components/schemas/PaginatedPermissions_WebsiteSparse_'
      type: object
      required:
        - groups
        - websites
      title: Knowledge
    Limit:
      properties:
        max_files:
          type: integer
          title: Max Files
        max_size:
          type: integer
          title: Max Size
      type: object
      required:
        - max_files
        - max_size
      title: Limit
    Limits:
      properties:
        info_blobs:
          $ref: '#/components/schemas/InfoBlobLimits'
        attachments:
          $ref: '#/components/schemas/AttachmentLimits'
      type: object
      required:
        - info_blobs
        - attachments
      title: Limits
    LoggingDetailsPublic:
      properties:
        context:
          anyOf:
            - type: string
            - type: 'null'
          title: Context
        model_kwargs:
          type: object
          title: Model Kwargs
        json_body:
          title: Json Body
      type: object
      required:
        - model_kwargs
        - json_body
      title: LoggingDetailsPublic
    Message:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        question:
          type: string
          title: Question
        answer:
          type: string
          title: Answer
        completion_model:
          anyOf:
            - $ref: '#/components/schemas/CompletionModel'
            - type: 'null'
        references:
          items:
            $ref: '#/components/schemas/InfoBlobPublicNoText'
          type: array
          title: References
        files:
          items:
            $ref: '#/components/schemas/FilePublic'
          type: array
          title: Files
        tools:
          $ref: '#/components/schemas/UseTools'
      type: object
      required:
        - id
        - question
        - answer
        - references
        - files
        - tools
      title: Message
    MessageLogging:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        question:
          type: string
          title: Question
        answer:
          type: string
          title: Answer
        completion_model:
          anyOf:
            - $ref: '#/components/schemas/CompletionModel'
            - type: 'null'
        references:
          items:
            $ref: '#/components/schemas/InfoBlobPublicNoText'
          type: array
          title: References
        files:
          items:
            $ref: '#/components/schemas/FilePublic'
          type: array
          title: Files
        tools:
          $ref: '#/components/schemas/UseTools'
        logging_details:
          $ref: '#/components/schemas/LoggingDetailsPublic'
      type: object
      required:
        - id
        - question
        - answer
        - references
        - files
        - tools
        - logging_details
      title: MessageLogging
    MetadataStatistics:
      properties:
        assistants:
          items:
            $ref: '#/components/schemas/AssistantMetadata'
          type: array
          title: Assistants
        sessions:
          items:
            $ref: '#/components/schemas/SessionMetadata'
          type: array
          title: Sessions
        questions:
          items:
            $ref: '#/components/schemas/QuestionMetadata'
          type: array
          title: Questions
      type: object
      required:
        - assistants
        - sessions
        - questions
      title: MetadataStatistics
    ModelHostingLocation:
      type: string
      enum:
        - usa
        - eu
        - swe
      title: ModelHostingLocation
    ModelId:
      properties:
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
        - id
      title: ModelId
    ModelKwargs:
      properties:
        temperature:
          anyOf:
            - type: number
            - type: 'null'
          title: Temperature
        top_p:
          anyOf:
            - type: number
            - type: 'null'
          title: Top P
      type: object
      title: ModelKwargs
    ModelStability:
      type: string
      enum:
        - stable
        - experimental
      title: ModelStability
    ModuleBase:
      properties:
        name:
          anyOf:
            - $ref: '#/components/schemas/Modules'
            - type: string
          title: Name
      type: object
      required:
        - name
      title: ModuleBase
    ModuleInDB:
      properties:
        name:
          anyOf:
            - $ref: '#/components/schemas/Modules'
            - type: string
          title: Name
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
        - name
        - id
      title: ModuleInDB
    Modules:
      type: string
      enum:
        - eu_hosting
        - intric-applications
      title: Modules
      description: Any change to these enums will result in database changes
    OIDCProviders:
      type: string
      enum:
        - mobility_guard
      const: mobility_guard
      title: OIDCProviders
    OpenIdConnectLogin:
      properties:
        code:
          type: string
          title: Code
        code_verifier:
          type: string
          title: Code Verifier
        redirect_uri:
          type: string
          title: Redirect Uri
        client_id:
          type: string
          title: Client Id
          default: intric
        grant_type:
          type: string
          title: Grant Type
          default: authorization_code
        scope:
          type: string
          title: Scope
          default: openid
        nonce:
          type: string
          title: Nonce
      type: object
      required:
        - code
        - code_verifier
        - redirect_uri
      title: OpenIdConnectLogin
    Orgs:
      type: string
      enum:
        - OpenAI
        - Meta
        - Microsoft
        - Anthropic
      title: Orgs
    PaginatedPermissions_AppSparse_:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        items:
          items:
            $ref: '#/components/schemas/AppSparse'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedPermissions[AppSparse]
    PaginatedPermissions_AssistantSparse_:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        items:
          items:
            $ref: '#/components/schemas/AssistantSparse'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedPermissions[AssistantSparse]
    PaginatedPermissions_GroupSparse_:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        items:
          items:
            $ref: '#/components/schemas/GroupSparse'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedPermissions[GroupSparse]
    PaginatedPermissions_ServiceSparse_:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        items:
          items:
            $ref: '#/components/schemas/ServiceSparse'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedPermissions[ServiceSparse]
    PaginatedPermissions_SpaceMember_:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        items:
          items:
            $ref: '#/components/schemas/SpaceMember'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedPermissions[SpaceMember]
    PaginatedPermissions_WebsiteSparse_:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        items:
          items:
            $ref: '#/components/schemas/WebsiteSparse'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedPermissions[WebsiteSparse]
    PaginatedResponse_AllowedOriginInDB_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AllowedOriginInDB'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[AllowedOriginInDB]
    PaginatedResponse_AllowedOriginPublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AllowedOriginPublic'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[AllowedOriginPublic]
    PaginatedResponse_AppRunSparse_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppRunSparse'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[AppRunSparse]
    PaginatedResponse_AssistantPublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AssistantPublic'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[AssistantPublic]
    PaginatedResponse_CompletionModelPublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/CompletionModelPublic'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[CompletionModelPublic]
    PaginatedResponse_CrawlRunPublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/CrawlRunPublic'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[CrawlRunPublic]
    PaginatedResponse_EmbeddingModelPublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/EmbeddingModelPublic'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[EmbeddingModelPublic]
    PaginatedResponse_EmbeddingModel_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/EmbeddingModel'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[EmbeddingModel]
    PaginatedResponse_FilePublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/FilePublic'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[FilePublic]
    PaginatedResponse_GroupPublicWithMetadata_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/GroupPublicWithMetadata'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[GroupPublicWithMetadata]
    PaginatedResponse_InfoBlobPublicNoText_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/InfoBlobPublicNoText'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[InfoBlobPublicNoText]
    PaginatedResponse_InfoBlobPublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/InfoBlobPublic'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[InfoBlobPublic]
    PaginatedResponse_JobPublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/JobPublic'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[JobPublic]
    PaginatedResponse_Message_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Message'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[Message]
    PaginatedResponse_ModuleInDB_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ModuleInDB'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[ModuleInDB]
    PaginatedResponse_PredefinedRolePublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/PredefinedRolePublic'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[PredefinedRolePublic]
    PaginatedResponse_PromptSparse_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/PromptSparse'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[PromptSparse]
    PaginatedResponse_RolePublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/RolePublic'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[RolePublic]
    PaginatedResponse_SemanticSearchResponse_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/SemanticSearchResponse'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[SemanticSearchResponse]
    PaginatedResponse_ServicePublicWithUser_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ServicePublicWithUser'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[ServicePublicWithUser]
    PaginatedResponse_ServiceRun_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ServiceRun'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[ServiceRun]
    PaginatedResponse_SpaceDashboard_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/SpaceDashboard'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[SpaceDashboard]
    PaginatedResponse_SpaceSparse_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/SpaceSparse'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[SpaceSparse]
    PaginatedResponse_TenantInDB_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/TenantInDB'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[TenantInDB]
    PaginatedResponse_UserAdminView_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserAdminView'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[UserAdminView]
    PaginatedResponse_UserGroupPublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserGroupPublic'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[UserGroupPublic]
    PaginatedResponse_UserInDB_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserInDB'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[UserInDB]
    PaginatedResponse_UserSparse_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserSparse'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[UserSparse]
    PaginatedResponse_WebsitePublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/WebsitePublic'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[WebsitePublic]
    PaginatedResponse_WidgetPublic_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/WidgetPublic'
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[WidgetPublic]
    PaginatedResponse_str_:
      properties:
        items:
          items:
            type: string
          type: array
          title: Items
          description: List of items returned in the response
        count:
          type: integer
          title: Count
          description: Number of items returned in the response
          readOnly: true
      type: object
      required:
        - items
        - count
      title: PaginatedResponse[str]
    PartialAppUpdateRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        input_fields:
          anyOf:
            - items:
                $ref: '#/components/schemas/InputField'
              type: array
            - type: 'null'
          title: Input Fields
        attachments:
          anyOf:
            - items:
                $ref: '#/components/schemas/ModelId'
              type: array
            - type: 'null'
          title: Attachments
        prompt:
          anyOf:
            - $ref: '#/components/schemas/PromptCreate'
            - type: 'null'
        completion_model:
          anyOf:
            - $ref: '#/components/schemas/ModelId'
            - type: 'null'
        completion_model_kwargs:
          anyOf:
            - $ref: '#/components/schemas/ModelKwargs'
            - type: 'null'
      type: object
      title: PartialAppUpdateRequest
    PartialAssistantUpdatePublic:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        completion_model_kwargs:
          anyOf:
            - $ref: '#/components/schemas/ModelKwargs'
            - type: 'null'
        logging_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Logging Enabled
        prompt:
          anyOf:
            - $ref: '#/components/schemas/PromptCreate'
            - type: 'null'
        space_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Space Id
        groups:
          anyOf:
            - items:
                $ref: '#/components/schemas/ModelId'
              type: array
            - type: 'null'
          title: Groups
        websites:
          anyOf:
            - items:
                $ref: '#/components/schemas/ModelId'
              type: array
            - type: 'null'
          title: Websites
        guardrail:
          anyOf:
            - $ref: '#/components/schemas/AssistantGuard'
            - type: 'null'
        completion_model:
          anyOf:
            - $ref: '#/components/schemas/ModelId'
            - type: 'null'
        attachments:
          anyOf:
            - items:
                $ref: '#/components/schemas/ModelId'
              type: array
            - type: 'null'
          title: Attachments
      type: object
      title: PartialAssistantUpdatePublic
    PartialGroupUpdatePublic:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
      type: object
      title: PartialGroupUpdatePublic
    PartialPropUserUpdate:
      properties:
        predefined_role:
          anyOf:
            - $ref: '#/components/schemas/ModelId'
            - type: 'null'
        state:
          anyOf:
            - $ref: '#/components/schemas/UserState'
            - type: 'null'
      type: object
      title: PartialPropUserUpdate
    PartialServiceUpdatePublic:
      properties:
        output_format:
          anyOf:
            - type: string
              enum:
                - json
                - list
                - boolean
            - type: 'null'
          title: Output Format
        json_schema:
          anyOf:
            - type: object
            - type: 'null'
          title: Json Schema
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        prompt:
          anyOf:
            - type: string
            - type: 'null'
          title: Prompt
        completion_model_kwargs:
          anyOf:
            - $ref: '#/components/schemas/ModelKwargs'
            - type: 'null'
        groups:
          anyOf:
            - items:
                $ref: '#/components/schemas/ModelId'
              type: array
            - type: 'null'
          title: Groups
        completion_model:
          anyOf:
            - $ref: '#/components/schemas/ModelId'
            - type: 'null'
      type: object
      title: PartialServiceUpdatePublic
    PartialUpdateSpaceRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        embedding_models:
          anyOf:
            - items:
                $ref: '#/components/schemas/ModelId'
              type: array
            - type: 'null'
          title: Embedding Models
        completion_models:
          anyOf:
            - items:
                $ref: '#/components/schemas/ModelId'
              type: array
            - type: 'null'
          title: Completion Models
      type: object
      title: PartialUpdateSpaceRequest
    PartialWebsiteUpdateRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        url:
          anyOf:
            - type: string
              maxLength: 2083
              minLength: 1
              format: uri
            - type: 'null'
          title: Url
        space_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Space Id
        download_files:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Download Files
        crawl_type:
          anyOf:
            - $ref: '#/components/schemas/CrawlType'
            - type: 'null'
        update_interval:
          anyOf:
            - $ref: '#/components/schemas/UpdateInterval'
            - type: 'null'
        embedding_model:
          anyOf:
            - $ref: '#/components/schemas/ModelId'
            - type: 'null'
      type: object
      title: PartialWebsiteUpdateRequest
    PartialWidgetUpdatePublic:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        title:
          anyOf:
            - type: string
            - type: 'null'
          title: Title
        bot_introduction:
          anyOf:
            - type: string
            - type: 'null'
          title: Bot Introduction
        color:
          anyOf:
            - type: string
              format: color
            - type: 'null'
          title: Color
        size:
          anyOf:
            - $ref: '#/components/schemas/Size'
            - type: 'null'
        assistant:
          anyOf:
            - $ref: '#/components/schemas/ModelId'
            - type: 'null'
      type: object
      title: PartialWidgetUpdatePublic
    Permission:
      type: string
      enum:
        - assistants
        - services
        - collections
        - insights
        - AI
        - editor
        - admin
        - websites
      title: Permission
    PermissionPublic:
      properties:
        name:
          $ref: '#/components/schemas/Permission'
        description:
          type: string
          title: Description
      type: object
      required:
        - name
        - description
      title: PermissionPublic
    PredefinedRoleInDB:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        name:
          type: string
          title: Name
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
          title: Permissions
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
        - name
        - permissions
        - id
      title: PredefinedRoleInDB
    PredefinedRolePublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        name:
          type: string
          title: Name
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
          title: Permissions
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
        - name
        - permissions
        - id
      title: PredefinedRolePublic
    PrivacyPolicy:
      properties:
        url:
          anyOf:
            - type: string
              maxLength: 2083
              minLength: 1
              format: uri
            - type: 'null'
          title: Url
      type: object
      title: PrivacyPolicy
    PromptCreate:
      properties:
        text:
          type: string
          title: Text
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
      type: object
      required:
        - text
      title: PromptCreate
    PromptPublic:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        is_selected:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Selected
        user:
          $ref: '#/components/schemas/UserSparse'
        text:
          type: string
          title: Text
      type: object
      required:
        - id
        - user
        - text
      title: PromptPublic
    PromptPublicAppTemplate:
      properties:
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      type: object
      required:
        - text
      title: PromptPublicAppTemplate
    PromptPublicAssistantTemplate:
      properties:
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      type: object
      required:
        - text
      title: PromptPublicAssistantTemplate
    PromptSparse:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        is_selected:
          type: boolean
          title: Is Selected
        user:
          $ref: '#/components/schemas/UserSparse'
      type: object
      required:
        - id
        - is_selected
        - user
      title: PromptSparse
    PropUserInvite:
      properties:
        predefined_role:
          anyOf:
            - $ref: '#/components/schemas/ModelId'
            - type: 'null'
        state:
          anyOf:
            - $ref: '#/components/schemas/UserState'
            - type: 'null'
        email:
          type: string
          format: email
          title: Email
      type: object
      required:
        - email
      title: PropUserInvite
    QuestionMetadata:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        assistant_id:
          type: string
          format: uuid
          title: Assistant Id
        session_id:
          type: string
          format: uuid
          title: Session Id
      type: object
      required:
        - id
        - created_at
        - assistant_id
        - session_id
      title: QuestionMetadata
    ResourcePermission:
      type: string
      enum:
        - read
        - create
        - edit
        - delete
        - add
        - remove
        - publish
      title: ResourcePermission
    RoleCreateRequest:
      properties:
        name:
          type: string
          title: Name
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
          title: Permissions
      type: object
      required:
        - name
        - permissions
      title: RoleCreateRequest
    RoleInDB:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
          title: Permissions
        tenant_id:
          type: string
          format: uuid
          title: Tenant Id
      type: object
      required:
        - id
        - name
        - permissions
        - tenant_id
      title: RoleInDB
    RolePublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
          title: Permissions
      type: object
      required:
        - id
        - name
        - permissions
      title: RolePublic
    RoleUpdateRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        permissions:
          anyOf:
            - items:
                $ref: '#/components/schemas/Permission'
              type: array
            - type: 'null'
          title: Permissions
      type: object
      title: RoleUpdateRequest
    RolesPaginatedResponse:
      properties:
        roles:
          $ref: '#/components/schemas/PaginatedResponse_RolePublic_'
        predefined_roles:
          $ref: '#/components/schemas/PaginatedResponse_PredefinedRolePublic_'
      type: object
      required:
        - roles
        - predefined_roles
      title: RolesPaginatedResponse
    RunAppRequest:
      properties:
        files:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Files
          default: []
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      type: object
      title: RunAppRequest
    RunService:
      properties:
        input:
          type: string
          title: Input
        files:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          maxItems: 5
          title: Files
          default: []
      type: object
      required:
        - input
      title: RunService
    SemanticSearchRequest:
      properties:
        search_string:
          type: string
          title: Search String
        num_chunks:
          type: integer
          title: Num Chunks
          default: 30
        autocut_cutoff:
          anyOf:
            - type: integer
            - type: 'null'
          title: Autocut Cutoff
          description: >-
            Experimental feature that tries to limit the amount of chunks to
            only the relevant ones, based on the score. Set to null (or omit
            completely) to not use this feature
      type: object
      required:
        - search_string
      title: SemanticSearchRequest
    SemanticSearchResponse:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        info_blob_id:
          type: string
          format: uuid
          title: Info Blob Id
        text:
          type: string
          title: Text
        score:
          type: number
          title: Score
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
        - id
        - info_blob_id
        - text
        - score
        - created_at
        - updated_at
      title: SemanticSearchResponse
    ServiceCreatePublic:
      properties:
        output_format:
          anyOf:
            - type: string
              enum:
                - json
                - list
                - boolean
            - type: 'null'
          title: Output Format
        json_schema:
          anyOf:
            - type: object
            - type: 'null'
          title: Json Schema
        name:
          type: string
          title: Name
        prompt:
          type: string
          title: Prompt
        completion_model_kwargs:
          anyOf:
            - $ref: '#/components/schemas/ModelKwargs'
            - type: 'null'
          default: {}
        groups:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Groups
          default: []
        completion_model:
          $ref: '#/components/schemas/ModelId'
      type: object
      required:
        - name
        - prompt
        - completion_model
      title: ServiceCreatePublic
    ServiceOutput:
      properties:
        output:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
          title: Output
        files:
          items:
            $ref: '#/components/schemas/FilePublic'
          type: array
          title: Files
          default: []
      type: object
      required:
        - output
      title: ServiceOutput
    ServicePublicWithUser:
      properties:
        output_format:
          anyOf:
            - type: string
              enum:
                - json
                - list
                - boolean
            - type: 'null'
          title: Output Format
        json_schema:
          anyOf:
            - type: object
            - type: 'null'
          title: Json Schema
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        prompt:
          type: string
          title: Prompt
        completion_model_kwargs:
          anyOf:
            - $ref: '#/components/schemas/ModelKwargs'
            - type: 'null'
        space_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Space Id
        published:
          type: boolean
          title: Published
        groups:
          items:
            $ref: '#/components/schemas/GroupPublicBase'
          type: array
          title: Groups
        completion_model:
          $ref: '#/components/schemas/CompletionModelPublic'
        user:
          $ref: '#/components/schemas/UserPublicBase'
      type: object
      required:
        - id
        - name
        - prompt
        - published
        - groups
        - completion_model
        - user
      title: ServicePublicWithUser
    ServiceRun:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        input:
          type: string
          title: Input
        output:
          anyOf:
            - type: object
            - items: {}
              type: array
            - type: string
          title: Output
        completion_model:
          $ref: '#/components/schemas/CompletionModelPublic'
        references:
          items:
            $ref: '#/components/schemas/InfoBlobPublic'
          type: array
          title: References
      type: object
      required:
        - id
        - input
        - output
        - completion_model
        - references
      title: ServiceRun
    ServiceSparse:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        output_format:
          anyOf:
            - type: string
              enum:
                - json
                - list
                - boolean
            - type: 'null'
          title: Output Format
        json_schema:
          anyOf:
            - type: object
            - type: 'null'
          title: Json Schema
        name:
          type: string
          title: Name
        prompt:
          type: string
          title: Prompt
        completion_model_kwargs:
          anyOf:
            - $ref: '#/components/schemas/ModelKwargs'
            - type: 'null'
          default: {}
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        user_id:
          type: string
          format: uuid
          title: User Id
        published:
          type: boolean
          title: Published
          default: false
      type: object
      required:
        - id
        - name
        - prompt
        - user_id
      title: ServiceSparse
    SessionFeedback:
      properties:
        value:
          type: integer
          enum:
            - -1
            - 1
          title: Value
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      type: object
      required:
        - value
      title: SessionFeedback
    SessionMetadata:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        assistant_id:
          type: string
          format: uuid
          title: Assistant Id
      type: object
      required:
        - id
        - created_at
        - assistant_id
      title: SessionMetadata
    SessionMetadataPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        name:
          type: string
          title: Name
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
        - name
        - id
      title: SessionMetadataPublic
    SessionPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        name:
          type: string
          title: Name
        id:
          type: string
          format: uuid
          title: Id
        messages:
          items:
            $ref: '#/components/schemas/Message'
          type: array
          title: Messages
          default: []
        feedback:
          anyOf:
            - $ref: '#/components/schemas/SessionFeedback'
            - type: 'null'
      type: object
      required:
        - name
        - id
      title: SessionPublic
    SettingsPublic:
      properties:
        chatbot_widget:
          type: object
          title: Chatbot Widget
          default: {}
      type: object
      title: SettingsPublic
    Size:
      type: string
      enum:
        - small
        - medium
        - large
      title: Size
    SpaceDashboard:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        personal:
          type: boolean
          title: Personal
        applications:
          $ref: '#/components/schemas/Applications'
      type: object
      required:
        - id
        - name
        - description
        - personal
        - applications
      title: SpaceDashboard
    SpaceMember:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        email:
          type: string
          format: email
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
        role:
          $ref: '#/components/schemas/SpaceRole'
      type: object
      required:
        - id
        - email
        - role
      title: SpaceMember
    SpacePublic:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        personal:
          type: boolean
          title: Personal
        applications:
          $ref: '#/components/schemas/Applications'
        embedding_models:
          items:
            $ref: '#/components/schemas/EmbeddingModelSparse'
          type: array
          title: Embedding Models
        completion_models:
          items:
            $ref: '#/components/schemas/CompletionModelSparse'
          type: array
          title: Completion Models
        knowledge:
          $ref: '#/components/schemas/Knowledge'
        members:
          $ref: '#/components/schemas/PaginatedPermissions_SpaceMember_'
        default_assistant:
          $ref: '#/components/schemas/DefaultAssistant'
      type: object
      required:
        - id
        - name
        - description
        - personal
        - applications
        - embedding_models
        - completion_models
        - knowledge
        - members
        - default_assistant
      title: SpacePublic
    SpaceRole:
      type: string
      enum:
        - admin
        - editor
        - viewer
      title: SpaceRole
    SpaceSparse:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        personal:
          type: boolean
          title: Personal
      type: object
      required:
        - id
        - name
        - description
        - personal
      title: SpaceSparse
    Status:
      type: string
      enum:
        - in progress
        - queued
        - complete
        - failed
        - not found
      title: Status
    Task:
      type: string
      enum:
        - upload_info_blob
        - transcription
        - crawl
        - embed_group
        - crawl_all_websites
        - run_app
      title: Task
    TemplateCreate:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        additional_fields:
          anyOf:
            - items:
                $ref: '#/components/schemas/AdditionalField'
              type: array
            - type: 'null'
          title: Additional Fields
      type: object
      required:
        - id
        - additional_fields
      title: TemplateCreate
    TemplateListPublic:
      properties:
        items:
          items:
            anyOf:
              - $ref: '#/components/schemas/AppTemplatePublic'
              - $ref: '#/components/schemas/AssistantTemplatePublic'
          type: array
          title: Items
        count:
          type: integer
          title: Count
          readOnly: true
      type: object
      required:
        - items
        - count
      title: TemplateListPublic
    TemplateWizard:
      properties:
        required:
          type: boolean
          title: Required
          default: false
        title:
          anyOf:
            - type: string
            - type: 'null'
          title: Title
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
      type: object
      title: TemplateWizard
    TenantBase:
      properties:
        name:
          type: string
          title: Name
        display_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Display Name
        quota_limit:
          type: integer
          title: Quota Limit
          description: Size in bytes. Default is 1 GB
          default: 1073741824
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
        zitadel_org_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Zitadel Org Id
        provisioning:
          type: boolean
          title: Provisioning
          default: false
      type: object
      required:
        - name
      title: TenantBase
    TenantInDB:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        privacy_policy:
          anyOf:
            - type: string
              maxLength: 2083
              minLength: 1
              format: uri
            - type: 'null'
          title: Privacy Policy
        name:
          type: string
          title: Name
        display_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Display Name
        quota_limit:
          type: integer
          title: Quota Limit
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
        zitadel_org_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Zitadel Org Id
        provisioning:
          type: boolean
          title: Provisioning
          default: false
        modules:
          items:
            $ref: '#/components/schemas/ModuleInDB'
          type: array
          title: Modules
          default: []
      type: object
      required:
        - id
        - name
        - quota_limit
      title: TenantInDB
    TenantPublic:
      properties:
        name:
          type: string
          title: Name
        display_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Display Name
        quota_limit:
          type: integer
          title: Quota Limit
          description: Size in bytes. Default is 1 GB
          default: 1073741824
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
        zitadel_org_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Zitadel Org Id
        provisioning:
          type: boolean
          title: Provisioning
          default: false
        privacy_policy:
          anyOf:
            - type: string
              maxLength: 2083
              minLength: 1
              format: uri
            - type: 'null'
          title: Privacy Policy
      type: object
      required:
        - name
      title: TenantPublic
    TenantUpdatePublic:
      properties:
        display_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Display Name
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
        zitadel_org_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Zitadel Org Id
        provisioning:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Provisioning
      type: object
      title: TenantUpdatePublic
    ToolAssistant:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        at-tag:
          type: string
          title: At-Tag
      type: object
      required:
        - id
        - at-tag
      title: ToolAssistant
    Tools:
      properties:
        assistants:
          items:
            $ref: '#/components/schemas/ToolAssistant'
          type: array
          title: Assistants
      type: object
      required:
        - assistants
      title: Tools
    TransferApplicationRequest:
      properties:
        target_space_id:
          type: string
          format: uuid
          title: Target Space Id
        move_resources:
          type: boolean
          title: Move Resources
          default: false
      type: object
      required:
        - target_space_id
      title: TransferApplicationRequest
    TransferRequest:
      properties:
        target_space_id:
          type: string
          format: uuid
          title: Target Space Id
      type: object
      required:
        - target_space_id
      title: TransferRequest
    UpdateInterval:
      type: string
      enum:
        - never
        - weekly
      title: UpdateInterval
    UpdateSpaceMemberRequest:
      properties:
        role:
          $ref: '#/components/schemas/SpaceRole'
      type: object
      required:
        - role
      title: UpdateSpaceMemberRequest
    UseTools:
      properties:
        assistants:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Assistants
      type: object
      required:
        - assistants
      title: UseTools
    UserAddAdmin:
      properties:
        email:
          type: string
          format: email
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
        password:
          anyOf:
            - type: string
              maxLength: 100
              minLength: 7
            - type: 'null'
          title: Password
        quota_limit:
          anyOf:
            - type: integer
              minimum: 1000
            - type: 'null'
          title: Quota Limit
          description: Size in bytes
        created_with:
          anyOf:
            - $ref: '#/components/schemas/OIDCProviders'
            - type: 'null'
          description: If intended to be used with a Open ID Provider
        roles:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Roles
          default: []
        predefined_roles:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Predefined Roles
          default: []
      type: object
      required:
        - email
      title: UserAddAdmin
    UserAddSuperAdmin:
      properties:
        email:
          type: string
          format: email
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
        password:
          anyOf:
            - type: string
              maxLength: 100
              minLength: 7
            - type: 'null'
          title: Password
        quota_limit:
          anyOf:
            - type: integer
              minimum: 1000
            - type: 'null'
          title: Quota Limit
          description: Size in bytes
        created_with:
          anyOf:
            - $ref: '#/components/schemas/OIDCProviders'
            - type: 'null'
          description: If intended to be used with a Open ID Provider
        roles:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Roles
          default: []
        predefined_roles:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Predefined Roles
          default: []
        tenant_id:
          type: string
          format: uuid
          title: Tenant Id
      type: object
      required:
        - email
        - tenant_id
      title: UserAddSuperAdmin
    UserAdminView:
      properties:
        email:
          type: string
          format: email
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        quota_used:
          type: integer
          title: Quota Used
          default: 0
        used_tokens:
          type: integer
          title: Used Tokens
        email_verified:
          type: boolean
          title: Email Verified
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        created_with:
          anyOf:
            - $ref: '#/components/schemas/OIDCProviders'
            - type: 'null'
        is_active:
          type: boolean
          title: Is Active
        state:
          $ref: '#/components/schemas/UserState'
        roles:
          items:
            $ref: '#/components/schemas/RolePublic'
          type: array
          title: Roles
        predefined_roles:
          items:
            $ref: '#/components/schemas/PredefinedRolePublic'
          type: array
          title: Predefined Roles
        user_groups:
          items:
            $ref: '#/components/schemas/UserGroupRead'
          type: array
          title: User Groups
      type: object
      required:
        - email
        - id
        - used_tokens
        - email_verified
        - quota_limit
        - created_with
        - is_active
        - state
        - roles
        - predefined_roles
        - user_groups
      title: UserAdminView
    UserCreated:
      properties:
        email:
          type: string
          format: email
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
        id:
          type: string
          format: uuid
          title: Id
        password:
          anyOf:
            - type: string
              maxLength: 100
              minLength: 7
            - type: 'null'
          title: Password
        salt:
          anyOf:
            - type: string
            - type: 'null'
          title: Salt
        used_tokens:
          type: integer
          title: Used Tokens
          default: 0
        email_verified:
          type: boolean
          title: Email Verified
          default: false
        is_active:
          type: boolean
          title: Is Active
          default: true
        state:
          $ref: '#/components/schemas/UserState'
        tenant_id:
          type: string
          format: uuid
          title: Tenant Id
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        created_with:
          anyOf:
            - $ref: '#/components/schemas/OIDCProviders'
            - type: 'null'
        roles:
          items:
            $ref: '#/components/schemas/RoleInDB'
          type: array
          title: Roles
          default: []
        predefined_roles:
          items:
            $ref: '#/components/schemas/PredefinedRoleInDB'
          type: array
          title: Predefined Roles
          default: []
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        user_groups:
          items:
            $ref: '#/components/schemas/UserGroupInDBRead'
          type: array
          title: User Groups
          default: []
        tenant:
          $ref: '#/components/schemas/TenantInDB'
        api_key:
          anyOf:
            - $ref: '#/components/schemas/ApiKey'
            - type: 'null'
        quota_used:
          type: integer
          title: Quota Used
          default: 0
        access_token:
          anyOf:
            - $ref: '#/components/schemas/AccessToken'
            - type: 'null'
        modules:
          items:
            type: string
          type: array
          title: Modules
          readOnly: true
        user_groups_ids:
          items:
            type: integer
          type: array
          uniqueItems: true
          title: User Groups Ids
          readOnly: true
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
          uniqueItems: true
          title: Permissions
          readOnly: true
      type: object
      required:
        - email
        - id
        - state
        - tenant_id
        - tenant
        - api_key
        - access_token
        - modules
        - user_groups_ids
        - permissions
      title: UserCreated
    UserCreatedAdminView:
      properties:
        email:
          type: string
          format: email
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        quota_used:
          type: integer
          title: Quota Used
          default: 0
        used_tokens:
          type: integer
          title: Used Tokens
        email_verified:
          type: boolean
          title: Email Verified
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        created_with:
          anyOf:
            - $ref: '#/components/schemas/OIDCProviders'
            - type: 'null'
        is_active:
          type: boolean
          title: Is Active
        state:
          $ref: '#/components/schemas/UserState'
        roles:
          items:
            $ref: '#/components/schemas/RolePublic'
          type: array
          title: Roles
        predefined_roles:
          items:
            $ref: '#/components/schemas/PredefinedRolePublic'
          type: array
          title: Predefined Roles
        user_groups:
          items:
            $ref: '#/components/schemas/UserGroupRead'
          type: array
          title: User Groups
        api_key:
          $ref: '#/components/schemas/ApiKey'
      type: object
      required:
        - email
        - id
        - used_tokens
        - email_verified
        - quota_limit
        - created_with
        - is_active
        - state
        - roles
        - predefined_roles
        - user_groups
        - api_key
      title: UserCreatedAdminView
    UserGroupCreateRequest:
      properties:
        name:
          type: string
          title: Name
      type: object
      required:
        - name
      title: UserGroupCreateRequest
    UserGroupInDBRead:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
      type: object
      required:
        - id
        - name
      title: UserGroupInDBRead
    UserGroupPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        users:
          items:
            $ref: '#/components/schemas/UserPublicBase'
          type: array
          title: Users
          default: []
      type: object
      required:
        - id
        - name
      title: UserGroupPublic
    UserGroupRead:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
      type: object
      required:
        - id
        - name
      title: UserGroupRead
    UserGroupUpdateRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        users:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Users
          default: []
      type: object
      title: UserGroupUpdateRequest
    UserInDB:
      properties:
        email:
          type: string
          format: email
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
        id:
          type: string
          format: uuid
          title: Id
        password:
          anyOf:
            - type: string
              maxLength: 100
              minLength: 7
            - type: 'null'
          title: Password
        salt:
          anyOf:
            - type: string
            - type: 'null'
          title: Salt
        used_tokens:
          type: integer
          title: Used Tokens
          default: 0
        email_verified:
          type: boolean
          title: Email Verified
          default: false
        is_active:
          type: boolean
          title: Is Active
          default: true
        state:
          $ref: '#/components/schemas/UserState'
        tenant_id:
          type: string
          format: uuid
          title: Tenant Id
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        created_with:
          anyOf:
            - $ref: '#/components/schemas/OIDCProviders'
            - type: 'null'
        roles:
          items:
            $ref: '#/components/schemas/RoleInDB'
          type: array
          title: Roles
          default: []
        predefined_roles:
          items:
            $ref: '#/components/schemas/PredefinedRoleInDB'
          type: array
          title: Predefined Roles
          default: []
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        user_groups:
          items:
            $ref: '#/components/schemas/UserGroupInDBRead'
          type: array
          title: User Groups
          default: []
        tenant:
          $ref: '#/components/schemas/TenantInDB'
        api_key:
          anyOf:
            - $ref: '#/components/schemas/ApiKeyInDB'
            - type: 'null'
        quota_used:
          type: integer
          title: Quota Used
          default: 0
        modules:
          items:
            type: string
          type: array
          title: Modules
          readOnly: true
        user_groups_ids:
          items:
            type: integer
          type: array
          uniqueItems: true
          title: User Groups Ids
          readOnly: true
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
          uniqueItems: true
          title: Permissions
          readOnly: true
      type: object
      required:
        - email
        - id
        - state
        - tenant_id
        - tenant
        - modules
        - user_groups_ids
        - permissions
      title: UserInDB
    UserProvision:
      properties:
        zitadel_token:
          type: string
          title: Zitadel Token
      type: object
      required:
        - zitadel_token
      title: UserProvision
    UserPublic:
      properties:
        email:
          type: string
          format: email
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        quota_used:
          type: integer
          title: Quota Used
          default: 0
        truncated_api_key:
          anyOf:
            - type: string
            - type: 'null'
          title: Truncated Api Key
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        roles:
          items:
            $ref: '#/components/schemas/RolePublic'
          type: array
          title: Roles
        predefined_roles:
          items:
            $ref: '#/components/schemas/PredefinedRolePublic'
          type: array
          title: Predefined Roles
        user_groups:
          items:
            $ref: '#/components/schemas/UserGroupRead'
          type: array
          title: User Groups
      type: object
      required:
        - email
        - id
        - roles
        - predefined_roles
        - user_groups
      title: UserPublic
    UserPublicBase:
      properties:
        email:
          type: string
          format: email
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        quota_used:
          type: integer
          title: Quota Used
          default: 0
      type: object
      required:
        - email
        - id
      title: UserPublicBase
    UserSparse:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        email:
          type: string
          format: email
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
      type: object
      required:
        - id
        - email
      title: UserSparse
    UserState:
      type: string
      enum:
        - invited
        - active
        - inactive
        - deleted
      title: UserState
    UserUpdatePublic:
      properties:
        email:
          anyOf:
            - type: string
              format: email
            - type: 'null'
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
        password:
          anyOf:
            - type: string
              maxLength: 100
              minLength: 7
            - type: 'null'
          title: Password
        quota_limit:
          anyOf:
            - type: integer
              minimum: 1000
            - type: 'null'
          title: Quota Limit
          description: Size in bytes
        roles:
          anyOf:
            - items:
                $ref: '#/components/schemas/ModelId'
              type: array
            - type: 'null'
          title: Roles
        predefined_roles:
          items:
            $ref: '#/components/schemas/ModelId'
          type: array
          title: Predefined Roles
        state:
          anyOf:
            - $ref: '#/components/schemas/UserState'
            - type: 'null'
      type: object
      title: UserUpdatePublic
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    WebsiteCreateRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Url
        space_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Space Id
        download_files:
          type: boolean
          title: Download Files
          default: false
        crawl_type:
          allOf:
            - $ref: '#/components/schemas/CrawlType'
          default: crawl
        update_interval:
          allOf:
            - $ref: '#/components/schemas/UpdateInterval'
          default: never
        embedding_model:
          $ref: '#/components/schemas/ModelId'
      type: object
      required:
        - url
        - embedding_model
      title: WebsiteCreateRequest
    WebsitePublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        url:
          type: string
          title: Url
        space_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Space Id
        download_files:
          type: boolean
          title: Download Files
          default: false
        crawl_type:
          allOf:
            - $ref: '#/components/schemas/CrawlType'
          default: crawl
        update_interval:
          allOf:
            - $ref: '#/components/schemas/UpdateInterval'
          default: never
        latest_crawl:
          anyOf:
            - $ref: '#/components/schemas/CrawlRunPublic'
            - type: 'null'
        embedding_model:
          anyOf:
            - $ref: '#/components/schemas/EmbeddingModelPublicBase'
            - type: 'null'
      type: object
      required:
        - id
        - url
      title: WebsitePublic
    WebsiteSparse:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        url:
          type: string
          title: Url
        space_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Space Id
        download_files:
          type: boolean
          title: Download Files
          default: false
        crawl_type:
          allOf:
            - $ref: '#/components/schemas/CrawlType'
          default: crawl
        update_interval:
          allOf:
            - $ref: '#/components/schemas/UpdateInterval'
          default: never
        permissions:
          items:
            $ref: '#/components/schemas/ResourcePermission'
          type: array
          title: Permissions
          default: []
        latest_crawl:
          anyOf:
            - $ref: '#/components/schemas/CrawlRunSparse'
            - type: 'null'
        user_id:
          type: string
          format: uuid
          title: User Id
        embedding_model:
          $ref: '#/components/schemas/IdAndName'
        published:
          type: boolean
          title: Published
      type: object
      required:
        - id
        - url
        - user_id
        - embedding_model
        - published
      title: WebsiteSparse
    WidgetCreatePublic:
      properties:
        name:
          type: string
          title: Name
        title:
          type: string
          title: Title
        bot_introduction:
          type: string
          title: Bot Introduction
        color:
          type: string
          format: color
          title: Color
        size:
          $ref: '#/components/schemas/Size'
        assistant:
          $ref: '#/components/schemas/ModelId'
      type: object
      required:
        - name
        - title
        - bot_introduction
        - color
        - size
        - assistant
      title: WidgetCreatePublic
    WidgetPublic:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        title:
          type: string
          title: Title
        bot_introduction:
          type: string
          title: Bot Introduction
        color:
          type: string
          format: color
          title: Color
        size:
          $ref: '#/components/schemas/Size'
        privacy_policy:
          anyOf:
            - type: string
              maxLength: 2083
              minLength: 1
              format: uri
            - type: 'null'
          title: Privacy Policy
        assistant:
          $ref: '#/components/schemas/ModelId'
      type: object
      required:
        - id
        - name
        - title
        - bot_introduction
        - color
        - size
        - assistant
      title: WidgetPublic
    WizardType:
      type: string
      enum:
        - attachments
        - groups
      title: WizardType
    WsOutgoingWebSocketMessage:
      $defs:
        MessagePayload:
          properties: {}
          title: MessagePayload
          type: object
        OutGoingMessageType:
          enum:
            - pong
            - app_run_updates
          title: OutGoingMessageType
          type: string
      properties:
        type:
          $ref: >-
            #/components/schemas/WsOutgoingWebSocketMessage/$defs/OutGoingMessageType
        data:
          anyOf:
            - $ref: >-
                #/components/schemas/WsOutgoingWebSocketMessage/$defs/MessagePayload
            - type: 'null'
          default: null
      required:
        - type
      title: WsOutgoingWebSocketMessage
      type: object
    WsAppRunUpdate:
      $defs:
        Space:
          properties:
            id:
              format: uuid
              title: Id
              type: string
            personal:
              title: Personal
              type: boolean
          required:
            - id
            - personal
          title: Space
          type: object
        Status:
          enum:
            - in progress
            - queued
            - complete
            - failed
            - not found
          title: Status
          type: string
      properties:
        id:
          format: uuid
          title: Id
          type: string
        status:
          $ref: '#/components/schemas/WsAppRunUpdate/$defs/Status'
        app_id:
          anyOf:
            - format: uuid
              type: string
            - type: 'null'
          default: null
          title: App Id
        space:
          anyOf:
            - $ref: '#/components/schemas/WsAppRunUpdate/$defs/Space'
            - type: 'null'
          default: null
      required:
        - id
        - status
      title: WsAppRunUpdate
      type: object
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: /api/v1/users/login/token/
    APIKeyHeader:
      type: apiKey
      in: header
      name: api-key
tags:
  - name: users
    description: User operations. **Login** logic is here.
  - name: user-groups
    description: User groups operations. Use this to manage user groups.
  - name: info-blobs
    description: >-
      Document operations. **Info-blobs** are blobs of binary information, not
      restricted to text, although current support is only text.
  - name: groups
    description: >-
      Group operations. Use this to organize your info-blobs. **Uploading**
      info-blobs is here.
  - name: assistants
    description: >-
      Assistant operations. Create assistants with the desired configuration and
      ask questions to them.
  - name: services
    description: Services operations. Documentation for these endpoints are coming soon.
    externalDocs:
      description: Services documentation (coming soon)
      url: https://www.intric.ai/documentation/services
  - name: jobs
    description: Job operations. Use this to keep track of running and completed jobs.
  - name: logging
    description: >-
      Logging operations. Use these endpoints to get exactly what was sent to
      the AI-model for each question.
  - name: analysis
    description: >-
      Analysis operations. Use these endpoints to see how your assistants are
      used, as well as to ask questions about the questions asked to an
      assistant.
  - name: widgets
    description: Widget operations. Use this to save widget settings and run widgets.
  - name: allowed-origins
    description: >-
      Allowed Origins operations. Use this to specify the allowed origins from
      where the widgets will be hosted
  - name: crawls
    description: Crawl operations. Use these endpoint to set up and run crawls.
  - name: crawl-runs
    description: Crawl run operations. Use these endpoint to keep track of crawl runs.
  - name: roles
    description: User roles. Use this to manage user permissions.
  - name: admin
    description: Admin operations. Use this to manage your tenant.
  - name: settings
    description: Settings operations. Currently only houses chatbot widget settings.
  - name: sysadmin
    description: >-
      Sysadmin operations. Use the super api key in order to access these
      operations.
  - name: modules
    description: >-
      Module operations. These endpoints are used to handle module access for
      tenants. Requires elevated privileges.
