openapi: 3.1.0
info:
  title: Eneo-Sundsvall
  description: General AI framework
  version: '1.0'
servers:
  - url: https://api-i-test.sundsvall.se/eneo-sundsvall/1.0
security:
  - default: []
tags:
  - name: users
    description: User operations. **Login** logic is here.
  - name: user-groups
    description: User groups operations. Use this to manage user groups.
  - name: info-blobs
    description: Document operations. **Info-blobs** are blobs of binary information,
      not restricted to text, although current support is only text.
  - name: groups
    description: Group operations. Use this to organize your info-blobs. **Uploading**
      info-blobs is here.
  - name: assistants
    description: Assistant operations. Create assistants with the desired configuration
      and ask questions to them.
  - name: services
    description: Services operations. Documentation for these endpoints are coming soon.
    externalDocs:
      description: Services documentation (coming soon)
      url: https://www.eneo.ai/
  - name: jobs
    description: Job operations. Use this to keep track of running and completed jobs.
  - name: logging
    description: Logging operations. Use these endpoints to get exactly what was sent
      to the AI-model for each question.
  - name: analysis
    description: Analysis operations. Use these endpoints to see how your assistants
      are used, as well as to ask questions about the questions asked to an assistant.
  - name: widgets
    description: Widget operations. Use this to save widget settings and run widgets.
  - name: allowed-origins
    description: Allowed Origins operations. Use this to specify the allowed origins
      from where the widgets will be hosted
  - name: crawls
    description: Crawl operations. Use these endpoint to set up and run crawls.
  - name: crawl-runs
    description: Crawl run operations. Use these endpoint to keep track of crawl runs.
  - name: roles
    description: User roles. Use this to manage user permissions.
  - name: admin
    description: Tenant Admin operations. Manage users, settings, and resources within
      your specific tenant/organization. Requires admin account API key for your tenant.
      For system-wide administration across all tenants, see Sysadmin endpoints.
  - name: settings
    description: Settings operations. Currently only houses chatbot widget settings.
  - name: sysadmin
    description: System Administration operations. Manage the entire Eneo installation
      across all tenants using the INTRIC_SUPER_API_KEY environment variable. Create/manage
      tenants, system-wide settings, and cross-tenant operations. For single tenant
      management (users, settings within your organization), see Tenant Admin endpoints.
  - name: modules
    description: Module operations. These endpoints are used to handle module access
      for tenants. Requires elevated privileges.
paths:
  "/crawl-runs/{id}/":
    get:
      tags:
        - crawl-runs
      summary: Get Crawl Run
      operationId: get_crawl_run_api_v1_crawl_runs__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/intric__websites__crawl_dependencies__crawl_models__CrawlRunPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/apps/{id}/":
    get:
      tags:
        - apps
      summary: Get App
      operationId: get_app_api_v1_apps__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppPublic"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - apps
      summary: Delete App
      operationId: delete_app_api_v1_apps__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    patch:
      tags:
        - apps
      summary: Update App
      operationId: update_app_api_v1_apps__id___patch
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AppUpdateRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/apps/{id}/runs/":
    get:
      tags:
        - apps
      summary: Get App Runs
      operationId: get_app_runs_api_v1_apps__id__runs__get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_AppRunSparse_"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - apps
      summary: Run App
      operationId: run_app_api_v1_apps__id__runs__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RunAppRequest"
        required: true
      responses:
        '203':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppRunPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/apps/{id}/prompts/":
    get:
      tags:
        - apps
      summary: Get Prompts
      operationId: get_prompts_api_v1_apps__id__prompts__get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_PromptSparse_"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/apps/{id}/publish/":
    post:
      tags:
        - apps
      summary: Publish App
      operationId: publish_app_api_v1_apps__id__publish__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: published
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: boolean
            title: Published
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppPublic"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/app-runs/{id}/":
    get:
      tags:
        - app-runs
      summary: Get App Run
      operationId: get_app_run_api_v1_app_runs__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppRunPublic"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - app-runs
      summary: Delete App Run
      operationId: delete_app_run_api_v1_app_runs__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/users/login/token/":
    post:
      tags:
        - users
      summary: Login
      description: OAuth2 Login
      operationId: Login_api_v1_users_login_token__post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Body_Login_api_v1_users_login_token__post"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccessToken"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/users/login/openid-connect/mobilityguard/":
    post:
      tags:
        - users
      summary: Login With Mobilityguard
      description: OpenID Connect Login with mobilityguard.
      operationId: login_with_mobilityguard_api_v1_users_login_openid_connect_mobilityguard__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpenIdConnectLogin"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccessToken"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/users/":
    get:
      tags:
        - users
      summary: Get Tenant Users
      operationId: get_tenant_users_api_v1_users__get
      parameters:
        - name: email
          in: query
          description: Email of user
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Email of user
            title: Email
        - name: limit
          in: query
          description: Users per page
          required: false
          style: form
          explode: true
          schema:
            type: integer
            description: Users per page
            minimum: 1
            title: Limit
        - name: cursor
          in: query
          description: Current cursor
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Current cursor
            title: Cursor
        - name: previous
          in: query
          description: Show previous page
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            default: false
            description: Show previous page
            title: Previous
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CursorPaginatedResponse_UserSparse_"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/users/me/":
    get:
      tags:
        - users
      summary: Get Current User
      operationId: Get_current_user_api_v1_users_me__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/users/api-keys/":
    get:
      tags:
        - users
      summary: Generate Api Key
      description: |-
        Generating a new api key will delete the old key.
        Make sure to copy the key since it will only be showed once,
        after which only the truncated key will be shown.
      operationId: generate_api_key_api_v1_users_api_keys__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiKey"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/users/tenant/":
    get:
      tags:
        - users
      summary: Get Current User Tenant
      operationId: Get_current_user_tenant_api_v1_users_tenant__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TenantPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/users/admin/invite/":
    post:
      tags:
        - users
      summary: Invite User
      operationId: invite_user_api_v1_users_admin_invite__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PropUserInvite"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAdminView"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/users/admin/{id}/":
    delete:
      tags:
        - users
      summary: Delete User
      operationId: delete_user_api_v1_users_admin__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    patch:
      tags:
        - users
      summary: Update User
      operationId: update_user_api_v1_users_admin__id___patch
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartialPropUserUpdate"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAdminView"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/users/provision/":
    post:
      tags:
        - users
      summary: Provision User
      operationId: provision_user_api_v1_users_provision__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserProvision"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/info-blobs/":
    get:
      tags:
        - info-blobs
      summary: Get Info Blob Ids
      description: |-
        Returns a list of info-blobs.

        Does not return the text of each info-blob, 'text' will be null.
      operationId: get_info_blob_ids_api_v1_info_blobs__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_InfoBlobPublicNoText_"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/info-blobs/{id}/":
    get:
      tags:
        - info-blobs
      summary: Get Info Blob
      operationId: get_info_blob_api_v1_info_blobs__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InfoBlobPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - info-blobs
      summary: Update Info Blob
      description: Omitted fields are not updated.
      operationId: update_info_blob_api_v1_info_blobs__id___post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/InfoBlobUpdatePublic"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InfoBlobPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - info-blobs
      summary: Delete Info Blob
      description: Returns the deleted object.
      operationId: delete_info_blob_api_v1_info_blobs__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InfoBlobPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/groups/":
    get:
      tags:
        - groups
      summary: Get Groups
      operationId: get_groups_api_v1_groups__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_GroupPublicWithMetadata_"
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - groups
      summary: Create Group
      description: |-
        Valid values for `embedding_model` are the provided by `GET /api/v1/settings/models/`.
        Use the `name` field of the response from this endpoint.
      operationId: create_group_api_v1_groups__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateGroupRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupPublicWithMetadata"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/groups/{id}/":
    get:
      tags:
        - groups
      summary: Get Group By Id
      operationId: get_group_by_id_api_v1_groups__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CollectionPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - groups
      summary: Update Group
      operationId: update_group_api_v1_groups__id___post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CollectionUpdate"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CollectionPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - groups
      summary: Delete Group By Id
      operationId: delete_group_by_id_api_v1_groups__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/groups/{id}/info-blobs/":
    get:
      tags:
        - groups
      summary: Get Info Blobs
      operationId: get_info_blobs_api_v1_groups__id__info_blobs__get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_InfoBlobPublicNoText_"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - groups
      summary: Add Info Blobs
      description: |-
        Maximum allowed simultaneous upload is 128.

        Will be embedded using the embedding model of the group.
      operationId: add_info_blobs_api_v1_groups__id__info_blobs__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/InfoBlobUpsertRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_InfoBlobPublic_"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/groups/{id}/info-blobs/upload/":
    post:
      tags:
        - groups
      summary: Upload File
      description: Starts a job, use the job operations to keep track of this job
      operationId: upload_file_api_v1_groups__id__info_blobs_upload__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Body_upload_file_api_v1_groups__id__info_blobs_upload__post"
        required: true
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/JobPublic"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/groups/{id}/searches/":
    post:
      tags:
        - groups
      summary: Run Semantic Search
      operationId: run_semantic_search_api_v1_groups__id__searches__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SemanticSearchRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_SemanticSearchResponse_"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/groups/{id}/transfer/":
    post:
      tags:
        - groups
      summary: Transfer Group To Space
      operationId: transfer_group_to_space_api_v1_groups__id__transfer__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransferRequest"
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/settings/":
    get:
      tags:
        - settings
      summary: Get Settings
      operationId: get_settings_api_v1_settings__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SettingsPublic"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - settings
      summary: Upsert Settings
      description: Omitted fields are not updated.
      operationId: upsert_settings_api_v1_settings__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SettingsPublic"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SettingsPublic"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/settings/models/":
    get:
      tags:
        - settings
      summary: Get Models
      description: |-
        From the response:
            - use the `id` field as values for `completion_model`
            - use the `id` field as values for `embedding_model`

        in creating and updating `Assistants` and `Services`.
      operationId: get_models_api_v1_settings_models__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetModelsResponse"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/settings/formats/":
    get:
      tags:
        - settings
      summary: Get Formats
      operationId: get_formats_api_v1_settings_formats__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_str_"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/assistants/":
    get:
      tags:
        - assistants
      summary: Get Assistants
      description: Requires Admin permission if `for_tenant` is `true`.
      operationId: get_assistants_api_v1_assistants__get
      parameters:
        - name: name
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            title: Name
        - name: for_tenant
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
            title: For Tenant
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_AssistantPublic_"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - assistants
      summary: Create Assistant
      operationId: create_assistant_api_v1_assistants__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AssistantCreatePublic"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AssistantPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/assistants/{id}/":
    get:
      tags:
        - assistants
      summary: Get Assistant
      operationId: get_assistant_api_v1_assistants__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AssistantPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - assistants
      summary: Update Assistant
      description: Omitted fields are not updated
      operationId: update_assistant_api_v1_assistants__id___post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartialAssistantUpdatePublic"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AssistantPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - assistants
      summary: Delete Assistant
      operationId: delete_assistant_api_v1_assistants__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/assistants/{id}/sessions/":
    get:
      tags:
        - assistants
      summary: Get Assistant Sessions
      operationId: get_assistant_sessions_api_v1_assistants__id__sessions__get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: limit
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
        - name: cursor
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            title: Cursor
        - name: previous
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
            title: Previous
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CursorPaginatedResponse_SessionMetadataPublic_"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - assistants
      summary: Ask Assistant
      description: Streams the response as Server-Sent Events if stream == true
      operationId: ask_assistant_api_v1_assistants__id__sessions__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: version
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            default: 1
            maximum: 2
            minimum: 1
            title: Version
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AskAssistant"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AskResponse"
            text/event-stream:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                    format: uuid
                    title: Session Id
                  question:
                    type: string
                    title: Question
                  answer:
                    type: string
                    title: Answer
                  files:
                    type: array
                    items:
                      "$ref": "#/components/schemas/FilePublic"
                    title: Files
                  generated_files:
                    type: array
                    items:
                      "$ref": "#/components/schemas/FilePublic"
                    title: Generated Files
                  references:
                    type: array
                    items:
                      "$ref": "#/components/schemas/InfoBlobAskAssistantPublic"
                    title: References
                  tools:
                    "$ref": "#/components/schemas/UseTools"
                  web_search_references:
                    type: array
                    items:
                      "$ref": "#/components/schemas/WebSearchResultPublic"
                    title: Web Search References
                  model:
                    anyOf:
                      - "$ref": "#/components/schemas/CompletionModelPublic"
                      - type: 'null'
                required:
                  - answer
                  - files
                  - generated_files
                  - question
                  - references
                  - session_id
                  - tools
                  - web_search_references
                title: AskResponse
                "$defs":
                  CompletionModelPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      nickname:
                        title: Nickname
                        type: string
                      family:
                        "$ref": "#/components/schemas/ModelFamily"
                      token_limit:
                        title: Token Limit
                        type: integer
                      is_deprecated:
                        title: Is Deprecated
                        type: boolean
                      nr_billion_parameters:
                        anyOf:
                          - type: integer
                          - type: 'null'
                        title: Nr Billion Parameters
                      hf_link:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Hf Link
                      stability:
                        "$ref": "#/components/schemas/ModelStability"
                      hosting:
                        "$ref": "#/components/schemas/ModelHostingLocation"
                      open_source:
                        anyOf:
                          - type: boolean
                          - type: 'null'
                        title: Open Source
                      description:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Description
                      deployment_name:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Deployment Name
                      org:
                        anyOf:
                          - "$ref": "#/components/schemas/ModelOrg"
                          - type: 'null'
                      vision:
                        title: Vision
                        type: boolean
                      reasoning:
                        title: Reasoning
                        type: boolean
                      base_url:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Base Url
                      litellm_model_name:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Litellm Model Name
                      is_org_enabled:
                        default: false
                        title: Is Org Enabled
                        type: boolean
                      is_org_default:
                        default: false
                        title: Is Org Default
                        type: boolean
                      can_access:
                        default: false
                        title: Can Access
                        type: boolean
                      is_locked:
                        default: true
                        title: Is Locked
                        type: boolean
                      security_classification:
                        anyOf:
                          - "$ref": "#/components/schemas/SecurityClassificationPublic"
                          - type: 'null'
                    required:
                      - id
                      - name
                      - nickname
                      - family
                      - token_limit
                      - is_deprecated
                      - stability
                      - hosting
                      - vision
                      - reasoning
                    title: CompletionModelPublic
                    type: object
                  FilePublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      mimetype:
                        title: Mimetype
                        type: string
                      size:
                        title: Size
                        type: integer
                      transcription:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Transcription
                    required:
                      - id
                      - name
                      - mimetype
                      - size
                    title: FilePublic
                    type: object
                  InfoBlobAskAssistantPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      metadata:
                        "$ref": "#/components/schemas/InfoBlobMetadata"
                      group_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Group Id
                      website_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Website Id
                      score:
                        title: Score
                        type: number
                    required:
                      - id
                      - metadata
                      - score
                    title: InfoBlobAskAssistantPublic
                    type: object
                  InfoBlobMetadata:
                    properties:
                      url:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Url
                      title:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Title
                      embedding_model_id:
                        format: uuid
                        title: Embedding Model Id
                        type: string
                      size:
                        title: Size
                        type: integer
                    required:
                      - embedding_model_id
                      - size
                    title: InfoBlobMetadata
                    type: object
                  ModelFamily:
                    enum:
                      - openai
                      - mistral
                      - vllm
                      - claude
                      - azure
                      - ovhcloud
                      - e5
                    title: ModelFamily
                    type: string
                  ModelHostingLocation:
                    enum:
                      - usa
                      - eu
                      - swe
                    title: ModelHostingLocation
                    type: string
                  ModelOrg:
                    enum:
                      - OpenAI
                      - Meta
                      - Microsoft
                      - Anthropic
                      - Mistral
                      - KBLab
                      - Google
                      - Berget
                    title: ModelOrg
                    type: string
                  ModelStability:
                    enum:
                      - stable
                      - experimental
                    title: ModelStability
                    type: string
                  SecurityClassificationPublic:
                    description: Basic security classification information.
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      description:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Description
                      security_level:
                        title: Security Level
                        type: integer
                    required:
                      - id
                      - name
                      - description
                      - security_level
                    title: SecurityClassificationPublic
                    type: object
                  ToolAssistant:
                    properties:
                      id:
                        format: uuid
                        title: Id
                        type: string
                      handle:
                        title: Handle
                        type: string
                    required:
                      - id
                      - handle
                    title: ToolAssistant
                    type: object
                  UseTools:
                    properties:
                      assistants:
                        items:
                          "$ref": "#/components/schemas/ToolAssistant"
                        title: Assistants
                        type: array
                    required:
                      - assistants
                    title: UseTools
                    type: object
                  WebSearchResultPublic:
                    properties:
                      id:
                        format: uuid
                        title: Id
                        type: string
                      title:
                        title: Title
                        type: string
                      url:
                        title: Url
                        type: string
                    required:
                      - id
                      - title
                      - url
                    title: WebSearchResultPublic
                    type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/assistants/{id}/sessions/{session_id}/":
    get:
      tags:
        - assistants
      summary: Get Assistant Session
      operationId: get_assistant_session_api_v1_assistants__id__sessions__session_id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: session_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Session Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - assistants
      summary: Ask Followup
      description: Streams the response as Server-Sent Events if stream == true
      operationId: ask_followup_api_v1_assistants__id__sessions__session_id___post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: session_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Session Id
        - name: version
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            default: 1
            maximum: 2
            minimum: 1
            title: Version
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AskAssistant"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AskResponse"
            text/event-stream:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                    format: uuid
                    title: Session Id
                  question:
                    type: string
                    title: Question
                  answer:
                    type: string
                    title: Answer
                  files:
                    type: array
                    items:
                      "$ref": "#/components/schemas/FilePublic"
                    title: Files
                  generated_files:
                    type: array
                    items:
                      "$ref": "#/components/schemas/FilePublic"
                    title: Generated Files
                  references:
                    type: array
                    items:
                      "$ref": "#/components/schemas/InfoBlobAskAssistantPublic"
                    title: References
                  tools:
                    "$ref": "#/components/schemas/UseTools"
                  web_search_references:
                    type: array
                    items:
                      "$ref": "#/components/schemas/WebSearchResultPublic"
                    title: Web Search References
                  model:
                    anyOf:
                      - "$ref": "#/components/schemas/CompletionModelPublic"
                      - type: 'null'
                required:
                  - answer
                  - files
                  - generated_files
                  - question
                  - references
                  - session_id
                  - tools
                  - web_search_references
                title: AskResponse
                "$defs":
                  CompletionModelPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      nickname:
                        title: Nickname
                        type: string
                      family:
                        "$ref": "#/components/schemas/ModelFamily"
                      token_limit:
                        title: Token Limit
                        type: integer
                      is_deprecated:
                        title: Is Deprecated
                        type: boolean
                      nr_billion_parameters:
                        anyOf:
                          - type: integer
                          - type: 'null'
                        title: Nr Billion Parameters
                      hf_link:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Hf Link
                      stability:
                        "$ref": "#/components/schemas/ModelStability"
                      hosting:
                        "$ref": "#/components/schemas/ModelHostingLocation"
                      open_source:
                        anyOf:
                          - type: boolean
                          - type: 'null'
                        title: Open Source
                      description:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Description
                      deployment_name:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Deployment Name
                      org:
                        anyOf:
                          - "$ref": "#/components/schemas/ModelOrg"
                          - type: 'null'
                      vision:
                        title: Vision
                        type: boolean
                      reasoning:
                        title: Reasoning
                        type: boolean
                      base_url:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Base Url
                      litellm_model_name:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Litellm Model Name
                      is_org_enabled:
                        default: false
                        title: Is Org Enabled
                        type: boolean
                      is_org_default:
                        default: false
                        title: Is Org Default
                        type: boolean
                      can_access:
                        default: false
                        title: Can Access
                        type: boolean
                      is_locked:
                        default: true
                        title: Is Locked
                        type: boolean
                      security_classification:
                        anyOf:
                          - "$ref": "#/components/schemas/SecurityClassificationPublic"
                          - type: 'null'
                    required:
                      - id
                      - name
                      - nickname
                      - family
                      - token_limit
                      - is_deprecated
                      - stability
                      - hosting
                      - vision
                      - reasoning
                    title: CompletionModelPublic
                    type: object
                  FilePublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      mimetype:
                        title: Mimetype
                        type: string
                      size:
                        title: Size
                        type: integer
                      transcription:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Transcription
                    required:
                      - id
                      - name
                      - mimetype
                      - size
                    title: FilePublic
                    type: object
                  InfoBlobAskAssistantPublic:
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      metadata:
                        "$ref": "#/components/schemas/InfoBlobMetadata"
                      group_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Group Id
                      website_id:
                        anyOf:
                          - format: uuid
                            type: string
                          - type: 'null'
                        title: Website Id
                      score:
                        title: Score
                        type: number
                    required:
                      - id
                      - metadata
                      - score
                    title: InfoBlobAskAssistantPublic
                    type: object
                  InfoBlobMetadata:
                    properties:
                      url:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Url
                      title:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Title
                      embedding_model_id:
                        format: uuid
                        title: Embedding Model Id
                        type: string
                      size:
                        title: Size
                        type: integer
                    required:
                      - embedding_model_id
                      - size
                    title: InfoBlobMetadata
                    type: object
                  ModelFamily:
                    enum:
                      - openai
                      - mistral
                      - vllm
                      - claude
                      - azure
                      - ovhcloud
                      - e5
                    title: ModelFamily
                    type: string
                  ModelHostingLocation:
                    enum:
                      - usa
                      - eu
                      - swe
                    title: ModelHostingLocation
                    type: string
                  ModelOrg:
                    enum:
                      - OpenAI
                      - Meta
                      - Microsoft
                      - Anthropic
                      - Mistral
                      - KBLab
                      - Google
                      - Berget
                    title: ModelOrg
                    type: string
                  ModelStability:
                    enum:
                      - stable
                      - experimental
                    title: ModelStability
                    type: string
                  SecurityClassificationPublic:
                    description: Basic security classification information.
                    properties:
                      created_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Created At
                      updated_at:
                        anyOf:
                          - format: date-time
                            type: string
                          - type: 'null'
                        title: Updated At
                      id:
                        format: uuid
                        title: Id
                        type: string
                      name:
                        title: Name
                        type: string
                      description:
                        anyOf:
                          - type: string
                          - type: 'null'
                        title: Description
                      security_level:
                        title: Security Level
                        type: integer
                    required:
                      - id
                      - name
                      - description
                      - security_level
                    title: SecurityClassificationPublic
                    type: object
                  ToolAssistant:
                    properties:
                      id:
                        format: uuid
                        title: Id
                        type: string
                      handle:
                        title: Handle
                        type: string
                    required:
                      - id
                      - handle
                    title: ToolAssistant
                    type: object
                  UseTools:
                    properties:
                      assistants:
                        items:
                          "$ref": "#/components/schemas/ToolAssistant"
                        title: Assistants
                        type: array
                    required:
                      - assistants
                    title: UseTools
                    type: object
                  WebSearchResultPublic:
                    properties:
                      id:
                        format: uuid
                        title: Id
                        type: string
                      title:
                        title: Title
                        type: string
                      url:
                        title: Url
                        type: string
                    required:
                      - id
                      - title
                      - url
                    title: WebSearchResultPublic
                    type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - assistants
      summary: Delete Assistant Session
      operationId: delete_assistant_session_api_v1_assistants__id__sessions__session_id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: session_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Session Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/assistants/{id}/sessions/{session_id}/feedback/":
    post:
      tags:
        - assistants
      summary: Leave Feedback
      operationId: leave_feedback_api_v1_assistants__id__sessions__session_id__feedback__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: session_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Session Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SessionFeedback"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/assistants/{id}/api-keys/":
    get:
      tags:
        - assistants
      summary: Generate Read Only Assistant Key
      description: |-
        Generates a read-only api key for this assistant.

        This api key can only be used on `POST /api/v1/assistants/{id}/sessions/`
        and `POST /api/v1/assistants/{id}/sessions/{session_id}/`.
      operationId: generate_read_only_assistant_key_api_v1_assistants__id__api_keys__get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiKey"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/assistants/{id}/transfer/":
    post:
      tags:
        - assistants
      summary: Transfer Assistant To Space
      operationId: transfer_assistant_to_space_api_v1_assistants__id__transfer__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransferApplicationRequest"
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/assistants/{id}/publish/":
    post:
      tags:
        - assistants
      summary: Publish Assistant
      operationId: publish_assistant_api_v1_assistants__id__publish__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: published
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: boolean
            title: Published
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AssistantPublic"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/group-chats/{id}/":
    get:
      tags:
        - group-chats
      summary: Get Group Chat
      description: Get an existing group chat by its ID.
      operationId: get_group_chat_api_v1_group_chats__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupChatPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - group-chats
      summary: Delete Group Chat
      description: Delete an existing group chat by its ID.
      operationId: delete_group_chat_api_v1_group_chats__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    patch:
      tags:
        - group-chats
      summary: Update Group Chat
      description: Updates an existing group chat. Omitted fields are not updated
      operationId: update_group_chat_api_v1_group_chats__id___patch
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupChatUpdateSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupChatPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/group-chats/{id}/publish/":
    post:
      tags:
        - group-chats
      summary: Publish Group Chat
      operationId: publish_group_chat_api_v1_group_chats__id__publish__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: published
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: boolean
            title: Published
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupChatPublic"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/conversations/":
    get:
      tags:
        - conversations
      summary: List Conversations
      description: |-
        Gets conversations (sessions) for an assistant or group chat.

        Provide either assistant_id or group_chat_id (but not both) to filter sessions.
        If neither is provided, an error will be returned.
      operationId: list_conversations_api_v1_conversations__get
      parameters:
        - name: assistant_id
          in: query
          description: The UUID of the assistant
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: 'null'
            description: The UUID of the assistant
            title: Assistant Id
        - name: group_chat_id
          in: query
          description: The UUID of the group chat
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: 'null'
            description: The UUID of the group chat
            title: Group Chat Id
        - name: limit
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            exclusiveMinimum: 0
            title: Limit
        - name: cursor
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            title: Cursor
        - name: previous
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
            title: Previous
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CursorPaginatedResponse_SessionMetadataPublic_"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - conversations
      summary: Chat
      description: |-
        Unified endpoint for communicating with an assistant or a group chat.

        If request.session_id is provided: continues an existing conversation.
        Otherwise: starts a new conversation with the specified assistant or group chat.

        Either request.session_id, request.assistant_id, or request.group_chat_id must be provided.

        For group chats:
        - Specify the group_chat_id to chat with a group chat
        - If tools.assistants contains an assistant, that specific assistant will be targeted
          (requires the group chat to have allow_mentions=True).
        - If no assistant is targeted, the most appropriate assistant will be selected.
        - When multiple assistants could answer a question, the system will choose the most relevant one
          or select the first matching assistant if relevance scores are similar.

        For regular assistants:
        - The tools.assistants field can be used for directing the request to a tool assistant.

        Streams the response as Server-Sent Events if stream == true.
        The following SSE response models are supported in the stream:
        - SSEText: Text completion chunks
        - SSEIntricEvent: Internal events like generating an image
        - SSEFiles: Generated files/images responses
        - SSEFirstChunk: Initial response with metadata
      operationId: chat_api_v1_conversations__post
      parameters:
        - name: version
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            default: 1
            maximum: 2
            minimum: 1
            title: Version
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ConversationRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
            text/event-stream:
              schema:
                oneOf:
                  - type: object
                    properties:
                      session_id:
                        type: string
                        format: uuid
                        title: Session Id
                      answer:
                        type: string
                        title: Answer
                      references:
                        type: array
                        items:
                          "$ref": "#/components/schemas/InfoBlobAskAssistantPublic"
                        title: References
                    required:
                      - answer
                      - references
                      - session_id
                    title: SSEText
                    "$defs":
                      InfoBlobAskAssistantPublic:
                        properties:
                          created_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Created At
                          updated_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Updated At
                          id:
                            format: uuid
                            title: Id
                            type: string
                          metadata:
                            "$ref": "#/components/schemas/InfoBlobMetadata"
                          group_id:
                            anyOf:
                              - format: uuid
                                type: string
                              - type: 'null'
                            title: Group Id
                          website_id:
                            anyOf:
                              - format: uuid
                                type: string
                              - type: 'null'
                            title: Website Id
                          score:
                            title: Score
                            type: number
                        required:
                          - id
                          - metadata
                          - score
                        title: InfoBlobAskAssistantPublic
                        type: object
                      InfoBlobMetadata:
                        properties:
                          url:
                            anyOf:
                              - type: string
                              - type: 'null'
                            title: Url
                          title:
                            anyOf:
                              - type: string
                              - type: 'null'
                            title: Title
                          embedding_model_id:
                            format: uuid
                            title: Embedding Model Id
                            type: string
                          size:
                            title: Size
                            type: integer
                        required:
                          - embedding_model_id
                          - size
                        title: InfoBlobMetadata
                        type: object
                  - type: object
                    properties:
                      session_id:
                        type: string
                        format: uuid
                        title: Session Id
                      intric_event_type:
                        "$ref": "#/components/schemas/IntricEventType"
                    required:
                      - intric_event_type
                      - session_id
                    title: SSEIntricEvent
                    "$defs":
                      IntricEventType:
                        enum:
                          - generating_image
                        title: IntricEventType
                        type: string
                  - type: object
                    properties:
                      session_id:
                        type: string
                        format: uuid
                        title: Session Id
                      generated_files:
                        type: array
                        items:
                          "$ref": "#/components/schemas/FilePublic"
                        title: Generated Files
                    required:
                      - generated_files
                      - session_id
                    title: SSEFiles
                    "$defs":
                      FilePublic:
                        properties:
                          created_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Created At
                          updated_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Updated At
                          id:
                            format: uuid
                            title: Id
                            type: string
                          name:
                            title: Name
                            type: string
                          mimetype:
                            title: Mimetype
                            type: string
                          size:
                            title: Size
                            type: integer
                          transcription:
                            anyOf:
                              - type: string
                              - type: 'null'
                            title: Transcription
                        required:
                          - id
                          - name
                          - mimetype
                          - size
                        title: FilePublic
                        type: object
                  - type: object
                    properties:
                      session_id:
                        type: string
                        format: uuid
                        title: Session Id
                      question:
                        type: string
                        title: Question
                      answer:
                        type: string
                        title: Answer
                      files:
                        type: array
                        items:
                          "$ref": "#/components/schemas/FilePublic"
                        title: Files
                      generated_files:
                        type: array
                        items:
                          "$ref": "#/components/schemas/FilePublic"
                        title: Generated Files
                      references:
                        type: array
                        items:
                          "$ref": "#/components/schemas/InfoBlobAskAssistantPublic"
                        title: References
                      tools:
                        "$ref": "#/components/schemas/UseTools"
                      web_search_references:
                        type: array
                        items:
                          "$ref": "#/components/schemas/WebSearchResultPublic"
                        title: Web Search References
                    required:
                      - answer
                      - files
                      - generated_files
                      - question
                      - references
                      - session_id
                      - tools
                      - web_search_references
                    title: SSEFirstChunk
                    "$defs":
                      FilePublic:
                        properties:
                          created_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Created At
                          updated_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Updated At
                          id:
                            format: uuid
                            title: Id
                            type: string
                          name:
                            title: Name
                            type: string
                          mimetype:
                            title: Mimetype
                            type: string
                          size:
                            title: Size
                            type: integer
                          transcription:
                            anyOf:
                              - type: string
                              - type: 'null'
                            title: Transcription
                        required:
                          - id
                          - name
                          - mimetype
                          - size
                        title: FilePublic
                        type: object
                      InfoBlobAskAssistantPublic:
                        properties:
                          created_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Created At
                          updated_at:
                            anyOf:
                              - format: date-time
                                type: string
                              - type: 'null'
                            title: Updated At
                          id:
                            format: uuid
                            title: Id
                            type: string
                          metadata:
                            "$ref": "#/components/schemas/InfoBlobMetadata"
                          group_id:
                            anyOf:
                              - format: uuid
                                type: string
                              - type: 'null'
                            title: Group Id
                          website_id:
                            anyOf:
                              - format: uuid
                                type: string
                              - type: 'null'
                            title: Website Id
                          score:
                            title: Score
                            type: number
                        required:
                          - id
                          - metadata
                          - score
                        title: InfoBlobAskAssistantPublic
                        type: object
                      InfoBlobMetadata:
                        properties:
                          url:
                            anyOf:
                              - type: string
                              - type: 'null'
                            title: Url
                          title:
                            anyOf:
                              - type: string
                              - type: 'null'
                            title: Title
                          embedding_model_id:
                            format: uuid
                            title: Embedding Model Id
                            type: string
                          size:
                            title: Size
                            type: integer
                        required:
                          - embedding_model_id
                          - size
                        title: InfoBlobMetadata
                        type: object
                      ToolAssistant:
                        properties:
                          id:
                            format: uuid
                            title: Id
                            type: string
                          handle:
                            title: Handle
                            type: string
                        required:
                          - id
                          - handle
                        title: ToolAssistant
                        type: object
                      UseTools:
                        properties:
                          assistants:
                            items:
                              "$ref": "#/components/schemas/ToolAssistant"
                            title: Assistants
                            type: array
                        required:
                          - assistants
                        title: UseTools
                        type: object
                      WebSearchResultPublic:
                        properties:
                          id:
                            format: uuid
                            title: Id
                            type: string
                          title:
                            title: Title
                            type: string
                          url:
                            title: Url
                            type: string
                        required:
                          - id
                          - title
                          - url
                        title: WebSearchResultPublic
                        type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/conversations/{session_id}/":
    get:
      tags:
        - conversations
      summary: Get Conversation
      description: Gets a specific conversation by its session ID
      operationId: get_conversation_api_v1_conversations__session_id___get
      parameters:
        - name: session_id
          in: path
          description: The UUID of the conversation/session
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            description: The UUID of the conversation/session
            title: Session Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - conversations
      summary: Delete Conversation
      description: Deletes a specific conversation
      operationId: delete_conversation_api_v1_conversations__session_id___delete
      parameters:
        - name: session_id
          in: path
          description: The UUID of the conversation/session
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            description: The UUID of the conversation/session
            title: Session Id
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/conversations/{session_id}/feedback/":
    post:
      tags:
        - conversations
      summary: Leave Feedback
      description: Leave feedback for a conversation
      operationId: leave_feedback_api_v1_conversations__session_id__feedback__post
      parameters:
        - name: session_id
          in: path
          description: The UUID of the conversation/session
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            description: The UUID of the conversation/session
            title: Session Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SessionFeedback"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/conversations/{session_id}/title/":
    post:
      tags:
        - conversations
      summary: Set Title Of Conversation
      description: Set the title of a conversation
      operationId: set_title_of_conversation_api_v1_conversations__session_id__title__post
      parameters:
        - name: session_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Session Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/services/":
    get:
      tags:
        - services
      summary: Get Services
      operationId: get_services_api_v1_services__get
      parameters:
        - name: name
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            title: Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_ServicePublicWithUser_"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - services
      summary: Create Service
      description: |-
        Create a service.

        `json_schema` is required if `output_validation` is 'json'.

        Conversely, `json_schema` is not evaluated if `output_format` is not 'json'.

        if `output_format` is omitted, the output will not be formatted.
      operationId: create_service_api_v1_services__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ServiceCreatePublic"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ServicePublicWithUser"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/services/{id}/":
    get:
      tags:
        - services
      summary: Get Service
      operationId: get_service_api_v1_services__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ServicePublicWithUser"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - services
      summary: Update Service
      description: Omitted fields are not updated
      operationId: update_service_api_v1_services__id___post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartialServiceUpdatePublic"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ServicePublicWithUser"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - services
      summary: Delete Service
      operationId: delete_service_api_v1_services__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/services/{id}/run/":
    get:
      tags:
        - services
      summary: Get Service Runs
      operationId: get_service_runs_api_v1_services__id__run__get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_ServiceRun_"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - services
      summary: Run Service
      description: The schema of the output will be depending on the output validation
        of the service
      operationId: run_service_api_v1_services__id__run__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RunService"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ServiceOutput"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/services/{id}/transfer/":
    post:
      tags:
        - services
      summary: Transfer Service To Space
      operationId: transfer_service_to_space_api_v1_services__id__transfer__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransferApplicationRequest"
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/logging/{message_id}/":
    get:
      tags:
        - logging
      summary: Get Logging Details
      operationId: get_logging_details_api_v1_logging__message_id___get
      parameters:
        - name: message_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Message Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageLogging"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/analysis/counts/":
    get:
      tags:
        - analysis
      summary: Get Counts
      description: Total counts.
      operationId: get_counts_api_v1_analysis_counts__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Counts"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/analysis/metadata-statistics/":
    get:
      tags:
        - analysis
      summary: Get Metadata
      description: |-
        Data for analytics.

        Note on datetime parameters:
        - If no time is provided in the datetime, time components default to 00:00:00
      operationId: get_metadata_api_v1_analysis_metadata_statistics__get
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            default: '2025-08-17T11:06:40.857037Z'
            title: Start Date
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            default: '2025-09-16T12:07:40.857045Z'
            title: End Date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MetadataStatistics"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/analysis/assistants/{assistant_id}/":
    get:
      tags:
        - analysis
      summary: Get Most Recent Questions
      description: |-
        Get all the questions asked to an assistant in the last `days_since` days.

        `days_since`: How long back in time to get the questions.

        `from_date`: Start date for filtering questions.
            If no time is provided, time components default to 00:00:00.

        `to_date`: End date for filtering questions.
            If no time is provided, time components default to 00:00:00.

        `include_followups`: If not selected, only the first question of a session is returned.
            Order is by date ascending, but if followups are included they are grouped together
            with their original question.
      operationId: get_most_recent_questions_api_v1_analysis_assistants__assistant_id___get
      parameters:
        - name: assistant_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Assistant Id
        - name: days_since
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            default: 30
            maximum: 90
            minimum: 0
            title: Days Since
        - name: from_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            title: From Date
        - name: to_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            title: To Date
        - name: include_followups
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
            title: Include Followups
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_Message_"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - analysis
      summary: Ask Question About Questions
      description: |-
        Ask a question with the questions asked to an assistant in the last
          `days_since` days as the context.

        `days_since`: How long back in time to get the questions.

        `from_date`: Start date for filtering questions.
            If no time is provided, time components default to 00:00:00.

        `to_date`: End date for filtering questions.
            If no time is provided, time components default to 00:00:00.

        `include_followups`: If not selected, only the first question of a session is returned.
            Order is by date ascending, but if followups are included they are grouped together
            with their original question.
      operationId: ask_question_about_questions_api_v1_analysis_assistants__assistant_id___post
      parameters:
        - name: assistant_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Assistant Id
        - name: days_since
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            default: 30
            maximum: 90
            minimum: 0
            title: Days Since
        - name: from_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            title: From Date
        - name: to_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            title: To Date
        - name: include_followups
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
            title: Include Followups
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AskAnalysis"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/analysis/conversation-insights/":
    get:
      tags:
        - analysis
      summary: Get Conversation Insights
      description: |-
        Get statistics about conversations for either an assistant or a group chat.

        Either assistant_id or group_chat_id must be provided, but not both.
        Start time and end time are optional filters. If no time is provided in the datetime parameters,
        time components default to 00:00:00.
      operationId: get_conversation_insights_api_v1_analysis_conversation_insights__get
      parameters:
        - name: start_time
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            title: Start Time
        - name: end_time
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            title: End Time
        - name: assistant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: 'null'
            title: Assistant Id
        - name: group_chat_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: 'null'
            title: Group Chat Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConversationInsightResponse"
        '403':
          description: Forbidden - Either user is not ADMIN/EDITOR or insights are
            not enabled
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - analysis
      summary: Ask Unified Questions About Questions
      description: |-
        Ask a question about the questions asked to an assistant or group chat.

        This unified endpoint works with both assistants and group chats.
        Either assistant_id or group_chat_id must be provided, but not both.

        Args:
            ask_analysis: Contains the question and streaming preference
            days_since: How long back in time to get the questions
            from_date: Start date to filter questions (overrides days_since).
                If no time is provided, time components default to 00:00:00.
            to_date: End date to filter questions (overrides days_since).
                If no time is provided, time components default to 00:00:00.
            include_followups: If False, only returns first question of each session
            assistant_id: UUID of assistant to analyze questions for
            group_chat_id: UUID of group chat to analyze questions for

        Returns:
            AnalysisAnswer containing the AI response
      operationId: ask_unified_questions_about_questions_api_v1_analysis_conversation_insights__post
      parameters:
        - name: days_since
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            default: 30
            maximum: 90
            minimum: 0
            title: Days Since
        - name: from_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            title: From Date
        - name: to_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            title: To Date
        - name: include_followups
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
            title: Include Followups
        - name: assistant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: 'null'
            title: Assistant Id
        - name: group_chat_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: 'null'
            title: Group Chat Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AskAnalysis"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/analysis/conversation-insights/sessions/":
    get:
      tags:
        - analysis
      summary: Get Conversation Insight Sessions
      description: |-
        Get all sessions for an assistant or group chat across all
        users in the tenant (with insight access).

        This endpoint requires the user to be OWNER or EDITOR,
        and the assistant/group chat must have insight_enabled set to true.

        Args:
            assistant_id: UUID of the assistant (optional)
            group_chat_id: UUID of the group chat (optional)
            limit: Maximum number of sessions to return
            cursor: Datetime to start fetching from. If no time is provided, time defaults to 00:00:00.
            previous: Whether to fetch sessions before or after the cursor
            name_filter: Filter sessions by name
            start_date: Start date to filter sessions (optional).
                If no time is provided, time components default to 00:00:00.
            end_date: End date to filter sessions (optional).
                If no time is provided, time components default to 00:00:00.

        Returns:
            Paginated list of sessions
      operationId: get_conversation_insight_sessions_api_v1_analysis_conversation_insights_sessions__get
      parameters:
        - name: assistant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: 'null'
            title: Assistant Id
        - name: group_chat_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: 'null'
            title: Group Chat Id
        - name: limit
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: integer
                maximum: 100
                minimum: 1
              - type: 'null'
            title: Limit
        - name: cursor
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            title: Cursor
        - name: previous
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
            title: Previous
        - name: name_filter
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Name Filter
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            title: Start Date
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            title: End Date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CursorPaginatedResponse_SessionMetadataPublic_"
        '403':
          description: Forbidden - Either user is not ADMIN/EDITOR or insights are
            not enabled
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/analysis/conversation-insights/sessions/{session_id}/":
    get:
      tags:
        - analysis
      summary: Get Conversation Insight Session
      description: |-
        Get a specific session with insight access.

        This endpoint requires the user to be OWNER or EDITOR, and the assistant/group chat
        must have insight_enabled set to true.

        Args:
            session_id: UUID of the session
            assistant_id: UUID of the assistant (optional)
            group_chat_id: UUID of the group chat (optional)

        Returns:
            Session data
      operationId: get_conversation_insight_session_api_v1_analysis_conversation_insights_sessions__session_id___get
      parameters:
        - name: session_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Session Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SessionPublic"
        '403':
          description: Forbidden - Either user is not ADMIN/EDITOR or insights are
            not enabled
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/jobs/":
    get:
      tags:
        - jobs
      summary: Get Running Jobs
      operationId: get_running_jobs_api_v1_jobs__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_JobPublic_"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/jobs/{id}/":
    get:
      tags:
        - jobs
      summary: Get Job
      operationId: get_job_api_v1_jobs__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/JobPublic"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/user-groups/":
    get:
      tags:
        - user-groups
      summary: Get User Groups
      operationId: get_user_groups_api_v1_user_groups__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_UserGroupPublic_"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - user-groups
      summary: Create User Group
      operationId: create_user_group_api_v1_user_groups__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserGroupCreateRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserGroupPublic"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/user-groups/{id}/":
    get:
      tags:
        - user-groups
      summary: Get User Group By Uuid
      operationId: get_user_group_by_uuid_api_v1_user_groups__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserGroupPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - user-groups
      summary: Update User Group
      operationId: update_user_group_api_v1_user_groups__id___post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserGroupUpdateRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserGroupPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - user-groups
      summary: Delete User Group By Uuid
      operationId: delete_user_group_by_uuid_api_v1_user_groups__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserGroupPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/user-groups/{id}/users/{user_id}/":
    post:
      tags:
        - user-groups
      summary: Add User To User Group
      operationId: add_user_to_user_group_api_v1_user_groups__id__users__user_id___post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: user_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserGroupPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - user-groups
      summary: Delete User From User Group
      operationId: delete_user_from_user_group_api_v1_user_groups__id__users__user_id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: user_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserGroupPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/allowed-origins/":
    get:
      tags:
        - allowed-origins
      summary: Get Origins
      operationId: get_origins_api_v1_allowed_origins__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_AllowedOriginPublic_"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/completion-models/":
    get:
      tags:
        - completion-models
      summary: Get Completion Models
      operationId: get_completion_models_api_v1_completion_models__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_CompletionModelPublic_"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/completion-models/{id}/":
    post:
      tags:
        - completion-models
      summary: Update Completion Model
      operationId: update_completion_model_api_v1_completion_models__id___post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CompletionModelUpdateFlags"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CompletionModelPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/embedding-models/":
    get:
      tags:
        - embedding-models
      summary: Get Embedding Models
      operationId: get_embedding_models_api_v1_embedding_models__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_EmbeddingModelPublic_"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/embedding-models/{id}/":
    get:
      tags:
        - embedding-models
      summary: Get Embedding Model
      operationId: get_embedding_model_api_v1_embedding_models__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmbeddingModelPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - embedding-models
      summary: Update Embedding Model
      operationId: update_embedding_model_api_v1_embedding_models__id___post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmbeddingModelUpdate"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmbeddingModelPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/transcription-models/":
    get:
      tags:
        - transcription-models
      summary: Get Transcription Models
      operationId: get_transcription_models_api_v1_transcription_models__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_TranscriptionModelPublic_"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/transcription-models/{id}/":
    post:
      tags:
        - transcription-models
      summary: Update Transcription Model
      operationId: update_transcription_model_api_v1_transcription_models__id___post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TranscriptionModelUpdate"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TranscriptionModelPublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/files/":
    get:
      tags:
        - files
      summary: Get Files
      operationId: get_files_api_v1_files__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_FilePublic_"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - files
      summary: Upload File
      operationId: upload_file_api_v1_files__post
      requestBody:
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Body_upload_file_api_v1_files__post"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FilePublic"
        '413':
          description: Request Entity Too Large
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/files/{id}/":
    get:
      tags:
        - files
      summary: Get File
      operationId: get_file_api_v1_files__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FilePublic"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - files
      summary: Delete File
      operationId: delete_file_api_v1_files__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/files/{id}/signed-url/":
    post:
      tags:
        - files
      summary: Generate a signed URL for file download
      description: |-
        Generates a signed URL that can be used to download a file without authentication.
            The URL will expire after the specified time period.

            This is useful for sharing files with third parties or for embedding in emails.
      operationId: generate_signed_url_api_v1_files__id__signed_url__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignedURLRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SignedURLResponse"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/files/{id}/download/":
    get:
      tags:
        - files
      summary: Download a file using a signed URL
      description: |-
        Allows downloading a file using a pre-signed URL token.
            No authentication is required, but the token must be valid and not expired.
      operationId: download_file_signed_api_v1_files__id__download__get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: token
          in: query
          description: The signed token for file access
          required: true
          style: form
          explode: true
          schema:
            type: string
            description: The signed token for file access
            title: Token
        - name: range
          in: header
          required: false
          style: simple
          explode: false
          schema:
            type: string
            title: Range
      responses:
        '200':
          description: Successfully downloaded the entire file
        '206':
          description: Successfully downloaded a partial content (range request)
        '400':
          description: Bad request - Invalid token or range requests not supported
            for this file type
        '401':
          description: Unauthorized - Token is invalid or has expired
        '403':
          description: Unauthorized - Not authorized to view this file
        '404':
          description: File content not found or file does not exist
        '416':
          description: Range not satisfiable
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/limits/":
    get:
      tags:
        - limits
      summary: Get Limits
      operationId: get_limits_api_v1_limits__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Limits"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/":
    get:
      tags:
        - spaces
      summary: Get Spaces
      operationId: get_spaces_api_v1_spaces__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_SpaceSparse_"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - spaces
      summary: Create Space
      operationId: create_space_api_v1_spaces__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateSpaceRequest"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpacePublic"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/":
    get:
      tags:
        - spaces
      summary: Get Space
      operationId: get_space_api_v1_spaces__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpacePublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - spaces
      summary: Delete Space
      operationId: delete_space_api_v1_spaces__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    patch:
      tags:
        - spaces
      summary: Update Space
      operationId: update_space_api_v1_spaces__id___patch
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartialUpdateSpaceRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpacePublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/security_classification/{security_classification_id}/impact-analysis/":
    get:
      tags:
        - spaces
      summary: Get Security Classification Impact Analysis
      description: Get a preview of the impact of changing the security classification
        of a space.
      operationId: get_security_classification_impact_analysis_api_v1_spaces__id__security_classification__security_classification_id__impact_analysis__get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: security_classification_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Security Classification Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateSpaceDryRunResponse"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/applications/":
    get:
      tags:
        - spaces
      summary: Get Space Applications
      operationId: get_space_applications_api_v1_spaces__id__applications__get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Applications"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/applications/assistants/":
    post:
      tags:
        - spaces
      summary: Create Space Assistant
      operationId: create_space_assistant_api_v1_spaces__id__applications_assistants__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateSpaceAssistantRequest"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AssistantPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/applications/group-chats/":
    post:
      tags:
        - spaces
      summary: Create Group Chat
      description: Creates a group chat.
      operationId: create_group_chat_api_v1_spaces__id__applications_group_chats__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupChatCreate"
        required: true
      responses:
        '201':
          description: Successful Response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupChatPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/applications/apps/":
    post:
      tags:
        - spaces
      summary: Create App
      operationId: create_app_api_v1_spaces__id__applications_apps__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateSpaceAppRequest"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/applications/services/":
    post:
      tags:
        - spaces
      summary: Create Space Services
      operationId: create_space_services_api_v1_spaces__id__applications_services__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateSpaceServiceRequest"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateSpaceServiceResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/knowledge/":
    get:
      tags:
        - spaces
      summary: Get Space Knowledge
      operationId: get_space_knowledge_api_v1_spaces__id__knowledge__get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Knowledge"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/knowledge/groups/":
    post:
      tags:
        - spaces
      summary: Create Space Groups
      operationId: create_space_groups_api_v1_spaces__id__knowledge_groups__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateSpaceGroupsRequest"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CollectionPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/knowledge/websites/":
    post:
      tags:
        - spaces
      summary: Create Space Websites
      operationId: create_space_websites_api_v1_spaces__id__knowledge_websites__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebsiteCreate"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebsitePublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/knowledge/integrations/{user_integration_id}/":
    post:
      tags:
        - spaces
      summary: Create Space Integration Knowledge
      operationId: create_space_integration_knowledge_api_v1_spaces__id__knowledge_integrations__user_integration_id___post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: user_integration_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: User Integration Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateSpaceIntegrationKnowledge"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/knowledge/{integration_knowledge_id}/":
    delete:
      tags:
        - spaces
      summary: Delete Space Integration Knowledge
      operationId: delete_space_integration_knowledge_api_v1_spaces__id__knowledge__integration_knowledge_id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: integration_knowledge_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Integration Knowledge Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/members/":
    post:
      tags:
        - spaces
      summary: Add Space Member
      operationId: add_space_member_api_v1_spaces__id__members__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AddSpaceMemberRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpaceMember"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/{id}/members/{user_id}/":
    delete:
      tags:
        - spaces
      summary: Remove Space Member
      operationId: remove_space_member_api_v1_spaces__id__members__user_id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: user_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: User Id
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    patch:
      tags:
        - spaces
      summary: Change Role Of Member
      operationId: change_role_of_member_api_v1_spaces__id__members__user_id___patch
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
        - name: user_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: User Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateSpaceMemberRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpaceMember"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/spaces/type/personal/":
    get:
      tags:
        - spaces
      summary: Get Personal Space
      operationId: get_personal_space_api_v1_spaces_type_personal__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpacePublic"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/dashboard/":
    get:
      tags:
        - dashboard
      summary: Get Dashboard
      operationId: get_dashboard_api_v1_dashboard__get
      parameters:
        - name: only_published
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
            title: Only Published
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Dashboard"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/websites/":
    get:
      tags:
        - websites
      summary: Get Websites
      operationId: get_websites_api_v1_websites__get
      parameters:
        - name: for_tenant
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
            title: For Tenant
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_WebsitePublic_"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - websites
      summary: Create Website
      operationId: create_website_api_v1_websites__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebsiteCreateRequestDeprecated"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebsitePublic"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      deprecated: true
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/websites/{id}/":
    get:
      tags:
        - websites
      summary: Get Website
      operationId: get_website_api_v1_websites__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebsitePublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - websites
      summary: Update Website
      operationId: update_website_api_v1_websites__id___post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebsiteUpdate"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebsitePublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - websites
      summary: Delete Website
      operationId: delete_website_api_v1_websites__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/websites/{id}/run/":
    post:
      tags:
        - websites
      summary: Run Crawl
      operationId: run_crawl_api_v1_websites__id__run__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/intric__websites__presentation__website_models__CrawlRunPublic"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/websites/{id}/runs/":
    get:
      tags:
        - websites
      summary: Get Crawl Runs
      operationId: get_crawl_runs_api_v1_websites__id__runs__get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_CrawlRunPublic_"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/websites/{id}/transfer/":
    post:
      tags:
        - websites
      summary: Transfer Website To Space
      operationId: transfer_website_to_space_api_v1_websites__id__transfer__post
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransferRequest"
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/websites/{id}/info-blobs/":
    get:
      tags:
        - websites
      summary: Get Info Blobs
      operationId: get_info_blobs_api_v1_websites__id__info_blobs__get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedResponse_InfoBlobPublicNoText_"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/prompts/{id}/":
    get:
      tags:
        - prompts
      summary: Get Prompt
      operationId: get_prompt_api_v1_prompts__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PromptPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - prompts
      summary: Delete Prompt
      operationId: delete_prompt_api_v1_prompts__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    patch:
      tags:
        - prompts
      summary: Update Prompt Description
      operationId: update_prompt_description_api_v1_prompts__id___patch
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PromptUpdateRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PromptPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/templates/apps/":
    get:
      tags:
        - apps-templates
      summary: Get Templates
      description: Get all app templates
      operationId: get_templates_api_v1_templates_apps__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppTemplateListPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/templates/assistants/":
    get:
      tags:
        - assistants-templates
      summary: Get Templates
      description: Get all assistant templates
      operationId: get_templates_api_v1_templates_assistants__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AssistantTemplateListPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/templates/":
    get:
      tags:
        - templates
      summary: Get Templates
      description: Get all types of templates
      operationId: get_templates_api_v1_templates__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TemplateListPublic"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/storage/":
    get:
      tags:
        - storage
      summary: Get Storage
      operationId: get_storage_api_v1_storage__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StorageModel"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/storage/spaces/":
    get:
      tags:
        - storage
      summary: Get Spaces
      operationId: get_spaces_api_v1_storage_spaces__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StorageInfoModel"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/token-usage/":
    get:
      tags:
        - token-usage
      summary: Get Token Usage
      description: |-
        Get token usage statistics for the specified date range.
        If no dates are provided, returns token usage for the last 30 days.
        Note: If no time is provided in datetime parameters, time components default to 00:00:00.
      operationId: get_token_usage_api_v1_token_usage__get
      parameters:
        - name: start_date
          in: query
          description: Start date for token usage data (defaults to 30 days ago).Time
            defaults to 00:00:00.
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Start date for token usage data (defaults to 30 days ago).Time
              defaults to 00:00:00.
            title: Start Date
        - name: end_date
          in: query
          description: End date for token usage data (defaults to current time).Time
            defaults to 00:00:00.
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: End date for token usage data (defaults to current time).Time
              defaults to 00:00:00.
            title: End Date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenUsageSummary"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/token-usage/users":
    get:
      tags:
        - token-usage
      summary: Get User Token Usage
      description: |-
        Get token usage statistics aggregated by user for the specified date range.
        If no dates are provided, returns token usage for the last 30 days.
        Note: If no time is provided in datetime parameters, time components default to 00:00:00.
      operationId: get_user_token_usage_api_v1_token_usage_users_get
      parameters:
        - name: start_date
          in: query
          description: Start date for token usage data (defaults to 30 days ago).Time
            defaults to 00:00:00.
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Start date for token usage data (defaults to 30 days ago).Time
              defaults to 00:00:00.
            title: Start Date
        - name: end_date
          in: query
          description: End date for token usage data (defaults to current time).Time
            defaults to 00:00:00.
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: End date for token usage data (defaults to current time).Time
              defaults to 00:00:00.
            title: End Date
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            default: 1
            description: Page number for pagination.
            title: Page
        - name: per_page
          in: query
          description: Number of items per page.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            default: 15
            description: Number of items per page.
            title: Per Page
        - name: sort_by
          in: query
          description: Field to sort by.
          required: false
          style: form
          explode: true
          schema:
            "$ref": "#/components/schemas/UserSortBy"
            default: total_tokens
            description: Field to sort by.
        - name: sort_order
          in: query
          description: Sort order (asc or desc).
          required: false
          style: form
          explode: true
          schema:
            type: string
            default: desc
            description: Sort order (asc or desc).
            title: Sort Order
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserTokenUsageSummary"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/token-usage/users/{user_id}/summary":
    get:
      tags:
        - token-usage
      summary: Get User Summary
      description: |-
        Get summary for a specific user without fetching all users.
        If no dates are provided, returns summary for the last 30 days.
        Note: If no time is provided in datetime parameters, time components default to 00:00:00.
      operationId: get_user_summary_api_v1_token_usage_users__user_id__summary_get
      parameters:
        - name: user_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: User Id
        - name: start_date
          in: query
          description: Start date for token usage data (defaults to 30 days ago).Time
            defaults to 00:00:00.
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Start date for token usage data (defaults to 30 days ago).Time
              defaults to 00:00:00.
            title: Start Date
        - name: end_date
          in: query
          description: End date for token usage data (defaults to current time).Time
            defaults to 00:00:00.
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: End date for token usage data (defaults to current time).Time
              defaults to 00:00:00.
            title: End Date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserTokenUsageSummaryDetail"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/token-usage/users/{user_id}":
    get:
      tags:
        - token-usage
      summary: Get User Model Breakdown
      description: |-
        Get model breakdown for a specific user within the specified date range.
        If no dates are provided, returns model breakdown for the last 30 days.
        Note: If no time is provided in datetime parameters, time components default to 00:00:00.
      operationId: get_user_model_breakdown_api_v1_token_usage_users__user_id__get
      parameters:
        - name: user_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: User Id
        - name: start_date
          in: query
          description: Start date for token usage data (defaults to 30 days ago).Time
            defaults to 00:00:00.
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Start date for token usage data (defaults to 30 days ago).Time
              defaults to 00:00:00.
            title: Start Date
        - name: end_date
          in: query
          description: End date for token usage data (defaults to current time).Time
            defaults to 00:00:00.
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: End date for token usage data (defaults to current time).Time
              defaults to 00:00:00.
            title: End Date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenUsageSummary"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/security-classifications/":
    get:
      tags:
        - security-classifications
      summary: List Security Classifications
      description: |-
        List all security classifications ordered by security classification level.
        Returns:
            List of security classifications ordered by security classification level.
        Raises:
            403: If the user doesn't have permission to list security classifications.
      operationId: list_security_classifications_api_v1_security_classifications__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecurityClassificationResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - security-classifications
      summary: Create Security Classification
      description: |-
        Create a new security classification for the current tenant.
        Args:
            request: The security classification creation request.
        Returns:
            The created security classification.
        Raises:
            400: If the request is invalid. Names must be unique.
      operationId: create_security_classification_api_v1_security_classifications__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SecurityClassificationCreatePublic"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecurityClassificationPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    patch:
      tags:
        - security-classifications
      summary: Update Security Classification Levels
      description: |-
        Update the security levels of security classifications.
        Args:
            request: Security classifications to update.
        Returns:
            The updated security classifications.
        Raises:
            400: If the request is invalid.
            403: If the user doesn't have permission to update the security classification.
            404: If the security classification doesn't exist or belongs to a different tenant.
      operationId: update_security_classification_levels_api_v1_security_classifications__patch
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SecurityClassificationLevelsUpdateRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecurityClassificationsListPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/security-classifications/{id}/":
    get:
      tags:
        - security-classifications
      summary: Get Security Classification
      description: |-
        Get a security classification by ID.
        Args:
            id: The ID of the security classification.
        Returns:
            The security classification.
        Raises:
            403: If the user doesn't have permission to view the security classification.
            404: If the security classification doesn't exist or belongs to a different tenant.
      operationId: get_security_classification_api_v1_security_classifications__id___get
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecurityClassificationPublic"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - security-classifications
      summary: Delete Security Classification
      description: |-
        Delete a security classification.
        Args:
            id: The ID of the security classification to delete.
        Raises:
            403: If the user doesn't have permission to delete the security classification.
            404: If the security classification doesn't exist.
      operationId: delete_security_classification_api_v1_security_classifications__id___delete
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      responses:
        '204':
          description: Successful Response
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    patch:
      tags:
        - security-classifications
      summary: Update Security Classification
      description: |-
        Update a single security classification's name and/or description.

        This endpoint allows updating just the name and description of a security classification
        without changing its security level.

        Args:
            id: The ID of the security classification to update
            request: The update request containing new name and/or description

        Returns:
            The updated security classification

        Raises:
            400: If the request is invalid or security is disabled. Names must be unique.
            403: If the user doesn't have permission to update the classification
            404: If the security classification doesn't exist
      operationId: update_security_classification_api_v1_security_classifications__id___patch
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SecurityClassificationSingleUpdate"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecurityClassificationPublic"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/security-classifications/enable/":
    post:
      tags:
        - security-classifications
      summary: Toggle Security Classifications
      description: |-
        Enable or disable security classifications for the current tenant.

        Args:
            request: Contains a flag to enable or disable security classifications.

        Returns:
            The updated tenant information with security_enabled status.

        Raises:
            400: If the request is invalid.
            403: If the user doesn't have permission to update tenant settings.
      operationId: toggle_security_classifications_api_v1_security_classifications_enable__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SecurityEnableRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecurityEnableResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/integrations/":
    get:
      tags:
        - integrations
      summary: Get Integrations
      operationId: get_integrations_api_v1_integrations__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/IntegrationList"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/integrations/tenant/":
    get:
      tags:
        - integrations
      summary: Get Tenant Integrations
      operationId: get_tenant_integrations_api_v1_integrations_tenant__get
      parameters:
        - name: filter
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - "$ref": "#/components/schemas/TenantIntegrationFilter"
              - type: 'null'
            title: Filter
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TenantIntegrationList"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/integrations/tenant/{integration_id}/":
    post:
      tags:
        - integrations
      summary: Add Tenant Integration
      operationId: add_tenant_integration_api_v1_integrations_tenant__integration_id___post
      parameters:
        - name: integration_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Integration Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TenantIntegration"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/integrations/tenant/{tenant_integration_id}/":
    delete:
      tags:
        - integrations
      summary: Remove Tenant Integration
      operationId: remove_tenant_integration_api_v1_integrations_tenant__tenant_integration_id___delete
      parameters:
        - name: tenant_integration_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Tenant Integration Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/integrations/me/":
    get:
      tags:
        - integrations
      summary: Get User Integrations
      operationId: get_user_integrations_api_v1_integrations_me__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserIntegrationList"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/integrations/users/{user_integration_id}/":
    delete:
      tags:
        - integrations
      summary: Disconnect User Integration
      operationId: disconnect_user_integration_api_v1_integrations_users__user_integration_id___delete
      parameters:
        - name: user_integration_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: User Integration Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/integrations/{user_integration_id}/preview/":
    get:
      tags:
        - integrations
      summary: Get Integration Preview
      operationId: get_integration_preview_api_v1_integrations__user_integration_id__preview__get
      parameters:
        - name: user_integration_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: User Integration Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/IntegrationPreviewDataList"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/integrations/{integration_id}/":
    get:
      tags:
        - integrations
      summary: Get Integration By Id
      operationId: get_integration_by_id_api_v1_integrations__integration_id___get
      parameters:
        - name: integration_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Integration Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Integration"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/ai-models/":
    get:
      tags:
        - ai-models
      summary: Get all AI models
      description: Get all completion, embedding, and transcription models.
      operationId: get_models_api_v1_ai_models__get
      parameters:
        - name: space_id
          in: query
          description: Optional space ID to provide security classification status.
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: 'null'
            description: Optional space ID to provide security classification status.
            title: Space Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModelsPresentation"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/integrations/auth/{tenant_integration_id}/url/":
    get:
      tags:
        - integrations
      summary: Gen Url
      operationId: gen_url_api_v1_integrations_auth__tenant_integration_id__url__get
      parameters:
        - name: tenant_integration_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Tenant Integration Id
        - name: state
          in: query
          required: false
          style: form
          explode: true
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: State
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AuthUrlPublic"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/integrations/auth/callback/token/":
    post:
      tags:
        - integrations
      summary: On Auth Callback
      operationId: on_auth_callback_api_v1_integrations_auth_callback_token__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AuthCallbackParams"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserIntegration"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/api-docs":
    get:
      tags:
        - Documentation
      summary: Get OpenAPI specification
      description: Returns the complete OpenAPI 3.0 specification for this API. Compatible
        with WSO2 API Manager.
      operationId: get_api_documentation_api_v1_api_docs_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - default: []
      x-auth-type: None
      x-throttling-tier: Unlimited
  "/roles/permissions/":
    get:
      tags:
        - roles
      summary: Get Permissions
      operationId: get_permissions_api_v1_roles_permissions__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PermissionPublic"
                title: Response Get Permissions Api V1 Roles Permissions  Get
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/roles/":
    get:
      tags:
        - roles
      summary: Get Roles
      operationId: get_roles_api_v1_roles__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RolesPaginatedResponse"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - roles
      summary: Create Role
      operationId: create_role_api_v1_roles__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RoleCreateRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RolePublic"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/roles/{role_id}/":
    get:
      tags:
        - roles
      summary: Get Role By Id
      operationId: get_role_by_id_api_v1_roles__role_id___get
      parameters:
        - name: role_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Role Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RolePublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    post:
      tags:
        - roles
      summary: Update Role
      operationId: update_role_api_v1_roles__role_id___post
      parameters:
        - name: role_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Role Id
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RoleUpdateRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RolePublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
    delete:
      tags:
        - roles
      summary: Delete Role By Id
      operationId: delete_role_by_id_api_v1_roles__role_id___delete
      parameters:
        - name: role_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
            title: Role Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RolePublic"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralError"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/healthz":
    get:
      summary: Get Healthz
      operationId: get_healthz_healthz_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
  "/version":
    get:
      summary: Get Version
      operationId: get_version_version_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - OAuth2PasswordBearer: []
        - APIKeyHeader: []
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
components:
  schemas:
    AcceptedFileType:
      type: object
      properties:
        mimetype:
          type: string
          title: Mimetype
        size_limit:
          type: integer
          title: Size Limit
      required:
        - mimetype
        - size_limit
      title: AcceptedFileType
    AccessToken:
      type: object
      properties:
        access_token:
          type: string
          title: Access Token
        token_type:
          type: string
          title: Token Type
      required:
        - access_token
        - token_type
      title: AccessToken
    AddSpaceMemberRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        role:
          "$ref": "#/components/schemas/SpaceRoleValue"
      required:
        - id
        - role
      title: AddSpaceMemberRequest
    AdditionalField:
      type: object
      properties:
        type:
          "$ref": "#/components/schemas/WizardType"
        value:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
              format: uuid
          title: Value
      required:
        - type
        - value
      title: AdditionalField
    AllowedOriginCreate:
      type: object
      properties:
        url:
          type: string
          title: Url
        tenant_id:
          type: string
          format: uuid
          title: Tenant Id
      required:
        - tenant_id
        - url
      title: AllowedOriginCreate
    AllowedOriginInDB:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        url:
          type: string
          title: Url
        tenant_id:
          type: string
          format: uuid
          title: Tenant Id
      required:
        - id
        - tenant_id
        - url
      title: AllowedOriginInDB
    AllowedOriginPublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        url:
          type: string
          title: Url
      required:
        - id
        - url
      title: AllowedOriginPublic
    ApiKey:
      type: object
      properties:
        truncated_key:
          type: string
          title: Truncated Key
        key:
          type: string
          title: Key
      required:
        - key
        - truncated_key
      title: ApiKey
    ApiKeyInDB:
      type: object
      properties:
        truncated_key:
          type: string
          title: Truncated Key
        key:
          type: string
          title: Key
        user_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: User Id
        assistant_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Assistant Id
      required:
        - assistant_id
        - key
        - truncated_key
        - user_id
      title: ApiKeyInDB
    AppInTemplatePublic:
      type: object
      properties:
        name:
          type: string
          title: Name
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModelPublicAppTemplate"
            - type: 'null'
        completion_model_kwargs:
          type: object
          additionalProperties: true
          title: Completion Model Kwargs
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptPublicAppTemplate"
            - type: 'null'
        input_description:
          anyOf:
            - type: string
            - type: 'null'
          title: Input Description
        input_type:
          type: string
          title: Input Type
      required:
        - completion_model
        - completion_model_kwargs
        - input_description
        - input_type
        - name
        - prompt
      title: AppInTemplatePublic
    AppPublic:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        input_fields:
          type: array
          items:
            "$ref": "#/components/schemas/InputFieldPublic"
          title: Input Fields
        attachments:
          type: array
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Attachments
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptPublic"
            - type: 'null'
        completion_model:
          "$ref": "#/components/schemas/CompletionModelSparse"
        completion_model_kwargs:
          "$ref": "#/components/schemas/ModelKwargs"
        allowed_attachments:
          "$ref": "#/components/schemas/FileRestrictions"
        published:
          type: boolean
          title: Published
        transcription_model:
          "$ref": "#/components/schemas/TranscriptionModelPublic"
        data_retention_days:
          anyOf:
            - type: integer
            - type: 'null'
          title: Data Retention Days
      required:
        - allowed_attachments
        - attachments
        - completion_model
        - completion_model_kwargs
        - description
        - id
        - input_fields
        - name
        - prompt
        - published
        - transcription_model
      title: AppPublic
    AppRunInput:
      type: object
      properties:
        files:
          type: array
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Files
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      required:
        - files
        - text
      title: AppRunInput
    AppRunPublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        input:
          "$ref": "#/components/schemas/AppRunInput"
        status:
          "$ref": "#/components/schemas/Status"
        finished_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Finished At
        user:
          "$ref": "#/components/schemas/UserSparse"
        output:
          anyOf:
            - type: string
            - type: 'null'
          title: Output
      required:
        - finished_at
        - id
        - input
        - output
        - status
        - user
      title: AppRunPublic
    AppRunSparse:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        input:
          "$ref": "#/components/schemas/AppRunInput"
        status:
          "$ref": "#/components/schemas/Status"
        finished_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Finished At
        user:
          "$ref": "#/components/schemas/UserSparse"
      required:
        - finished_at
        - id
        - input
        - status
        - user
      title: AppRunSparse
    AppSparse:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        published:
          type: boolean
          title: Published
        user_id:
          type: string
          format: uuid
          title: User Id
      required:
        - id
        - name
        - published
        - user_id
      title: AppSparse
    AppTemplateListPublic:
      type: object
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/AppTemplatePublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: AppTemplateListPublic
    AppTemplateOrganization:
      type: object
      properties:
        name:
          type: string
          title: Name
      required:
        - name
      title: AppTemplateOrganization
    AppTemplatePublic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        category:
          type: string
          title: Category
        app:
          "$ref": "#/components/schemas/AppInTemplatePublic"
        type:
          type: string
          const: app
          title: Type
        wizard:
          "$ref": "#/components/schemas/AppTemplateWizard"
        organization:
          "$ref": "#/components/schemas/AppTemplateOrganization"
      required:
        - app
        - category
        - created_at
        - description
        - id
        - name
        - organization
        - type
        - updated_at
        - wizard
      title: AppTemplatePublic
    AppTemplateWizard:
      type: object
      properties:
        attachments:
          anyOf:
            - "$ref": "#/components/schemas/TemplateWizard"
            - type: 'null'
        collections:
          anyOf:
            - "$ref": "#/components/schemas/TemplateWizard"
            - type: 'null'
      required:
        - attachments
        - collections
      title: AppTemplateWizard
    AppUpdateRequest:
      type: object
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        input_fields:
          anyOf:
            - type: array
              items:
                "$ref": "#/components/schemas/InputField"
            - type: 'null'
          title: Input Fields
        attachments:
          anyOf:
            - type: array
              items:
                "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          title: Attachments
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptCreate"
            - type: 'null'
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
        transcription_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
        data_retention_days:
          anyOf:
            - type: integer
            - type: 'null'
          default: NOT_PROVIDED
          title: Data Retention Days
      title: AppUpdateRequest
    Applications:
      type: object
      properties:
        assistants:
          "$ref": "#/components/schemas/PaginatedPermissions_AssistantSparse_"
        group_chats:
          "$ref": "#/components/schemas/PaginatedPermissions_GroupChatSparse_"
        services:
          "$ref": "#/components/schemas/PaginatedPermissions_ServiceSparse_"
        apps:
          "$ref": "#/components/schemas/PaginatedPermissions_AppSparse_"
      required:
        - apps
        - assistants
        - group_chats
        - services
      title: Applications
    AskAnalysis:
      type: object
      properties:
        question:
          type: string
          title: Question
        completion_model_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Completion Model Id
        stream:
          type: boolean
          default: false
          title: Stream
      required:
        - question
      title: AskAnalysis
    AskAssistant:
      type: object
      properties:
        question:
          type: string
          title: Question
        session_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Session Id
        files:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ModelId"
          maxItems: 1
          title: Files
        stream:
          type: boolean
          default: false
          title: Stream
        tools:
          anyOf:
            - "$ref": "#/components/schemas/UseTools"
            - type: 'null'
      required:
        - question
      title: AskAssistant
    AskResponse:
      type: object
      properties:
        session_id:
          type: string
          format: uuid
          title: Session Id
        question:
          type: string
          title: Question
        answer:
          type: string
          title: Answer
        files:
          type: array
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Files
        generated_files:
          type: array
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Generated Files
        references:
          type: array
          items:
            "$ref": "#/components/schemas/InfoBlobAskAssistantPublic"
          title: References
        tools:
          "$ref": "#/components/schemas/UseTools"
        web_search_references:
          type: array
          items:
            "$ref": "#/components/schemas/WebSearchResultPublic"
          title: Web Search References
        model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModelPublic"
            - type: 'null'
      required:
        - answer
        - files
        - generated_files
        - question
        - references
        - session_id
        - tools
        - web_search_references
      title: AskResponse
    AssistantCreatePublic:
      type: object
      properties:
        name:
          type: string
          title: Name
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
        logging_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
          title: Logging Enabled
        space_id:
          type: string
          format: uuid
          title: Space Id
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptCreate"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
        groups:
          type: array
          default: []
          deprecated: true
          description: This field is deprecated and will be ignored
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Groups
        websites:
          type: array
          default: []
          deprecated: true
          description: This field is deprecated and will be ignored
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Websites
        integration_knowledge_list:
          type: array
          default: []
          deprecated: true
          description: This field is deprecated and will be ignored
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Integration Knowledge List
        guardrail:
          anyOf:
            - "$ref": "#/components/schemas/AssistantGuard"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
      required:
        - name
        - space_id
      title: AssistantCreatePublic
    AssistantGuard:
      type: object
      properties:
        guardrail_active:
          type: boolean
          default: true
          title: Guardrail Active
        guardrail_string:
          type: string
          default: ''
          title: Guardrail String
        on_fail_message:
          type: string
          default: Jag kan tyvärr inte svara på det. Fråga gärna något annat!
          title: On Fail Message
      title: AssistantGuard
    AssistantInTemplatePublic:
      type: object
      properties:
        name:
          type: string
          title: Name
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModelPublicAssistantTemplate"
            - type: 'null'
        completion_model_kwargs:
          type: object
          additionalProperties: true
          default: {}
          title: Completion Model Kwargs
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptPublicAssistantTemplate"
            - type: 'null'
      required:
        - completion_model
        - name
        - prompt
      title: AssistantInTemplatePublic
    AssistantMetadata:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
      required:
        - created_at
        - id
      title: AssistantMetadata
    AssistantPublic:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptPublic"
            - type: 'null'
        space_id:
          type: string
          format: uuid
          title: Space Id
        completion_model_kwargs:
          "$ref": "#/components/schemas/ModelKwargs"
        logging_enabled:
          type: boolean
          title: Logging Enabled
        attachments:
          type: array
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Attachments
        allowed_attachments:
          "$ref": "#/components/schemas/FileRestrictions"
        groups:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionPublic"
          title: Groups
        websites:
          type: array
          items:
            "$ref": "#/components/schemas/WebsitePublic"
          title: Websites
        integration_knowledge_list:
          type: array
          items:
            "$ref": "#/components/schemas/IntegrationKnowledgePublic"
          title: Integration Knowledge List
        completion_model:
          "$ref": "#/components/schemas/CompletionModelSparse"
        published:
          type: boolean
          default: false
          title: Published
        user:
          "$ref": "#/components/schemas/UserSparse"
        tools:
          "$ref": "#/components/schemas/UseTools"
        type:
          "$ref": "#/components/schemas/AssistantType"
        description:
          anyOf:
            - type: string
            - type: 'null'
          description: A description of the assitant that will be used as default
            description in GroupChatAssistantPublic
          example: This is a helpful AI assistant
          title: Description
        insight_enabled:
          type: boolean
          description: Whether insights are enabled for this assistant. If enabled,
            users with appropriate permissions can see all sessions for this assistant.
          title: Insight Enabled
        data_retention_days:
          anyOf:
            - type: integer
            - type: 'null'
          description: Number of days to retain data for this assistant
          title: Data Retention Days
        metadata_json:
          anyOf:
            - type: object
              additionalProperties: true
            - type: 'null'
          description: Metadata for the assistant
          title: Metadata Json
      required:
        - allowed_attachments
        - attachments
        - completion_model
        - completion_model_kwargs
        - groups
        - id
        - insight_enabled
        - integration_knowledge_list
        - logging_enabled
        - name
        - space_id
        - tools
        - type
        - user
        - websites
      title: AssistantPublic
    AssistantSparse:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        completion_model_kwargs:
          "$ref": "#/components/schemas/ModelKwargs"
          default: {}
        logging_enabled:
          type: boolean
          default: false
          title: Logging Enabled
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        user_id:
          type: string
          format: uuid
          title: User Id
        published:
          type: boolean
          default: false
          title: Published
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        metadata_json:
          anyOf:
            - type: object
              additionalProperties: true
            - type: 'null'
          description: Metadata for the assistant
          title: Metadata Json
        type:
          "$ref": "#/components/schemas/AssistantType"
      required:
        - id
        - name
        - type
        - user_id
      title: AssistantSparse
    AssistantTemplateListPublic:
      type: object
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/AssistantTemplatePublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: AssistantTemplateListPublic
    AssistantTemplateOrganization:
      type: object
      properties:
        name:
          type: string
          title: Name
      required:
        - name
      title: AssistantTemplateOrganization
    AssistantTemplatePublic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        category:
          type: string
          title: Category
        assistant:
          "$ref": "#/components/schemas/AssistantInTemplatePublic"
        type:
          type: string
          const: assistant
          title: Type
        wizard:
          "$ref": "#/components/schemas/AssistantTemplateWizard"
        organization:
          "$ref": "#/components/schemas/AssistantTemplateOrganization"
      required:
        - assistant
        - category
        - created_at
        - description
        - id
        - name
        - organization
        - type
        - updated_at
        - wizard
      title: AssistantTemplatePublic
    AssistantTemplateWizard:
      type: object
      properties:
        attachments:
          anyOf:
            - "$ref": "#/components/schemas/TemplateWizard"
            - type: 'null'
        collections:
          anyOf:
            - "$ref": "#/components/schemas/TemplateWizard"
            - type: 'null'
      required:
        - attachments
        - collections
      title: AssistantTemplateWizard
    AssistantType:
      type: string
      enum:
        - assistant
        - default-assistant
      title: AssistantType
    AttachmentLimits:
      type: object
      properties:
        formats:
          type: array
          items:
            "$ref": "#/components/schemas/FormatLimit"
          title: Formats
        max_in_question:
          type: integer
          title: Max In Question
      required:
        - formats
        - max_in_question
      title: AttachmentLimits
    AuthCallbackParams:
      type: object
      properties:
        auth_code:
          type: string
          title: Auth Code
        tenant_integration_id:
          type: string
          format: uuid
          title: Tenant Integration Id
      required:
        - auth_code
        - tenant_integration_id
      title: AuthCallbackParams
    AuthUrlPublic:
      type: object
      properties:
        auth_url:
          type: string
          title: Auth Url
      required:
        - auth_url
      title: AuthUrlPublic
    Body_Login_api_v1_users_login_token__post:
      type: object
      properties:
        grant_type:
          anyOf:
            - type: string
              pattern: password
            - type: 'null'
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        scope:
          type: string
          default: ''
          title: Scope
        client_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Client Id
        client_secret:
          anyOf:
            - type: string
            - type: 'null'
          title: Client Secret
      required:
        - password
        - username
      title: Body_Login_api_v1_users_login_token__post
    Body_upload_file_api_v1_files__post:
      type: object
      properties:
        upload_file:
          type: string
          format: binary
          title: Upload File
      required:
        - upload_file
      title: Body_upload_file_api_v1_files__post
    Body_upload_file_api_v1_groups__id__info_blobs_upload__post:
      type: object
      properties:
        file:
          type: string
          format: binary
          title: File
      required:
        - file
      title: Body_upload_file_api_v1_groups__id__info_blobs_upload__post
    CollectionMetadata:
      type: object
      properties:
        num_info_blobs:
          type: integer
          title: Num Info Blobs
        size:
          type: integer
          title: Size
      required:
        - num_info_blobs
        - size
      title: CollectionMetadata
    CollectionPublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        name:
          type: string
          title: Name
        embedding_model:
          "$ref": "#/components/schemas/EmbeddingModelPublic"
        metadata:
          "$ref": "#/components/schemas/CollectionMetadata"
      required:
        - embedding_model
        - id
        - metadata
        - name
      title: CollectionPublic
    CollectionUpdate:
      type: object
      properties:
        name:
          type: string
          title: Name
      required:
        - name
      title: CollectionUpdate
    CompletionModel:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        nickname:
          type: string
          title: Nickname
        family:
          "$ref": "#/components/schemas/ModelFamily"
        token_limit:
          type: integer
          title: Token Limit
        is_deprecated:
          type: boolean
          title: Is Deprecated
        nr_billion_parameters:
          anyOf:
            - type: integer
            - type: 'null'
          title: Nr Billion Parameters
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          "$ref": "#/components/schemas/ModelStability"
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        deployment_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Deployment Name
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        vision:
          type: boolean
          title: Vision
        reasoning:
          type: boolean
          title: Reasoning
        base_url:
          anyOf:
            - type: string
            - type: 'null'
          title: Base Url
        litellm_model_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Litellm Model Name
        is_org_enabled:
          type: boolean
          default: false
          title: Is Org Enabled
        is_org_default:
          type: boolean
          default: false
          title: Is Org Default
      required:
        - family
        - hosting
        - id
        - is_deprecated
        - name
        - nickname
        - reasoning
        - stability
        - token_limit
        - vision
      title: CompletionModel
    CompletionModelPublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        nickname:
          type: string
          title: Nickname
        family:
          "$ref": "#/components/schemas/ModelFamily"
        token_limit:
          type: integer
          title: Token Limit
        is_deprecated:
          type: boolean
          title: Is Deprecated
        nr_billion_parameters:
          anyOf:
            - type: integer
            - type: 'null'
          title: Nr Billion Parameters
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          "$ref": "#/components/schemas/ModelStability"
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        deployment_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Deployment Name
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        vision:
          type: boolean
          title: Vision
        reasoning:
          type: boolean
          title: Reasoning
        base_url:
          anyOf:
            - type: string
            - type: 'null'
          title: Base Url
        litellm_model_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Litellm Model Name
        is_org_enabled:
          type: boolean
          default: false
          title: Is Org Enabled
        is_org_default:
          type: boolean
          default: false
          title: Is Org Default
        can_access:
          type: boolean
          default: false
          title: Can Access
        is_locked:
          type: boolean
          default: true
          title: Is Locked
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
      required:
        - family
        - hosting
        - id
        - is_deprecated
        - name
        - nickname
        - reasoning
        - stability
        - token_limit
        - vision
      title: CompletionModelPublic
    CompletionModelPublicAppTemplate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
      required:
        - id
      title: CompletionModelPublicAppTemplate
    CompletionModelPublicAssistantTemplate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
      required:
        - id
      title: CompletionModelPublicAssistantTemplate
    CompletionModelSecurityStatus:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        nickname:
          type: string
          title: Nickname
        family:
          "$ref": "#/components/schemas/ModelFamily"
        token_limit:
          type: integer
          title: Token Limit
        is_deprecated:
          type: boolean
          title: Is Deprecated
        nr_billion_parameters:
          anyOf:
            - type: integer
            - type: 'null'
          title: Nr Billion Parameters
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          "$ref": "#/components/schemas/ModelStability"
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        deployment_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Deployment Name
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        vision:
          type: boolean
          title: Vision
        reasoning:
          type: boolean
          title: Reasoning
        base_url:
          anyOf:
            - type: string
            - type: 'null'
          title: Base Url
        litellm_model_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Litellm Model Name
        is_org_enabled:
          type: boolean
          default: false
          title: Is Org Enabled
        is_org_default:
          type: boolean
          default: false
          title: Is Org Default
        can_access:
          type: boolean
          default: false
          title: Can Access
        is_locked:
          type: boolean
          default: true
          title: Is Locked
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
        meets_security_classification:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Meets Security Classification
      required:
        - family
        - hosting
        - id
        - is_deprecated
        - name
        - nickname
        - reasoning
        - stability
        - token_limit
        - vision
      title: CompletionModelSecurityStatus
    CompletionModelSparse:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        nickname:
          type: string
          title: Nickname
        family:
          "$ref": "#/components/schemas/ModelFamily"
        token_limit:
          type: integer
          title: Token Limit
        is_deprecated:
          type: boolean
          title: Is Deprecated
        nr_billion_parameters:
          anyOf:
            - type: integer
            - type: 'null'
          title: Nr Billion Parameters
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          "$ref": "#/components/schemas/ModelStability"
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        deployment_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Deployment Name
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        vision:
          type: boolean
          title: Vision
        reasoning:
          type: boolean
          title: Reasoning
        base_url:
          anyOf:
            - type: string
            - type: 'null'
          title: Base Url
        litellm_model_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Litellm Model Name
      required:
        - family
        - hosting
        - id
        - is_deprecated
        - name
        - nickname
        - reasoning
        - stability
        - token_limit
        - vision
      title: CompletionModelSparse
    CompletionModelUpdateFlags:
      type: object
      properties:
        is_org_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Org Enabled
        is_org_default:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Org Default
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          default: NOT_PROVIDED
          title: Security Classification
      title: CompletionModelUpdateFlags
    ContentDisposition:
      type: string
      enum:
        - attachment
        - inline
      title: ContentDisposition
    ConversationInsightResponse:
      type: object
      properties:
        total_conversations:
          type: integer
          title: Total Conversations
        total_questions:
          type: integer
          title: Total Questions
      required:
        - total_conversations
        - total_questions
      title: ConversationInsightResponse
    ConversationRequest:
      type: object
      description: |-
        A unified model for asking questions to either assistants or group chats.

        Either session_id, assistant_id, or group_chat_id must be provided.
        If session_id is provided, the conversation will continue with the existing session.

        For group chats:
        - If tools.assistants contains an assistant, that specific assistant will be targeted
          (requires the group chat to have allow_mentions=True).
        - If no assistant is targeted, the most appropriate assistant will be selected.
      properties:
        question:
          type: string
          title: Question
        session_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Session Id
        assistant_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Assistant Id
        group_chat_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Group Chat Id
        files:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ModelId"
          maxItems: 1
          title: Files
        stream:
          type: boolean
          default: false
          title: Stream
        tools:
          anyOf:
            - "$ref": "#/components/schemas/UseTools"
            - type: 'null'
        use_web_search:
          type: boolean
          default: false
          title: Use Web Search
      required:
        - question
      title: ConversationRequest
    Counts:
      type: object
      properties:
        assistants:
          type: integer
          title: Assistants
        sessions:
          type: integer
          title: Sessions
        questions:
          type: integer
          title: Questions
      required:
        - assistants
        - questions
        - sessions
      title: Counts
    CrawlType:
      type: string
      enum:
        - crawl
        - sitemap
      title: CrawlType
    CreateGroupRequest:
      type: object
      properties:
        name:
          type: string
          title: Name
        embedding_model:
          "$ref": "#/components/schemas/ModelId"
      required:
        - embedding_model
        - name
      title: CreateGroupRequest
    CreateSpaceAppRequest:
      type: object
      properties:
        name:
          type: string
          title: Name
        from_template:
          anyOf:
            - "$ref": "#/components/schemas/TemplateCreate"
            - type: 'null'
      required:
        - name
      title: CreateSpaceAppRequest
    CreateSpaceAssistantRequest:
      type: object
      properties:
        name:
          type: string
          title: Name
        from_template:
          anyOf:
            - "$ref": "#/components/schemas/TemplateCreate"
            - type: 'null'
      required:
        - name
      title: CreateSpaceAssistantRequest
    CreateSpaceGroupsRequest:
      type: object
      properties:
        name:
          type: string
          title: Name
        embedding_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
      required:
        - name
      title: CreateSpaceGroupsRequest
    CreateSpaceIntegrationKnowledge:
      type: object
      properties:
        name:
          type: string
          title: Name
        embedding_model:
          "$ref": "#/components/schemas/ModelId"
        url:
          type: string
          title: Url
        key:
          anyOf:
            - type: string
            - type: 'null'
          title: Key
      required:
        - embedding_model
        - name
        - url
      title: CreateSpaceIntegrationKnowledge
    CreateSpaceRequest:
      type: object
      properties:
        name:
          type: string
          title: Name
      required:
        - name
      title: CreateSpaceRequest
    CreateSpaceServiceRequest:
      type: object
      properties:
        name:
          type: string
          title: Name
      required:
        - name
      title: CreateSpaceServiceRequest
    CreateSpaceServiceResponse:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        prompt:
          type: string
          title: Prompt
        completion_model_kwargs:
          "$ref": "#/components/schemas/ModelKwargs"
        output_format:
          anyOf:
            - type: string
              enum:
                - json
                - list
                - boolean
            - type: 'null'
          title: Output Format
        json_schema:
          anyOf:
            - type: object
              additionalProperties: true
            - type: 'null'
          title: Json Schema
        groups:
          type: array
          items:
            "$ref": "#/components/schemas/GroupPublicWithMetadata"
          title: Groups
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModelSparse"
            - type: 'null'
        published:
          type: boolean
          default: false
          title: Published
        user:
          "$ref": "#/components/schemas/UserSparse"
      required:
        - completion_model
        - completion_model_kwargs
        - groups
        - id
        - name
        - prompt
        - user
      title: CreateSpaceServiceResponse
    CursorPaginatedResponse_SessionMetadataPublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/SessionMetadataPublic"
          title: Items
        limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Limit
        next_cursor:
          anyOf:
            - type: string
              format: date-time
            - type: string
            - type: 'null'
          title: Next Cursor
        previous_cursor:
          anyOf:
            - type: string
              format: date-time
            - type: string
            - type: 'null'
          title: Previous Cursor
        total_count:
          type: integer
          title: Total Count
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
        - total_count
      title: CursorPaginatedResponse[SessionMetadataPublic]
    CursorPaginatedResponse_UserSparse_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/UserSparse"
          title: Items
        limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Limit
        next_cursor:
          anyOf:
            - type: string
              format: date-time
            - type: string
            - type: 'null'
          title: Next Cursor
        previous_cursor:
          anyOf:
            - type: string
              format: date-time
            - type: string
            - type: 'null'
          title: Previous Cursor
        total_count:
          type: integer
          title: Total Count
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
        - total_count
      title: CursorPaginatedResponse[UserSparse]
    Dashboard:
      type: object
      properties:
        spaces:
          "$ref": "#/components/schemas/PaginatedResponse_SpaceDashboard_"
      required:
        - spaces
      title: Dashboard
    DefaultAssistant:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptPublic"
            - type: 'null'
        space_id:
          type: string
          format: uuid
          title: Space Id
        completion_model_kwargs:
          "$ref": "#/components/schemas/ModelKwargs"
        logging_enabled:
          type: boolean
          title: Logging Enabled
        attachments:
          type: array
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Attachments
        allowed_attachments:
          "$ref": "#/components/schemas/FileRestrictions"
        groups:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionPublic"
          title: Groups
        websites:
          type: array
          items:
            "$ref": "#/components/schemas/WebsitePublic"
          title: Websites
        integration_knowledge_list:
          type: array
          items:
            "$ref": "#/components/schemas/IntegrationKnowledgePublic"
          title: Integration Knowledge List
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModelSparse"
            - type: 'null'
        published:
          type: boolean
          default: false
          title: Published
        user:
          "$ref": "#/components/schemas/UserSparse"
        tools:
          "$ref": "#/components/schemas/UseTools"
        type:
          "$ref": "#/components/schemas/AssistantType"
        description:
          anyOf:
            - type: string
            - type: 'null'
          description: A description of the assitant that will be used as default
            description in GroupChatAssistantPublic
          example: This is a helpful AI assistant
          title: Description
        insight_enabled:
          type: boolean
          default: false
          title: Insight Enabled
        data_retention_days:
          anyOf:
            - type: integer
            - type: 'null'
          description: Number of days to retain data for this assistant
          title: Data Retention Days
        metadata_json:
          anyOf:
            - type: object
              additionalProperties: true
            - type: 'null'
          description: Metadata for the assistant
          title: Metadata Json
      required:
        - allowed_attachments
        - attachments
        - completion_model_kwargs
        - groups
        - id
        - integration_knowledge_list
        - logging_enabled
        - name
        - space_id
        - tools
        - type
        - user
        - websites
      title: DefaultAssistant
    DeleteResponse:
      type: object
      properties:
        success:
          type: boolean
          title: Success
      required:
        - success
      title: DeleteResponse
    EmbeddingModelFamily:
      type: string
      enum:
        - openai
        - mini_lm
        - e5
      title: EmbeddingModelFamily
    EmbeddingModelLegacy:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        family:
          "$ref": "#/components/schemas/EmbeddingModelFamily"
        is_deprecated:
          type: boolean
          title: Is Deprecated
        open_source:
          type: boolean
          title: Open Source
        dimensions:
          anyOf:
            - type: integer
            - type: 'null'
          title: Dimensions
        max_input:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Input
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          "$ref": "#/components/schemas/ModelStability"
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        litellm_model_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Litellm Model Name
        is_org_enabled:
          type: boolean
          default: false
          title: Is Org Enabled
      required:
        - family
        - hosting
        - id
        - is_deprecated
        - name
        - open_source
        - stability
      title: EmbeddingModelLegacy
    EmbeddingModelPublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        family:
          "$ref": "#/components/schemas/ModelFamily"
        is_deprecated:
          type: boolean
          title: Is Deprecated
        open_source:
          type: boolean
          title: Open Source
        dimensions:
          anyOf:
            - type: integer
            - type: 'null'
          title: Dimensions
        max_input:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Input
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          "$ref": "#/components/schemas/ModelStability"
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        can_access:
          type: boolean
          default: false
          title: Can Access
        is_locked:
          type: boolean
          default: true
          title: Is Locked
        is_org_enabled:
          type: boolean
          default: false
          title: Is Org Enabled
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
      required:
        - family
        - hosting
        - id
        - is_deprecated
        - name
        - open_source
        - stability
      title: EmbeddingModelPublic
    EmbeddingModelPublicLegacy:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        family:
          "$ref": "#/components/schemas/EmbeddingModelFamily"
        is_deprecated:
          type: boolean
          title: Is Deprecated
        open_source:
          type: boolean
          title: Open Source
        dimensions:
          anyOf:
            - type: integer
            - type: 'null'
          title: Dimensions
        max_input:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Input
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          "$ref": "#/components/schemas/ModelStability"
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        litellm_model_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Litellm Model Name
        is_org_enabled:
          type: boolean
          default: false
          title: Is Org Enabled
        can_access:
          type: boolean
          default: false
          title: Can Access
        is_locked:
          type: boolean
          default: true
          title: Is Locked
      required:
        - family
        - hosting
        - id
        - is_deprecated
        - name
        - open_source
        - stability
      title: EmbeddingModelPublicLegacy
    EmbeddingModelSecurityStatus:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        family:
          "$ref": "#/components/schemas/ModelFamily"
        is_deprecated:
          type: boolean
          title: Is Deprecated
        open_source:
          type: boolean
          title: Open Source
        dimensions:
          anyOf:
            - type: integer
            - type: 'null'
          title: Dimensions
        max_input:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max Input
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        stability:
          "$ref": "#/components/schemas/ModelStability"
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        can_access:
          type: boolean
          default: false
          title: Can Access
        is_locked:
          type: boolean
          default: true
          title: Is Locked
        is_org_enabled:
          type: boolean
          default: false
          title: Is Org Enabled
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
        meets_security_classification:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Meets Security Classification
      required:
        - family
        - hosting
        - id
        - is_deprecated
        - name
        - open_source
        - stability
      title: EmbeddingModelSecurityStatus
    EmbeddingModelUpdate:
      type: object
      properties:
        is_org_enabled:
          type: boolean
          default: NOT_PROVIDED
          title: Is Org Enabled
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          default: NOT_PROVIDED
          title: Security Classification
      title: EmbeddingModelUpdate
    EmbeddingModelUpdateFlags:
      type: object
      properties:
        is_org_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          default: false
          title: Is Org Enabled
      title: EmbeddingModelUpdateFlags
    ErrorCodes:
      type: integer
      enum:
        - 9000
        - 9001
        - 9002
        - 9003
        - 9004
        - 9005
        - 9006
        - 9007
        - 9008
        - 9009
        - 9010
        - 9011
        - 9012
        - 9013
        - 9014
        - 9015
        - 9016
        - 9017
        - 9018
        - 9019
        - 9020
        - 9021
        - 9022
        - 9023
        - 9024
        - 9025
      title: ErrorCodes
    FilePublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        mimetype:
          type: string
          title: Mimetype
        size:
          type: integer
          title: Size
        transcription:
          anyOf:
            - type: string
            - type: 'null'
          title: Transcription
      required:
        - id
        - mimetype
        - name
        - size
      title: FilePublic
    FileRestrictions:
      type: object
      properties:
        accepted_file_types:
          type: array
          items:
            "$ref": "#/components/schemas/AcceptedFileType"
          title: Accepted File Types
        limit:
          "$ref": "#/components/schemas/Limit"
      required:
        - accepted_file_types
        - limit
      title: FileRestrictions
    FormatLimit:
      type: object
      properties:
        mimetype:
          type: string
          title: Mimetype
        size:
          type: integer
          title: Size
        extensions:
          type: array
          items:
            type: string
          title: Extensions
        vision:
          type: boolean
          title: Vision
      required:
        - extensions
        - mimetype
        - size
        - vision
      title: FormatLimit
    GeneralError:
      type: object
      properties:
        message:
          type: string
          title: Message
        intric_error_code:
          "$ref": "#/components/schemas/ErrorCodes"
      required:
        - intric_error_code
        - message
      title: GeneralError
    GetModelsResponse:
      type: object
      properties:
        completion_models:
          type: array
          items:
            "$ref": "#/components/schemas/CompletionModelPublic"
          title: Completion Models
        embedding_models:
          type: array
          items:
            "$ref": "#/components/schemas/EmbeddingModelPublicLegacy"
          title: Embedding Models
      required:
        - completion_models
        - embedding_models
      title: GetModelsResponse
    GroupChatAssistantPublic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        handle:
          type: string
          title: Handle
        default_description:
          anyOf:
            - type: string
            - type: 'null'
          title: Default Description
        user_description:
          anyOf:
            - type: string
            - type: 'null'
          title: User Description
      required:
        - default_description
        - handle
        - id
        - user_description
      title: GroupChatAssistantPublic
    GroupChatAssistantUpdateSchema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        user_description:
          anyOf:
            - type: string
            - type: 'null'
          description: Custom description provided by the user. Cannot be null if
            'description' of assistant is null.
          example: My custom AI assistant description
          title: User Description
      required:
        - id
        - user_description
      title: GroupChatAssistantUpdateSchema
    GroupChatCreate:
      type: object
      description: |-
        Attributes:
            name: str
      properties:
        name:
          type: string
          title: Name
      required:
        - name
      title: GroupChatCreate
    GroupChatPublic:
      type: object
      description: |-
        Represents a group chat of assistants.

        Attributes:
            created_at: datetime
            updated_at: datetime
            name: str
            id: UUID
            space_id: UUID
            allow_mentions: bool
            show_response_label: bool
            tools: GroupChatTools
            insight_enabled: bool
            attachments: list[FilePublic]
            allowed_attachments: FileRestrictions
            type: str
      properties:
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        name:
          type: string
          title: Name
        id:
          type: string
          format: uuid
          title: Id
        space_id:
          type: string
          format: uuid
          title: Space Id
        allow_mentions:
          type: boolean
          title: Allow Mentions
        show_response_label:
          type: boolean
          title: Show Response Label
        published:
          type: boolean
          title: Published
        insight_enabled:
          type: boolean
          description: Whether insights are enabled for this group chat. If enabled,
            users with appropriate permissions can see all sessions for this group
            chat.
          title: Insight Enabled
        tools:
          "$ref": "#/components/schemas/GroupChatTools"
        attachments:
          type: array
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Attachments
        allowed_attachments:
          "$ref": "#/components/schemas/FileRestrictions"
        type:
          type: string
          const: group-chat
          title: Type
        permissions:
          type: array
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        metadata_json:
          anyOf:
            - type: object
              additionalProperties: true
            - type: 'null'
          title: Metadata Json
      required:
        - allow_mentions
        - allowed_attachments
        - attachments
        - created_at
        - id
        - insight_enabled
        - metadata_json
        - name
        - permissions
        - published
        - show_response_label
        - space_id
        - tools
        - type
        - updated_at
      title: GroupChatPublic
    GroupChatSparse:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        name:
          type: string
          title: Name
        id:
          type: string
          format: uuid
          title: Id
        user_id:
          type: string
          format: uuid
          title: User Id
        published:
          type: boolean
          title: Published
        type:
          type: string
          const: group-chat
          title: Type
        metadata_json:
          anyOf:
            - type: object
              additionalProperties: true
            - type: 'null'
          title: Metadata Json
      required:
        - created_at
        - id
        - metadata_json
        - name
        - published
        - type
        - updated_at
        - user_id
      title: GroupChatSparse
    GroupChatTools:
      type: object
      properties:
        assistants:
          type: array
          items:
            "$ref": "#/components/schemas/GroupChatAssistantPublic"
          title: Assistants
      required:
        - assistants
      title: GroupChatTools
    GroupChatUpdateSchema:
      type: object
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          description: The name of the group chat.
          title: Name
        space_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Space Id
        tools:
          anyOf:
            - "$ref": "#/components/schemas/GroupChatUpdateTools"
            - type: 'null'
          description: Tools available in the group chat.
        allow_mentions:
          anyOf:
            - type: boolean
            - type: 'null'
          description: Indicates if mentions are allowed.
          title: Allow Mentions
        show_response_label:
          anyOf:
            - type: boolean
            - type: 'null'
          description: Indicates if the response label should be shown.
          title: Show Response Label
        insight_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          description: Whether insights are enabled for this group chat. If enabled,
            users with appropriate permissions can see all sessions for this group
            chat.
          title: Insight Enabled
        metadata_json:
          anyOf:
            - type: object
              additionalProperties: true
            - type: 'null'
          default: NOT_PROVIDED
          description: Metadata for the group chat.
          title: Metadata Json
      title: GroupChatUpdateSchema
    GroupChatUpdateTools:
      type: object
      properties:
        assistants:
          type: array
          items:
            "$ref": "#/components/schemas/GroupChatAssistantUpdateSchema"
          title: Assistants
      required:
        - assistants
      title: GroupChatUpdateTools
    GroupMetadata:
      type: object
      properties:
        num_info_blobs:
          type: integer
          title: Num Info Blobs
        size:
          type: integer
          title: Size
      required:
        - num_info_blobs
        - size
      title: GroupMetadata
    GroupPublicBase:
      type: object
      properties:
        name:
          type: string
          title: Name
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
      required:
        - id
        - name
      title: GroupPublicBase
    GroupPublicWithMetadata:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        name:
          type: string
          title: Name
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        embedding_model:
          "$ref": "#/components/schemas/EmbeddingModelPublic"
        metadata:
          "$ref": "#/components/schemas/GroupMetadata"
      required:
        - embedding_model
        - id
        - metadata
        - name
      title: GroupPublicWithMetadata
    HTTPValidationError:
      type: object
      properties:
        detail:
          type: array
          items:
            "$ref": "#/components/schemas/ValidationError"
          title: Detail
      title: HTTPValidationError
    InfoBlobAddPublic:
      type: object
      properties:
        text:
          type: string
          title: Text
        metadata:
          "$ref": "#/components/schemas/InfoBlobMetadataUpsertPublic"
      required:
        - text
      title: InfoBlobAddPublic
    InfoBlobAskAssistantPublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        metadata:
          "$ref": "#/components/schemas/InfoBlobMetadata"
        group_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Group Id
        website_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Website Id
        score:
          type: number
          title: Score
      required:
        - id
        - metadata
        - score
      title: InfoBlobAskAssistantPublic
    InfoBlobLimits:
      type: object
      properties:
        formats:
          type: array
          items:
            "$ref": "#/components/schemas/FormatLimit"
          title: Formats
      required:
        - formats
      title: InfoBlobLimits
    InfoBlobMetadata:
      type: object
      properties:
        url:
          anyOf:
            - type: string
            - type: 'null'
          title: Url
        title:
          anyOf:
            - type: string
            - type: 'null'
          title: Title
        embedding_model_id:
          type: string
          format: uuid
          title: Embedding Model Id
        size:
          type: integer
          title: Size
      required:
        - embedding_model_id
        - size
      title: InfoBlobMetadata
    InfoBlobMetadataUpsertPublic:
      type: object
      properties:
        url:
          anyOf:
            - type: string
            - type: 'null'
          title: Url
        title:
          anyOf:
            - type: string
            - type: 'null'
          title: Title
      title: InfoBlobMetadataUpsertPublic
    InfoBlobPublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        metadata:
          "$ref": "#/components/schemas/InfoBlobMetadata"
        group_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Group Id
        website_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Website Id
        text:
          type: string
          title: Text
      required:
        - id
        - metadata
        - text
      title: InfoBlobPublic
    InfoBlobPublicNoText:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        metadata:
          "$ref": "#/components/schemas/InfoBlobMetadata"
        group_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Group Id
        website_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Website Id
      required:
        - id
        - metadata
      title: InfoBlobPublicNoText
    InfoBlobUpdatePublic:
      type: object
      properties:
        metadata:
          "$ref": "#/components/schemas/InfoBlobMetadataUpsertPublic"
      required:
        - metadata
      title: InfoBlobUpdatePublic
    InfoBlobUpsertRequest:
      type: object
      properties:
        info_blobs:
          type: array
          items:
            "$ref": "#/components/schemas/InfoBlobAddPublic"
          title: Info Blobs
      required:
        - info_blobs
      title: InfoBlobUpsertRequest
    InputField:
      type: object
      properties:
        type:
          "$ref": "#/components/schemas/InputFieldType"
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
      required:
        - type
      title: InputField
    InputFieldPublic:
      type: object
      properties:
        accepted_file_types:
          type: array
          items:
            "$ref": "#/components/schemas/AcceptedFileType"
          title: Accepted File Types
        limit:
          "$ref": "#/components/schemas/Limit"
        type:
          "$ref": "#/components/schemas/InputFieldType"
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
      required:
        - accepted_file_types
        - limit
        - type
      title: InputFieldPublic
    InputFieldType:
      type: string
      enum:
        - text-field
        - text-upload
        - audio-upload
        - audio-recorder
        - image-upload
      title: InputFieldType
    Integration:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        integration_type:
          "$ref": "#/components/schemas/IntegrationType"
      required:
        - description
        - id
        - integration_type
        - name
      title: Integration
    IntegrationKnowledgeMetaData:
      type: object
      properties:
        size:
          type: integer
          title: Size
      required:
        - size
      title: IntegrationKnowledgeMetaData
    IntegrationKnowledgePublic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        url:
          type: string
          title: Url
        tenant_id:
          type: string
          format: uuid
          title: Tenant Id
        space_id:
          type: string
          format: uuid
          title: Space Id
        user_integration_id:
          type: string
          format: uuid
          title: User Integration Id
        embedding_model:
          "$ref": "#/components/schemas/EmbeddingModelPublicLegacy"
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        metadata:
          "$ref": "#/components/schemas/IntegrationKnowledgeMetaData"
        integration_type:
          type: string
          enum:
            - confluence
            - sharepoint
          title: Integration Type
        task:
          type: string
          description: |-
            Create a collection of name/value pairs.

            Example enumeration:

            >>> class Color(Enum):
            ...     RED = 1
            ...     BLUE = 2
            ...     GREEN = 3

            Access them by:

            - attribute access::

            >>> Color.RED
            <Color.RED: 1>

            - value lookup:

            >>> Color(1)
            <Color.RED: 1>

            - name lookup:

            >>> Color['RED']
            <Color.RED: 1>

            Enumerations can be iterated over, and know how many members they have:

            >>> len(Color)
            3

            >>> list(Color)
            [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

            Methods can be added to enumerations, and members can have their own
            attributes -- see the documentation for details.
          title: Enum
      required:
        - embedding_model
        - id
        - integration_type
        - metadata
        - name
        - space_id
        - task
        - tenant_id
        - url
        - user_integration_id
      title: IntegrationKnowledgePublic
    IntegrationList:
      type: object
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/Integration"
          title: Items
        count:
          type: integer
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: IntegrationList
    IntegrationPreviewData:
      type: object
      properties:
        key:
          type: string
          title: Key
        type:
          type: string
          title: Type
        name:
          type: string
          title: Name
        url:
          type: string
          title: Url
      required:
        - key
        - name
        - type
        - url
      title: IntegrationPreviewData
    IntegrationPreviewDataList:
      type: object
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/IntegrationPreviewData"
          title: Items
        count:
          type: integer
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: IntegrationPreviewDataList
    IntegrationType:
      type: string
      enum:
        - confluence
        - sharepoint
      title: IntegrationType
    JobPublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        status:
          "$ref": "#/components/schemas/Status"
        task:
          "$ref": "#/components/schemas/Task"
        result_location:
          anyOf:
            - type: string
            - type: 'null'
          title: Result Location
        finished_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Finished At
      required:
        - id
        - status
        - task
      title: JobPublic
    Knowledge:
      type: object
      properties:
        groups:
          "$ref": "#/components/schemas/PaginatedPermissions_CollectionPublic_"
        websites:
          "$ref": "#/components/schemas/PaginatedPermissions_WebsitePublic_"
        integration_knowledge_list:
          "$ref": "#/components/schemas/PaginatedPermissions_IntegrationKnowledgePublic_"
      required:
        - groups
        - integration_knowledge_list
        - websites
      title: Knowledge
    Limit:
      type: object
      properties:
        max_files:
          type: integer
          title: Max Files
        max_size:
          type: integer
          title: Max Size
      required:
        - max_files
        - max_size
      title: Limit
    Limits:
      type: object
      properties:
        info_blobs:
          "$ref": "#/components/schemas/InfoBlobLimits"
        attachments:
          "$ref": "#/components/schemas/AttachmentLimits"
      required:
        - attachments
        - info_blobs
      title: Limits
    LoggingDetailsPublic:
      type: object
      properties:
        context:
          anyOf:
            - type: string
            - type: 'null'
          title: Context
        model_kwargs:
          type: object
          additionalProperties: true
          title: Model Kwargs
        json_body:
          title: Json Body
      required:
        - json_body
        - model_kwargs
      title: LoggingDetailsPublic
    Message:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Id
        question:
          type: string
          title: Question
        answer:
          type: string
          title: Answer
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModel"
            - type: 'null'
        references:
          type: array
          items:
            "$ref": "#/components/schemas/InfoBlobPublicNoText"
          title: References
        files:
          type: array
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Files
        tools:
          "$ref": "#/components/schemas/UseTools"
        generated_files:
          type: array
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Generated Files
        web_search_references:
          type: array
          items:
            "$ref": "#/components/schemas/WebSearchResultPublic"
          title: Web Search References
      required:
        - answer
        - files
        - generated_files
        - question
        - references
        - tools
        - web_search_references
      title: Message
    MessageLogging:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Id
        question:
          type: string
          title: Question
        answer:
          type: string
          title: Answer
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/CompletionModel"
            - type: 'null'
        references:
          type: array
          items:
            "$ref": "#/components/schemas/InfoBlobPublicNoText"
          title: References
        files:
          type: array
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Files
        tools:
          "$ref": "#/components/schemas/UseTools"
        generated_files:
          type: array
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Generated Files
        web_search_references:
          type: array
          items:
            "$ref": "#/components/schemas/WebSearchResultPublic"
          title: Web Search References
        logging_details:
          "$ref": "#/components/schemas/LoggingDetailsPublic"
      required:
        - answer
        - files
        - generated_files
        - logging_details
        - question
        - references
        - tools
        - web_search_references
      title: MessageLogging
    MetadataStatistics:
      type: object
      properties:
        assistants:
          type: array
          items:
            "$ref": "#/components/schemas/AssistantMetadata"
          title: Assistants
        sessions:
          type: array
          items:
            "$ref": "#/components/schemas/SessionMetadata"
          title: Sessions
        questions:
          type: array
          items:
            "$ref": "#/components/schemas/QuestionMetadata"
          title: Questions
      required:
        - assistants
        - questions
        - sessions
      title: MetadataStatistics
    ModelFamily:
      type: string
      enum:
        - openai
        - mistral
        - vllm
        - claude
        - azure
        - ovhcloud
        - e5
      title: ModelFamily
    ModelHostingLocation:
      type: string
      enum:
        - usa
        - eu
        - swe
      title: ModelHostingLocation
    ModelId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
      required:
        - id
      title: ModelId
    ModelKwargs:
      type: object
      properties:
        temperature:
          anyOf:
            - type: number
            - type: 'null'
          title: Temperature
        top_p:
          anyOf:
            - type: number
            - type: 'null'
          title: Top P
        reasoning_effort:
          anyOf:
            - type: string
            - type: 'null'
          title: Reasoning Effort
        verbosity:
          anyOf:
            - type: string
            - type: 'null'
          title: Verbosity
        response_format:
          anyOf:
            - type: object
              additionalProperties: true
            - type: 'null'
          title: Response Format
        presence_penalty:
          anyOf:
            - type: number
            - type: 'null'
          title: Presence Penalty
        frequency_penalty:
          anyOf:
            - type: number
            - type: 'null'
          title: Frequency Penalty
        top_k:
          anyOf:
            - type: integer
            - type: 'null'
          title: Top K
      title: ModelKwargs
    ModelOrg:
      type: string
      enum:
        - OpenAI
        - Meta
        - Microsoft
        - Anthropic
        - Mistral
        - KBLab
        - Google
        - Berget
      title: ModelOrg
    ModelStability:
      type: string
      enum:
        - stable
        - experimental
      title: ModelStability
    ModelUsage:
      type: object
      properties:
        model_id:
          type: string
          format: uuid
          title: Model Id
        model_name:
          type: string
          title: Model Name
        model_nickname:
          type: string
          description: User-friendly name of the model
          title: Model Nickname
        model_org:
          anyOf:
            - type: string
            - type: 'null'
          description: Organization providing the model
          title: Model Org
        input_token_usage:
          type: integer
          description: Number of tokens used for input prompts
          title: Input Token Usage
        output_token_usage:
          type: integer
          description: Number of tokens used for model outputs
          title: Output Token Usage
        total_token_usage:
          type: integer
          description: Total tokens (input + output)
          title: Total Token Usage
        request_count:
          type: integer
          description: Number of requests made with this model
          title: Request Count
      required:
        - input_token_usage
        - model_id
        - model_name
        - model_nickname
        - output_token_usage
        - request_count
        - total_token_usage
      title: ModelUsage
    ModelsPresentation:
      type: object
      description: Presentation model for all types of AI models.
      properties:
        completion_models:
          type: array
          items:
            "$ref": "#/components/schemas/CompletionModelSecurityStatus"
          title: Completion Models
        embedding_models:
          type: array
          items:
            "$ref": "#/components/schemas/EmbeddingModelSecurityStatus"
          title: Embedding Models
        transcription_models:
          type: array
          items:
            "$ref": "#/components/schemas/TranscriptionModelSecurityStatus"
          title: Transcription Models
      required:
        - completion_models
        - embedding_models
        - transcription_models
      title: ModelsPresentation
    ModuleBase:
      type: object
      properties:
        name:
          anyOf:
            - "$ref": "#/components/schemas/Modules"
            - type: string
          title: Name
      required:
        - name
      title: ModuleBase
    ModuleInDB:
      type: object
      properties:
        name:
          anyOf:
            - "$ref": "#/components/schemas/Modules"
            - type: string
          title: Name
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
      required:
        - id
        - name
      title: ModuleInDB
    Modules:
      type: string
      description: Any change to these enums will result in database changes
      enum:
        - eu_hosting
        - intric-applications
        - SWE Models
      title: Modules
    OpenIdConnectLogin:
      type: object
      properties:
        code:
          type: string
          title: Code
        code_verifier:
          type: string
          title: Code Verifier
        redirect_uri:
          type: string
          title: Redirect Uri
        client_id:
          type: string
          default: intric
          title: Client Id
        grant_type:
          type: string
          default: authorization_code
          title: Grant Type
        scope:
          type: string
          default: openid
          title: Scope
        nonce:
          type: string
          title: Nonce
      required:
        - code
        - code_verifier
        - redirect_uri
      title: OpenIdConnectLogin
    PaginatedPermissions_AppSparse_:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/AppSparse"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedPermissions[AppSparse]
    PaginatedPermissions_AssistantSparse_:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/AssistantSparse"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedPermissions[AssistantSparse]
    PaginatedPermissions_CollectionPublic_:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/CollectionPublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedPermissions[CollectionPublic]
    PaginatedPermissions_GroupChatSparse_:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/GroupChatSparse"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedPermissions[GroupChatSparse]
    PaginatedPermissions_IntegrationKnowledgePublic_:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/IntegrationKnowledgePublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedPermissions[IntegrationKnowledgePublic]
    PaginatedPermissions_ServiceSparse_:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/ServiceSparse"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedPermissions[ServiceSparse]
    PaginatedPermissions_SpaceMember_:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/SpaceMember"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedPermissions[SpaceMember]
    PaginatedPermissions_WebsitePublic_:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/WebsitePublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedPermissions[WebsitePublic]
    PaginatedResponse_AllowedOriginInDB_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/AllowedOriginInDB"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[AllowedOriginInDB]
    PaginatedResponse_AllowedOriginPublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/AllowedOriginPublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[AllowedOriginPublic]
    PaginatedResponse_AppRunSparse_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/AppRunSparse"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[AppRunSparse]
    PaginatedResponse_AssistantPublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/AssistantPublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[AssistantPublic]
    PaginatedResponse_CompletionModelPublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/CompletionModelPublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[CompletionModelPublic]
    PaginatedResponse_CrawlRunPublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/intric__websites__presentation__website_models__CrawlRunPublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[CrawlRunPublic]
    PaginatedResponse_EmbeddingModelLegacy_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/EmbeddingModelLegacy"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[EmbeddingModelLegacy]
    PaginatedResponse_EmbeddingModelPublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/EmbeddingModelPublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[EmbeddingModelPublic]
    PaginatedResponse_FilePublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[FilePublic]
    PaginatedResponse_GroupPublicWithMetadata_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/GroupPublicWithMetadata"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[GroupPublicWithMetadata]
    PaginatedResponse_InfoBlobPublicNoText_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/InfoBlobPublicNoText"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[InfoBlobPublicNoText]
    PaginatedResponse_InfoBlobPublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/InfoBlobPublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[InfoBlobPublic]
    PaginatedResponse_JobPublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/JobPublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[JobPublic]
    PaginatedResponse_Message_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/Message"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[Message]
    PaginatedResponse_ModuleInDB_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/ModuleInDB"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[ModuleInDB]
    PaginatedResponse_PredefinedRolePublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/PredefinedRolePublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[PredefinedRolePublic]
    PaginatedResponse_PromptSparse_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/PromptSparse"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[PromptSparse]
    PaginatedResponse_RolePublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/RolePublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[RolePublic]
    PaginatedResponse_SemanticSearchResponse_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/SemanticSearchResponse"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[SemanticSearchResponse]
    PaginatedResponse_ServicePublicWithUser_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/ServicePublicWithUser"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[ServicePublicWithUser]
    PaginatedResponse_ServiceRun_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/ServiceRun"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[ServiceRun]
    PaginatedResponse_SpaceDashboard_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/SpaceDashboard"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[SpaceDashboard]
    PaginatedResponse_SpaceSparse_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/SpaceSparse"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[SpaceSparse]
    PaginatedResponse_TenantInDB_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/TenantInDB"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[TenantInDB]
    PaginatedResponse_TranscriptionModelPublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/TranscriptionModelPublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[TranscriptionModelPublic]
    PaginatedResponse_UserAdminView_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/UserAdminView"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[UserAdminView]
    PaginatedResponse_UserGroupPublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/UserGroupPublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[UserGroupPublic]
    PaginatedResponse_UserInDB_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/UserInDB"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[UserInDB]
    PaginatedResponse_WebsitePublic_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            "$ref": "#/components/schemas/WebsitePublic"
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[WebsitePublic]
    PaginatedResponse_str_:
      type: object
      properties:
        items:
          type: array
          description: List of items returned in the response
          items:
            type: string
          title: Items
        count:
          type: integer
          description: Number of items returned in the response
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: PaginatedResponse[str]
    PartialAssistantUpdatePublic:
      type: object
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
        logging_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
          title: Logging Enabled
        space_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Space Id
        prompt:
          anyOf:
            - "$ref": "#/components/schemas/PromptCreate"
            - type: 'null'
        groups:
          anyOf:
            - type: array
              items:
                "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
          title: Groups
        websites:
          anyOf:
            - type: array
              items:
                "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
          title: Websites
        integration_knowledge_list:
          anyOf:
            - type: array
              items:
                "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
          title: Integration Knowledge List
        guardrail:
          anyOf:
            - "$ref": "#/components/schemas/AssistantGuard"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          deprecated: true
          description: This field is deprecated and will be ignored
        attachments:
          anyOf:
            - type: array
              items:
                "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          title: Attachments
        description:
          anyOf:
            - type: string
            - type: 'null'
          description: A description of the assitant that will be used as default
            description in GroupChatAssistantPublic
          example: This is a helpful AI assistant
          title: Description
        insight_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          description: Whether insights are enabled for this assistant. If enabled,
            users with appropriate permissions can see all sessions for this assistant.
          title: Insight Enabled
        data_retention_days:
          anyOf:
            - type: integer
            - type: 'null'
          title: Data Retention Days
        metadata_json:
          anyOf:
            - type: object
              additionalProperties: true
            - type: 'null'
          description: Metadata for the assistant
          title: Metadata Json
      title: PartialAssistantUpdatePublic
    PartialPropUserUpdate:
      type: object
      properties:
        predefined_role:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
        state:
          anyOf:
            - "$ref": "#/components/schemas/UserState"
            - type: 'null'
      title: PartialPropUserUpdate
    PartialServiceUpdatePublic:
      type: object
      properties:
        output_format:
          anyOf:
            - type: string
              enum:
                - json
                - list
                - boolean
            - type: 'null'
          title: Output Format
        json_schema:
          anyOf:
            - type: object
              additionalProperties: true
            - type: 'null'
          title: Json Schema
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        prompt:
          anyOf:
            - type: string
            - type: 'null'
          title: Prompt
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
        groups:
          anyOf:
            - type: array
              items:
                "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          title: Groups
        completion_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
      title: PartialServiceUpdatePublic
    PartialUpdateSpaceRequest:
      type: object
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        embedding_models:
          anyOf:
            - type: array
              items:
                "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          title: Embedding Models
        completion_models:
          anyOf:
            - type: array
              items:
                "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          title: Completion Models
        transcription_models:
          anyOf:
            - type: array
              items:
                "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          title: Transcription Models
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          description: ID of the security classification to apply to this space. Set
            to null to remove the security classification. Omit to keep the current
            security classification unchanged.
          title: Security Classification
      title: PartialUpdateSpaceRequest
    Permission:
      type: string
      enum:
        - assistants
        - group_chats
        - apps
        - services
        - collections
        - insights
        - AI
        - editor
        - admin
        - websites
        - integration_knowledge_list
      title: Permission
    PermissionPublic:
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/Permission"
        description:
          type: string
          title: Description
      required:
        - description
        - name
      title: PermissionPublic
    PredefinedRoleInDB:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        name:
          type: string
          title: Name
        permissions:
          type: array
          items:
            "$ref": "#/components/schemas/Permission"
          title: Permissions
        id:
          type: string
          format: uuid
          title: Id
      required:
        - id
        - name
        - permissions
      title: PredefinedRoleInDB
    PredefinedRolePublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        name:
          type: string
          title: Name
        permissions:
          type: array
          items:
            "$ref": "#/components/schemas/Permission"
          title: Permissions
        id:
          type: string
          format: uuid
          title: Id
      required:
        - id
        - name
        - permissions
      title: PredefinedRolePublic
    PrivacyPolicy:
      type: object
      properties:
        url:
          anyOf:
            - type: string
              format: uri
              maxLength: 2083
              minLength: 1
            - type: 'null'
          title: Url
      title: PrivacyPolicy
    PromptCreate:
      type: object
      properties:
        text:
          type: string
          title: Text
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
      required:
        - text
      title: PromptCreate
    PromptPublic:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        is_selected:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Selected
        user:
          "$ref": "#/components/schemas/UserSparse"
        text:
          type: string
          title: Text
      required:
        - id
        - text
        - user
      title: PromptPublic
    PromptPublicAppTemplate:
      type: object
      properties:
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      required:
        - text
      title: PromptPublicAppTemplate
    PromptPublicAssistantTemplate:
      type: object
      properties:
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      required:
        - text
      title: PromptPublicAssistantTemplate
    PromptSparse:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        is_selected:
          type: boolean
          title: Is Selected
        user:
          "$ref": "#/components/schemas/UserSparse"
      required:
        - id
        - is_selected
        - user
      title: PromptSparse
    PromptUpdateRequest:
      type: object
      properties:
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
      title: PromptUpdateRequest
    PropUserInvite:
      type: object
      properties:
        predefined_role:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
        state:
          anyOf:
            - "$ref": "#/components/schemas/UserState"
            - type: 'null'
        email:
          type: string
          format: email
          title: Email
      required:
        - email
      title: PropUserInvite
    QuestionMetadata:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        assistant_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Assistant Id
        session_id:
          type: string
          format: uuid
          title: Session Id
      required:
        - created_at
        - id
        - session_id
      title: QuestionMetadata
    ResourcePermission:
      type: string
      enum:
        - read
        - create
        - edit
        - delete
        - add
        - remove
        - publish
        - insight_view
        - insight_toggle
      title: ResourcePermission
    RoleCreateRequest:
      type: object
      properties:
        name:
          type: string
          title: Name
        permissions:
          type: array
          items:
            "$ref": "#/components/schemas/Permission"
          title: Permissions
      required:
        - name
        - permissions
      title: RoleCreateRequest
    RoleInDB:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        permissions:
          type: array
          items:
            "$ref": "#/components/schemas/Permission"
          title: Permissions
        tenant_id:
          type: string
          format: uuid
          title: Tenant Id
      required:
        - id
        - name
        - permissions
        - tenant_id
      title: RoleInDB
    RolePublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        permissions:
          type: array
          items:
            "$ref": "#/components/schemas/Permission"
          title: Permissions
      required:
        - id
        - name
        - permissions
      title: RolePublic
    RoleUpdateRequest:
      type: object
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        permissions:
          anyOf:
            - type: array
              items:
                "$ref": "#/components/schemas/Permission"
            - type: 'null'
          title: Permissions
      title: RoleUpdateRequest
    RolesPaginatedResponse:
      type: object
      properties:
        roles:
          "$ref": "#/components/schemas/PaginatedResponse_RolePublic_"
        predefined_roles:
          "$ref": "#/components/schemas/PaginatedResponse_PredefinedRolePublic_"
      required:
        - predefined_roles
        - roles
      title: RolesPaginatedResponse
    RunAppRequest:
      type: object
      properties:
        files:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Files
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      title: RunAppRequest
    RunService:
      type: object
      properties:
        input:
          type: string
          title: Input
        files:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ModelId"
          maxItems: 1
          title: Files
      required:
        - input
      title: RunService
    SecurityClassificationCreatePublic:
      type: object
      description: Base model for security classification data.
      properties:
        name:
          type: string
          description: Name of the security classification
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          description: Description of the security classification
          title: Description
        set_lowest_security:
          type: boolean
          default: true
          description: Set lowest security level (0) if true, highest level if false
          title: Set Lowest Security
      required:
        - name
      title: SecurityClassificationCreatePublic
    SecurityClassificationLevelsUpdateRequest:
      type: object
      properties:
        security_classifications:
          type: array
          description: Security classification IDs
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Security Classifications
      required:
        - security_classifications
      title: SecurityClassificationLevelsUpdateRequest
    SecurityClassificationPublic:
      type: object
      description: Basic security classification information.
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        security_level:
          type: integer
          title: Security Level
      required:
        - description
        - id
        - name
        - security_level
      title: SecurityClassificationPublic
    SecurityClassificationResponse:
      type: object
      properties:
        security_enabled:
          type: boolean
          title: Security Enabled
        security_classifications:
          type: array
          items:
            "$ref": "#/components/schemas/SecurityClassificationPublic"
          title: Security Classifications
      required:
        - security_classifications
        - security_enabled
      title: SecurityClassificationResponse
    SecurityClassificationSingleUpdate:
      type: object
      description: Model for updating an existing security classification's name and
        description only.
      properties:
        name:
          type: string
          default: NOT_PROVIDED
          description: Name of the security classification
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          default: NOT_PROVIDED
          description: Description of the security classification
          title: Description
      title: SecurityClassificationSingleUpdate
    SecurityClassificationsListPublic:
      type: object
      description: All security classifications.
      properties:
        security_classifications:
          type: array
          items:
            "$ref": "#/components/schemas/SecurityClassificationPublic"
          title: Security Classifications
      required:
        - security_classifications
      title: SecurityClassificationsListPublic
    SecurityEnableRequest:
      type: object
      description: Request to enable or disable security classifications for a tenant.
      properties:
        enabled:
          type: boolean
          description: Whether security classifications should be enabled for the
            tenant
          title: Enabled
      required:
        - enabled
      title: SecurityEnableRequest
    SecurityEnableResponse:
      type: object
      description: Response after enabling or disabling security classifications for
        a tenant.
      properties:
        security_enabled:
          type: boolean
          description: Whether security classifications are now enabled for the tenant
          title: Security Enabled
      required:
        - security_enabled
      title: SecurityEnableResponse
    SemanticSearchRequest:
      type: object
      properties:
        search_string:
          type: string
          title: Search String
        num_chunks:
          type: integer
          default: 30
          title: Num Chunks
        autocut_cutoff:
          anyOf:
            - type: integer
            - type: 'null'
          description: Experimental feature that tries to limit the amount of chunks
            to only the relevant ones, based on the score. Set to null (or omit completely)
            to not use this feature
          title: Autocut Cutoff
      required:
        - search_string
      title: SemanticSearchRequest
    SemanticSearchResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        info_blob_id:
          type: string
          format: uuid
          title: Info Blob Id
        text:
          type: string
          title: Text
        score:
          type: number
          title: Score
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      required:
        - created_at
        - id
        - info_blob_id
        - score
        - text
        - updated_at
      title: SemanticSearchResponse
    ServiceCreatePublic:
      type: object
      properties:
        output_format:
          anyOf:
            - type: string
              enum:
                - json
                - list
                - boolean
            - type: 'null'
          title: Output Format
        json_schema:
          anyOf:
            - type: object
              additionalProperties: true
            - type: 'null'
          title: Json Schema
        name:
          type: string
          title: Name
        prompt:
          type: string
          title: Prompt
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
          default: {}
        groups:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Groups
        completion_model:
          "$ref": "#/components/schemas/ModelId"
      required:
        - completion_model
        - name
        - prompt
      title: ServiceCreatePublic
    ServiceOutput:
      type: object
      properties:
        output:
          type: string
          title: Output
        files:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/FilePublic"
          title: Files
      required:
        - output
      title: ServiceOutput
    ServicePublicWithUser:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        output_format:
          anyOf:
            - type: string
              enum:
                - json
                - list
                - boolean
            - type: 'null'
          title: Output Format
        json_schema:
          anyOf:
            - type: object
              additionalProperties: true
            - type: 'null'
          title: Json Schema
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        prompt:
          type: string
          title: Prompt
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
        space_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Space Id
        groups:
          type: array
          items:
            "$ref": "#/components/schemas/GroupPublicBase"
          title: Groups
        completion_model:
          "$ref": "#/components/schemas/CompletionModelPublic"
        user:
          "$ref": "#/components/schemas/UserPublicBase"
      required:
        - completion_model
        - groups
        - id
        - name
        - prompt
        - user
      title: ServicePublicWithUser
    ServiceRun:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        input:
          type: string
          title: Input
        output:
          anyOf:
            - type: object
              additionalProperties: true
            - type: array
              items: {}
            - type: string
          title: Output
        completion_model:
          "$ref": "#/components/schemas/CompletionModelPublic"
        references:
          type: array
          items:
            "$ref": "#/components/schemas/InfoBlobPublic"
          title: References
      required:
        - completion_model
        - id
        - input
        - output
        - references
      title: ServiceRun
    ServiceSparse:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        output_format:
          anyOf:
            - type: string
              enum:
                - json
                - list
                - boolean
            - type: 'null'
          title: Output Format
        json_schema:
          anyOf:
            - type: object
              additionalProperties: true
            - type: 'null'
          title: Json Schema
        name:
          type: string
          title: Name
        prompt:
          type: string
          title: Prompt
        completion_model_kwargs:
          anyOf:
            - "$ref": "#/components/schemas/ModelKwargs"
            - type: 'null'
          default: {}
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        user_id:
          type: string
          format: uuid
          title: User Id
      required:
        - id
        - name
        - prompt
        - user_id
      title: ServiceSparse
    SessionFeedback:
      type: object
      properties:
        value:
          type: integer
          enum:
            - -1
            - 1
          title: Value
        text:
          anyOf:
            - type: string
            - type: 'null'
          title: Text
      required:
        - value
      title: SessionFeedback
    SessionMetadata:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        assistant_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Assistant Id
        group_chat_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Group Chat Id
      required:
        - created_at
        - id
      title: SessionMetadata
    SessionMetadataPublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        name:
          type: string
          title: Name
        id:
          type: string
          format: uuid
          title: Id
      required:
        - id
        - name
      title: SessionMetadataPublic
    SessionPublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        name:
          type: string
          title: Name
        id:
          type: string
          format: uuid
          title: Id
        messages:
          type: array
          items:
            "$ref": "#/components/schemas/Message"
          title: Messages
        feedback:
          anyOf:
            - "$ref": "#/components/schemas/SessionFeedback"
            - type: 'null'
      required:
        - id
        - messages
        - name
      title: SessionPublic
    SettingsPublic:
      type: object
      properties:
        chatbot_widget:
          type: object
          additionalProperties: true
          default: {}
          title: Chatbot Widget
      title: SettingsPublic
    SignedURLRequest:
      type: object
      properties:
        expires_in:
          type: integer
          default: 3600
          title: Expires In
        content_disposition:
          "$ref": "#/components/schemas/ContentDisposition"
          default: attachment
      title: SignedURLRequest
    SignedURLResponse:
      type: object
      properties:
        url:
          type: string
          title: Url
        expires_at:
          type: integer
          title: Expires At
      required:
        - expires_at
        - url
      title: SignedURLResponse
    SpaceDashboard:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        personal:
          type: boolean
          title: Personal
        applications:
          "$ref": "#/components/schemas/Applications"
      required:
        - applications
        - description
        - id
        - name
        - personal
      title: SpaceDashboard
    SpaceMember:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        email:
          type: string
          format: email
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
        role:
          "$ref": "#/components/schemas/SpaceRoleValue"
      required:
        - email
        - id
        - role
      title: SpaceMember
    SpacePublic:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        personal:
          type: boolean
          title: Personal
        applications:
          "$ref": "#/components/schemas/Applications"
        embedding_models:
          type: array
          items:
            "$ref": "#/components/schemas/EmbeddingModelPublic"
          title: Embedding Models
        completion_models:
          type: array
          items:
            "$ref": "#/components/schemas/CompletionModelPublic"
          title: Completion Models
        transcription_models:
          type: array
          items:
            "$ref": "#/components/schemas/TranscriptionModelPublic"
          title: Transcription Models
        knowledge:
          "$ref": "#/components/schemas/Knowledge"
        members:
          "$ref": "#/components/schemas/PaginatedPermissions_SpaceMember_"
        default_assistant:
          "$ref": "#/components/schemas/DefaultAssistant"
        available_roles:
          type: array
          items:
            "$ref": "#/components/schemas/SpaceRole"
          title: Available Roles
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
      required:
        - applications
        - available_roles
        - completion_models
        - default_assistant
        - description
        - embedding_models
        - id
        - knowledge
        - members
        - name
        - personal
        - security_classification
        - transcription_models
      title: SpacePublic
    SpaceRole:
      type: object
      properties:
        value:
          "$ref": "#/components/schemas/SpaceRoleValue"
        label:
          type: string
          readOnly: true
          title: Label
      required:
        - label
        - value
      title: SpaceRole
    SpaceRoleValue:
      type: string
      enum:
        - admin
        - editor
        - viewer
      title: SpaceRoleValue
    SpaceSparse:
      type: object
      properties:
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        personal:
          type: boolean
          title: Personal
      required:
        - description
        - id
        - name
        - personal
      title: SpaceSparse
    Status:
      type: string
      enum:
        - in progress
        - queued
        - complete
        - failed
        - not found
      title: Status
    StorageInfoModel:
      type: object
      properties:
        count:
          type: integer
          title: Count
        items:
          type: array
          items:
            "$ref": "#/components/schemas/StorageSpaceInfoModel"
          title: Items
      required:
        - count
        - items
      title: StorageInfoModel
    StorageModel:
      type: object
      properties:
        total_used:
          type: integer
          title: Total Used
        personal_used:
          type: integer
          title: Personal Used
        shared_used:
          type: integer
          title: Shared Used
        limit:
          type: integer
          title: Limit
      required:
        - limit
        - personal_used
        - shared_used
        - total_used
      title: StorageModel
    StorageSpaceInfoModel:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          title: Created At
        update_at:
          type: string
          format: date-time
          title: Update At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        size:
          type: integer
          title: Size
        members:
          type: array
          items:
            "$ref": "#/components/schemas/StorageSpaceMemberModel"
          title: Members
      required:
        - created_at
        - id
        - members
        - name
        - size
        - update_at
      title: StorageSpaceInfoModel
    StorageSpaceMemberModel:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        email:
          type: string
          title: Email
        role:
          type: string
          title: Role
      required:
        - created_at
        - email
        - id
        - role
        - updated_at
      title: StorageSpaceMemberModel
    Task:
      type: string
      enum:
        - upload_info_blob
        - transcription
        - crawl
        - embed_group
        - crawl_all_websites
        - run_app
        - pull_confluence_content
        - pull_sharepoint_content
      title: Task
    TemplateCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        additional_fields:
          anyOf:
            - type: array
              items:
                "$ref": "#/components/schemas/AdditionalField"
            - type: 'null'
          title: Additional Fields
      required:
        - additional_fields
        - id
      title: TemplateCreate
    TemplateListPublic:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - "$ref": "#/components/schemas/AppTemplatePublic"
              - "$ref": "#/components/schemas/AssistantTemplatePublic"
          title: Items
        count:
          type: integer
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: TemplateListPublic
    TemplateWizard:
      type: object
      properties:
        required:
          type: boolean
          default: false
          title: Required
        title:
          anyOf:
            - type: string
            - type: 'null'
          title: Title
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
      title: TemplateWizard
    TenantBase:
      type: object
      properties:
        name:
          type: string
          title: Name
        display_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Display Name
        quota_limit:
          type: integer
          default: 2147483647
          description: Size in bytes. Default is 10 GB
          title: Quota Limit
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
        zitadel_org_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Zitadel Org Id
        provisioning:
          type: boolean
          default: false
          title: Provisioning
        state:
          "$ref": "#/components/schemas/TenantState"
          default: active
        security_enabled:
          type: boolean
          default: false
          title: Security Enabled
      required:
        - name
      title: TenantBase
    TenantInDB:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        privacy_policy:
          anyOf:
            - type: string
              format: uri
              maxLength: 2083
              minLength: 1
            - type: 'null'
          title: Privacy Policy
        name:
          type: string
          title: Name
        display_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Display Name
        quota_limit:
          type: integer
          title: Quota Limit
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
        zitadel_org_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Zitadel Org Id
        provisioning:
          type: boolean
          default: false
          title: Provisioning
        state:
          "$ref": "#/components/schemas/TenantState"
          default: active
        security_enabled:
          type: boolean
          default: false
          title: Security Enabled
        modules:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ModuleInDB"
          title: Modules
      required:
        - id
        - name
        - quota_limit
      title: TenantInDB
    TenantIntegration:
      type: object
      properties:
        id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Id
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        integration_type:
          "$ref": "#/components/schemas/IntegrationType"
        integration_id:
          type: string
          format: uuid
          title: Integration Id
        is_linked_to_tenant:
          type: boolean
          readOnly: true
          title: Is Linked To Tenant
      required:
        - description
        - integration_id
        - integration_type
        - is_linked_to_tenant
        - name
      title: TenantIntegration
    TenantIntegrationFilter:
      type: string
      enum:
        - all
        - tenant_only
      title: TenantIntegrationFilter
    TenantIntegrationList:
      type: object
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/TenantIntegration"
          title: Items
        count:
          type: integer
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: TenantIntegrationList
    TenantPublic:
      type: object
      properties:
        name:
          type: string
          title: Name
        display_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Display Name
        quota_limit:
          type: integer
          default: 2147483647
          description: Size in bytes. Default is 10 GB
          title: Quota Limit
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
        zitadel_org_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Zitadel Org Id
        provisioning:
          type: boolean
          default: false
          title: Provisioning
        state:
          "$ref": "#/components/schemas/TenantState"
          default: active
        security_enabled:
          type: boolean
          default: false
          title: Security Enabled
        privacy_policy:
          anyOf:
            - type: string
              format: uri
              maxLength: 2083
              minLength: 1
            - type: 'null'
          title: Privacy Policy
      required:
        - name
      title: TenantPublic
    TenantState:
      type: string
      enum:
        - active
        - suspended
      title: TenantState
    TenantUpdatePublic:
      type: object
      properties:
        display_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Display Name
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
        zitadel_org_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Zitadel Org Id
        provisioning:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Provisioning
        state:
          anyOf:
            - "$ref": "#/components/schemas/TenantState"
            - type: 'null'
        security_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Security Enabled
      title: TenantUpdatePublic
    TokenUsageSummary:
      type: object
      properties:
        start_date:
          type: string
          format: date-time
          title: Start Date
        end_date:
          type: string
          format: date-time
          title: End Date
        models:
          type: array
          items:
            "$ref": "#/components/schemas/ModelUsage"
          title: Models
        total_input_token_usage:
          type: integer
          description: Total input token usage across all models
          title: Total Input Token Usage
        total_output_token_usage:
          type: integer
          description: Total output token usage across all models
          title: Total Output Token Usage
        total_token_usage:
          type: integer
          description: Total combined token usage across all models
          title: Total Token Usage
      required:
        - end_date
        - models
        - start_date
        - total_input_token_usage
        - total_output_token_usage
        - total_token_usage
      title: TokenUsageSummary
    ToolAssistant:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        handle:
          type: string
          title: Handle
      required:
        - handle
        - id
      title: ToolAssistant
    TranscriptionModelPublic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        nickname:
          type: string
          title: Nickname
        family:
          "$ref": "#/components/schemas/ModelFamily"
        is_deprecated:
          type: boolean
          title: Is Deprecated
        stability:
          "$ref": "#/components/schemas/ModelStability"
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        can_access:
          type: boolean
          default: false
          title: Can Access
        is_locked:
          type: boolean
          default: true
          title: Is Locked
        is_org_enabled:
          type: boolean
          default: false
          title: Is Org Enabled
        is_org_default:
          type: boolean
          default: false
          title: Is Org Default
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
      required:
        - family
        - hosting
        - id
        - is_deprecated
        - name
        - nickname
        - stability
      title: TranscriptionModelPublic
    TranscriptionModelSecurityStatus:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        nickname:
          type: string
          title: Nickname
        family:
          "$ref": "#/components/schemas/ModelFamily"
        is_deprecated:
          type: boolean
          title: Is Deprecated
        stability:
          "$ref": "#/components/schemas/ModelStability"
        hosting:
          "$ref": "#/components/schemas/ModelHostingLocation"
        open_source:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Open Source
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        hf_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Hf Link
        org:
          anyOf:
            - "$ref": "#/components/schemas/ModelOrg"
            - type: 'null'
        can_access:
          type: boolean
          default: false
          title: Can Access
        is_locked:
          type: boolean
          default: true
          title: Is Locked
        is_org_enabled:
          type: boolean
          default: false
          title: Is Org Enabled
        is_org_default:
          type: boolean
          default: false
          title: Is Org Default
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/SecurityClassificationPublic"
            - type: 'null'
        meets_security_classification:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Meets Security Classification
      required:
        - family
        - hosting
        - id
        - is_deprecated
        - name
        - nickname
        - stability
      title: TranscriptionModelSecurityStatus
    TranscriptionModelUpdate:
      type: object
      properties:
        is_org_enabled:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Org Enabled
        is_org_default:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Org Default
        security_classification:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          default: NOT_PROVIDED
          title: Security Classification
      title: TranscriptionModelUpdate
    TransferApplicationRequest:
      type: object
      properties:
        target_space_id:
          type: string
          format: uuid
          title: Target Space Id
        move_resources:
          type: boolean
          default: false
          title: Move Resources
      required:
        - target_space_id
      title: TransferApplicationRequest
    TransferRequest:
      type: object
      properties:
        target_space_id:
          type: string
          format: uuid
          title: Target Space Id
      required:
        - target_space_id
      title: TransferRequest
    UpdateInterval:
      type: string
      enum:
        - never
        - weekly
      title: UpdateInterval
    UpdateSpaceDryRunResponse:
      type: object
      properties:
        assistants:
          type: array
          items:
            "$ref": "#/components/schemas/AssistantSparse"
          title: Assistants
        group_chats:
          type: array
          items:
            "$ref": "#/components/schemas/GroupChatSparse"
          title: Group Chats
        services:
          type: array
          items:
            "$ref": "#/components/schemas/ServiceSparse"
          title: Services
        apps:
          type: array
          items:
            "$ref": "#/components/schemas/AppSparse"
          title: Apps
        completion_models:
          type: array
          items:
            "$ref": "#/components/schemas/CompletionModelPublic"
          title: Completion Models
        embedding_models:
          type: array
          items:
            "$ref": "#/components/schemas/EmbeddingModelPublic"
          title: Embedding Models
        transcription_models:
          type: array
          items:
            "$ref": "#/components/schemas/TranscriptionModelPublic"
          title: Transcription Models
      required:
        - apps
        - assistants
        - completion_models
        - embedding_models
        - group_chats
        - services
        - transcription_models
      title: UpdateSpaceDryRunResponse
    UpdateSpaceMemberRequest:
      type: object
      properties:
        role:
          "$ref": "#/components/schemas/SpaceRoleValue"
      required:
        - role
      title: UpdateSpaceMemberRequest
    UseTools:
      type: object
      properties:
        assistants:
          type: array
          items:
            "$ref": "#/components/schemas/ToolAssistant"
          title: Assistants
      required:
        - assistants
      title: UseTools
    UserAddAdmin:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Valid email address
          examples:
            - john.doe@municipality.se
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          description: Unique username (optional, will use email prefix if not provided)
          examples:
            - john.doe
          title: Username
        password:
          anyOf:
            - type: string
              maxLength: 100
              minLength: 7
            - type: 'null'
          description: User password (minimum 7 characters)
          examples:
            - SecurePassword123!
          title: Password
        quota_limit:
          anyOf:
            - type: integer
              minimum: 1000
            - type: 'null'
          description: Storage limit in bytes (minimum 1000 bytes = 1KB)
          examples:
            - 50000000
          title: Quota Limit
        roles:
          type: array
          default: []
          description: List of custom role IDs to assign to the user
          examples:
            - []
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Roles
        predefined_roles:
          type: array
          default: []
          description: List of predefined role IDs to assign to the user
          examples:
            - []
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Predefined Roles
      required:
        - email
      title: UserAddAdmin
    UserAddSuperAdmin:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Valid email address
          examples:
            - john.doe@municipality.se
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          description: Unique username (optional, will use email prefix if not provided)
          examples:
            - john.doe
          title: Username
        password:
          anyOf:
            - type: string
              maxLength: 100
              minLength: 7
            - type: 'null'
          description: User password (minimum 7 characters)
          examples:
            - SecurePassword123!
          title: Password
        quota_limit:
          anyOf:
            - type: integer
              minimum: 1000
            - type: 'null'
          description: Storage limit in bytes (minimum 1000 bytes = 1KB)
          examples:
            - 50000000
          title: Quota Limit
        roles:
          type: array
          default: []
          description: List of custom role IDs to assign to the user
          examples:
            - []
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Roles
        predefined_roles:
          type: array
          default: []
          description: List of predefined role IDs to assign to the user
          examples:
            - []
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Predefined Roles
        tenant_id:
          type: string
          format: uuid
          title: Tenant Id
      required:
        - email
        - tenant_id
      title: UserAddSuperAdmin
    UserAdminView:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Valid email address
          examples:
            - john.doe@municipality.se
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          description: Unique username (optional, will use email prefix if not provided)
          examples:
            - john.doe
          title: Username
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        quota_used:
          type: integer
          default: 0
          title: Quota Used
        used_tokens:
          type: integer
          title: Used Tokens
        email_verified:
          type: boolean
          title: Email Verified
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        is_active:
          type: boolean
          title: Is Active
        state:
          "$ref": "#/components/schemas/UserState"
        roles:
          type: array
          items:
            "$ref": "#/components/schemas/RolePublic"
          title: Roles
        predefined_roles:
          type: array
          items:
            "$ref": "#/components/schemas/PredefinedRolePublic"
          title: Predefined Roles
        user_groups:
          type: array
          items:
            "$ref": "#/components/schemas/UserGroupRead"
          title: User Groups
      required:
        - email
        - email_verified
        - id
        - is_active
        - predefined_roles
        - quota_limit
        - roles
        - state
        - used_tokens
        - user_groups
      title: UserAdminView
    UserCreated:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Valid email address
          examples:
            - john.doe@municipality.se
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          description: Unique username (optional, will use email prefix if not provided)
          examples:
            - john.doe
          title: Username
        id:
          type: string
          format: uuid
          title: Id
        password:
          anyOf:
            - type: string
              maxLength: 100
              minLength: 7
            - type: 'null'
          title: Password
        salt:
          anyOf:
            - type: string
            - type: 'null'
          title: Salt
        used_tokens:
          type: integer
          default: 0
          title: Used Tokens
        email_verified:
          type: boolean
          default: false
          title: Email Verified
        is_active:
          type: boolean
          default: true
          title: Is Active
        state:
          "$ref": "#/components/schemas/UserState"
        tenant_id:
          type: string
          format: uuid
          title: Tenant Id
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        roles:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/RoleInDB"
          title: Roles
        predefined_roles:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/PredefinedRoleInDB"
          title: Predefined Roles
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        user_groups:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/UserGroupInDBRead"
          title: User Groups
        tenant:
          "$ref": "#/components/schemas/TenantInDB"
        api_key:
          anyOf:
            - "$ref": "#/components/schemas/ApiKey"
            - type: 'null'
        quota_used:
          type: integer
          default: 0
          title: Quota Used
        deleted_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          description: Timestamp when user was soft-deleted (null for active users)
          title: Deleted At
        access_token:
          anyOf:
            - "$ref": "#/components/schemas/AccessToken"
            - type: 'null'
        modules:
          type: array
          items:
            type: string
          readOnly: true
          title: Modules
        user_groups_ids:
          type: array
          items:
            type: integer
          readOnly: true
          title: User Groups Ids
          uniqueItems: true
        permissions:
          type: array
          items:
            "$ref": "#/components/schemas/Permission"
          readOnly: true
          title: Permissions
          uniqueItems: true
      required:
        - access_token
        - api_key
        - email
        - id
        - modules
        - permissions
        - state
        - tenant
        - tenant_id
        - user_groups_ids
      title: UserCreated
    UserCreatedAdminView:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Valid email address
          examples:
            - john.doe@municipality.se
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          description: Unique username (optional, will use email prefix if not provided)
          examples:
            - john.doe
          title: Username
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        quota_used:
          type: integer
          default: 0
          title: Quota Used
        used_tokens:
          type: integer
          title: Used Tokens
        email_verified:
          type: boolean
          title: Email Verified
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        is_active:
          type: boolean
          title: Is Active
        state:
          "$ref": "#/components/schemas/UserState"
        roles:
          type: array
          items:
            "$ref": "#/components/schemas/RolePublic"
          title: Roles
        predefined_roles:
          type: array
          items:
            "$ref": "#/components/schemas/PredefinedRolePublic"
          title: Predefined Roles
        user_groups:
          type: array
          items:
            "$ref": "#/components/schemas/UserGroupRead"
          title: User Groups
        api_key:
          "$ref": "#/components/schemas/ApiKey"
      required:
        - api_key
        - email
        - email_verified
        - id
        - is_active
        - predefined_roles
        - quota_limit
        - roles
        - state
        - used_tokens
        - user_groups
      title: UserCreatedAdminView
    UserDeletedListItem:
      type: object
      description: User information for deleted users list operations
      properties:
        username:
          type: string
          description: User's unique username
          examples:
            - former.employee
          title: Username
        email:
          type: string
          description: User's email address
          examples:
            - former.employee@municipality.se
          title: Email
        state:
          type: string
          description: User's current state (always 'deleted' for this list)
          examples:
            - deleted
          title: State
        deleted_at:
          type: string
          format: date-time
          description: When the user was deleted (for external tracking)
          examples:
            - '2025-08-15T14:20:00Z'
          title: Deleted At
      required:
        - deleted_at
        - email
        - state
        - username
      title: UserDeletedListItem
    UserGroupCreateRequest:
      type: object
      properties:
        name:
          type: string
          title: Name
      required:
        - name
      title: UserGroupCreateRequest
    UserGroupInDBRead:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
      required:
        - id
        - name
      title: UserGroupInDBRead
    UserGroupPublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
        users:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/UserPublicBase"
          title: Users
      required:
        - id
        - name
      title: UserGroupPublic
    UserGroupRead:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
      required:
        - id
        - name
      title: UserGroupRead
    UserGroupUpdateRequest:
      type: object
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        users:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Users
      title: UserGroupUpdateRequest
    UserInDB:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Valid email address
          examples:
            - john.doe@municipality.se
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          description: Unique username (optional, will use email prefix if not provided)
          examples:
            - john.doe
          title: Username
        id:
          type: string
          format: uuid
          title: Id
        password:
          anyOf:
            - type: string
              maxLength: 100
              minLength: 7
            - type: 'null'
          title: Password
        salt:
          anyOf:
            - type: string
            - type: 'null'
          title: Salt
        used_tokens:
          type: integer
          default: 0
          title: Used Tokens
        email_verified:
          type: boolean
          default: false
          title: Email Verified
        is_active:
          type: boolean
          default: true
          title: Is Active
        state:
          "$ref": "#/components/schemas/UserState"
        tenant_id:
          type: string
          format: uuid
          title: Tenant Id
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        roles:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/RoleInDB"
          title: Roles
        predefined_roles:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/PredefinedRoleInDB"
          title: Predefined Roles
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        user_groups:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/UserGroupInDBRead"
          title: User Groups
        tenant:
          "$ref": "#/components/schemas/TenantInDB"
        api_key:
          anyOf:
            - "$ref": "#/components/schemas/ApiKeyInDB"
            - type: 'null'
        quota_used:
          type: integer
          default: 0
          title: Quota Used
        deleted_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          description: Timestamp when user was soft-deleted (null for active users)
          title: Deleted At
        modules:
          type: array
          items:
            type: string
          readOnly: true
          title: Modules
        user_groups_ids:
          type: array
          items:
            type: integer
          readOnly: true
          title: User Groups Ids
          uniqueItems: true
        permissions:
          type: array
          items:
            "$ref": "#/components/schemas/Permission"
          readOnly: true
          title: Permissions
          uniqueItems: true
      required:
        - email
        - id
        - modules
        - permissions
        - state
        - tenant
        - tenant_id
        - user_groups_ids
      title: UserInDB
    UserIntegration:
      type: object
      properties:
        id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Id
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        integration_type:
          "$ref": "#/components/schemas/IntegrationType"
        tenant_integration_id:
          type: string
          format: uuid
          title: Tenant Integration Id
        connected:
          type: boolean
          title: Connected
      required:
        - connected
        - description
        - integration_type
        - name
        - tenant_integration_id
      title: UserIntegration
    UserIntegrationList:
      type: object
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/UserIntegration"
          title: Items
        count:
          type: integer
          readOnly: true
          title: Count
      required:
        - count
        - items
      title: UserIntegrationList
    UserProvision:
      type: object
      properties:
        zitadel_token:
          type: string
          title: Zitadel Token
      required:
        - zitadel_token
      title: UserProvision
    UserPublic:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Valid email address
          examples:
            - john.doe@municipality.se
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          description: Unique username (optional, will use email prefix if not provided)
          examples:
            - john.doe
          title: Username
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        quota_used:
          type: integer
          default: 0
          title: Quota Used
        truncated_api_key:
          anyOf:
            - type: string
            - type: 'null'
          title: Truncated Api Key
        quota_limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Quota Limit
        roles:
          type: array
          items:
            "$ref": "#/components/schemas/RolePublic"
          title: Roles
        predefined_roles:
          type: array
          items:
            "$ref": "#/components/schemas/PredefinedRolePublic"
          title: Predefined Roles
        user_groups:
          type: array
          items:
            "$ref": "#/components/schemas/UserGroupRead"
          title: User Groups
      required:
        - email
        - id
        - predefined_roles
        - roles
        - user_groups
      title: UserPublic
    UserPublicBase:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Valid email address
          examples:
            - john.doe@municipality.se
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          description: Unique username (optional, will use email prefix if not provided)
          examples:
            - john.doe
          title: Username
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        quota_used:
          type: integer
          default: 0
          title: Quota Used
      required:
        - email
        - id
      title: UserPublicBase
    UserSortBy:
      type: string
      description: Enum for user token usage sorting options
      enum:
        - total_tokens
        - username
        - input_tokens
        - output_tokens
        - requests
      title: UserSortBy
    UserSparse:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        email:
          type: string
          format: email
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          title: Username
      required:
        - email
        - id
      title: UserSparse
    UserState:
      type: string
      enum:
        - invited
        - active
        - inactive
        - deleted
      title: UserState
    UserStateListItem:
      type: object
      description: Minimal user information for state-based list operations
      properties:
        username:
          type: string
          description: User's unique username
          examples:
            - jane.smith
          title: Username
        email:
          type: string
          description: User's email address
          examples:
            - jane.smith@municipality.se
          title: Email
        state:
          type: string
          description: User's current state
          examples:
            - inactive
          title: State
        state_changed_at:
          type: string
          format: date-time
          description: When the user state was last changed
          examples:
            - '2025-09-10T08:30:00Z'
          title: State Changed At
      required:
        - email
        - state
        - state_changed_at
        - username
      title: UserStateListItem
    UserTokenUsage:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          title: User Id
        username:
          type: string
          title: Username
        email:
          type: string
          title: Email
        total_input_tokens:
          type: integer
          description: Total input tokens used by this user
          title: Total Input Tokens
        total_output_tokens:
          type: integer
          description: Total output tokens used by this user
          title: Total Output Tokens
        total_tokens:
          type: integer
          description: Total tokens (input + output)
          title: Total Tokens
        total_requests:
          type: integer
          description: Total number of requests made by this user
          title: Total Requests
        models_used:
          type: array
          description: Models used by this user with their usage
          items:
            "$ref": "#/components/schemas/ModelUsage"
          title: Models Used
      required:
        - email
        - models_used
        - total_input_tokens
        - total_output_tokens
        - total_requests
        - total_tokens
        - user_id
        - username
      title: UserTokenUsage
    UserTokenUsageSummary:
      type: object
      properties:
        users:
          type: array
          description: List of users with their token usage
          items:
            "$ref": "#/components/schemas/UserTokenUsage"
          title: Users
        start_date:
          type: string
          format: date-time
          title: Start Date
        end_date:
          type: string
          format: date-time
          title: End Date
        total_users:
          type: integer
          description: Total number of users with token usage
          title: Total Users
        total_input_tokens:
          type: integer
          description: Total input tokens across all users
          title: Total Input Tokens
        total_output_tokens:
          type: integer
          description: Total output tokens across all users
          title: Total Output Tokens
        total_tokens:
          type: integer
          description: Total tokens across all users
          title: Total Tokens
        total_requests:
          type: integer
          description: Total requests across all users
          title: Total Requests
      required:
        - end_date
        - start_date
        - total_input_tokens
        - total_output_tokens
        - total_requests
        - total_tokens
        - total_users
        - users
      title: UserTokenUsageSummary
    UserTokenUsageSummaryDetail:
      type: object
      description: Response model for single user detail endpoint
      properties:
        user:
          "$ref": "#/components/schemas/UserTokenUsage"
      required:
        - user
      title: UserTokenUsageSummaryDetail
    UserUpdatePublic:
      type: object
      properties:
        email:
          anyOf:
            - type: string
              format: email
            - type: 'null'
          description: New email address (must be unique within tenant)
          examples:
            - updated.email@municipality.se
          title: Email
        username:
          anyOf:
            - type: string
            - type: 'null'
          description: Username cannot be updated after creation
          title: Username
        password:
          anyOf:
            - type: string
              maxLength: 100
              minLength: 7
            - type: 'null'
          description: New password (minimum 7 characters)
          examples:
            - NewSecurePassword456!
          title: Password
        quota_limit:
          anyOf:
            - type: integer
              minimum: 1000
            - type: 'null'
          description: New storage limit in bytes (minimum 1000 bytes = 1KB)
          examples:
            - 100000000
          title: Quota Limit
        roles:
          anyOf:
            - type: array
              items:
                "$ref": "#/components/schemas/ModelId"
            - type: 'null'
          description: List of custom role IDs to assign (replaces existing roles)
          examples:
            - []
          title: Roles
        predefined_roles:
          type: array
          description: List of predefined role IDs to assign (replaces existing predefined
            roles)
          examples:
            - []
          items:
            "$ref": "#/components/schemas/ModelId"
          title: Predefined Roles
        state:
          anyOf:
            - "$ref": "#/components/schemas/UserState"
            - type: 'null'
          description: User state (invited/active/inactive)
          examples:
            - active
      title: UserUpdatePublic
    ValidationError:
      type: object
      properties:
        loc:
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      required:
        - loc
        - msg
        - type
      title: ValidationError
    WebSearchResultPublic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          title: Id
        title:
          type: string
          title: Title
        url:
          type: string
          title: Url
      required:
        - id
        - title
        - url
      title: WebSearchResultPublic
    WebsiteCreate:
      type: object
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        url:
          type: string
          title: Url
        download_files:
          type: boolean
          default: false
          title: Download Files
        crawl_type:
          "$ref": "#/components/schemas/CrawlType"
          default: crawl
        update_interval:
          "$ref": "#/components/schemas/UpdateInterval"
          default: never
        embedding_model:
          anyOf:
            - "$ref": "#/components/schemas/ModelId"
            - type: 'null'
      required:
        - url
      title: WebsiteCreate
    WebsiteCreateRequestDeprecated:
      type: object
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        url:
          type: string
          format: uri
          maxLength: 2083
          minLength: 1
          title: Url
        space_id:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Space Id
        download_files:
          type: boolean
          default: false
          title: Download Files
        crawl_type:
          "$ref": "#/components/schemas/CrawlType"
          default: crawl
        update_interval:
          "$ref": "#/components/schemas/UpdateInterval"
          default: never
        embedding_model:
          "$ref": "#/components/schemas/ModelId"
      required:
        - embedding_model
        - url
      title: WebsiteCreateRequestDeprecated
    WebsiteMetadata:
      type: object
      properties:
        size:
          type: integer
          title: Size
      required:
        - size
      title: WebsiteMetadata
    WebsitePublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        permissions:
          type: array
          default: []
          items:
            "$ref": "#/components/schemas/ResourcePermission"
          title: Permissions
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        url:
          type: string
          title: Url
        space_id:
          type: string
          format: uuid
          title: Space Id
        download_files:
          type: boolean
          title: Download Files
        crawl_type:
          "$ref": "#/components/schemas/CrawlType"
        update_interval:
          "$ref": "#/components/schemas/UpdateInterval"
        latest_crawl:
          anyOf:
            - "$ref": "#/components/schemas/intric__websites__presentation__website_models__CrawlRunPublic"
            - type: 'null'
        embedding_model:
          "$ref": "#/components/schemas/EmbeddingModelPublic"
        metadata:
          "$ref": "#/components/schemas/WebsiteMetadata"
      required:
        - crawl_type
        - download_files
        - embedding_model
        - id
        - latest_crawl
        - metadata
        - name
        - space_id
        - update_interval
        - url
      title: WebsitePublic
    WebsiteUpdate:
      type: object
      properties:
        url:
          type: string
          default: NOT_PROVIDED
          title: Url
        name:
          anyOf:
            - type: string
            - type: 'null'
          default: NOT_PROVIDED
          title: Name
        download_files:
          type: boolean
          default: NOT_PROVIDED
          title: Download Files
        crawl_type:
          "$ref": "#/components/schemas/CrawlType"
          default: NOT_PROVIDED
          title: Crawl Type
        update_interval:
          "$ref": "#/components/schemas/UpdateInterval"
          default: NOT_PROVIDED
          title: Update Interval
      title: WebsiteUpdate
    WizardType:
      type: string
      enum:
        - attachments
        - groups
      title: WizardType
    intric__websites__crawl_dependencies__crawl_models__CrawlRunPublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        pages_crawled:
          anyOf:
            - type: integer
            - type: 'null'
          title: Pages Crawled
        files_downloaded:
          anyOf:
            - type: integer
            - type: 'null'
          title: Files Downloaded
        pages_failed:
          anyOf:
            - type: integer
            - type: 'null'
          title: Pages Failed
        files_failed:
          anyOf:
            - type: integer
            - type: 'null'
          title: Files Failed
        status:
          anyOf:
            - "$ref": "#/components/schemas/Status"
            - type: 'null'
          default: queued
        result_location:
          anyOf:
            - type: string
            - type: 'null'
          title: Result Location
        finished_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Finished At
      required:
        - id
      title: CrawlRunPublic
    intric__websites__presentation__website_models__CrawlRunPublic:
      type: object
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          format: uuid
          title: Id
        pages_crawled:
          anyOf:
            - type: integer
            - type: 'null'
          title: Pages Crawled
        files_downloaded:
          anyOf:
            - type: integer
            - type: 'null'
          title: Files Downloaded
        pages_failed:
          anyOf:
            - type: integer
            - type: 'null'
          title: Pages Failed
        files_failed:
          anyOf:
            - type: integer
            - type: 'null'
          title: Files Failed
        status:
          "$ref": "#/components/schemas/Status"
        result_location:
          anyOf:
            - type: string
            - type: 'null'
          title: Result Location
        finished_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Finished At
      required:
        - files_downloaded
        - files_failed
        - finished_at
        - id
        - pages_crawled
        - pages_failed
        - result_location
        - status
      title: CrawlRunPublic
    IntricEventType:
      type: string
      enum:
        - generating_image
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          tokenUrl: "/api/v1/users/login/token/"
          scopes: {}
    APIKeyHeader:
      type: apiKey
      name: api-key
      in: header
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://api-i-test.sundsvall.se/authorize
          scopes: {}
x-wso2-api-key-header: ApiKey
